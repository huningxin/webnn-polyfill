!function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=81)}([function(e,t,n){"use strict";n.r(t),n.d(t,"AdadeltaOptimizer",(function(){return en})),n.d(t,"AdagradOptimizer",(function(){return nn})),n.d(t,"AdamOptimizer",(function(){return on})),n.d(t,"AdamaxOptimizer",(function(){return hn})),n.d(t,"MomentumOptimizer",(function(){return fn})),n.d(t,"Optimizer",(function(){return Jt})),n.d(t,"RMSPropOptimizer",(function(){return mn})),n.d(t,"SGDOptimizer",(function(){return pn})),n.d(t,"Tensor",(function(){return q.a})),n.d(t,"TensorBuffer",(function(){return q.b})),n.d(t,"Variable",(function(){return q.c})),n.d(t,"Rank",(function(){return bn.a})),n.d(t,"sumOutType",(function(){return bn.b})),n.d(t,"upcastType",(function(){return bn.c})),n.d(t,"abs",(function(){return sn})),n.d(t,"acos",(function(){return gn})),n.d(t,"acosh",(function(){return xn})),n.d(t,"add",(function(){return Pt})),n.d(t,"addN",(function(){return vn})),n.d(t,"all",(function(){return kn})),n.d(t,"any",(function(){return yn})),n.d(t,"argMax",(function(){return wn})),n.d(t,"argMin",(function(){return In})),n.d(t,"asin",(function(){return On})),n.d(t,"asinh",(function(){return Cn})),n.d(t,"atan",(function(){return Tn})),n.d(t,"atan2",(function(){return $n})),n.d(t,"atanh",(function(){return Sn})),n.d(t,"avgPool",(function(){return Vn})),n.d(t,"avgPool3d",(function(){return Un})),n.d(t,"basicLSTMCell",(function(){return Xn})),n.d(t,"batchToSpaceND",(function(){return Yn})),n.d(t,"batchNorm",(function(){return Qn})),n.d(t,"batchNorm2d",(function(){return Zn})),n.d(t,"batchNorm3d",(function(){return Jn})),n.d(t,"batchNorm4d",(function(){return er})),n.d(t,"bincount",(function(){return tr})),n.d(t,"broadcastTo",(function(){return nr})),n.d(t,"buffer",(function(){return X})),n.d(t,"cast",(function(){return J})),n.d(t,"ceil",(function(){return rr})),n.d(t,"clipByValue",(function(){return ar})),n.d(t,"clone",(function(){return ee})),n.d(t,"complex",(function(){return or.a})),n.d(t,"concat",(function(){return Gn})),n.d(t,"concat1d",(function(){return sr})),n.d(t,"concat2d",(function(){return ir})),n.d(t,"concat3d",(function(){return ur})),n.d(t,"concat4d",(function(){return cr})),n.d(t,"conv1d",(function(){return dr})),n.d(t,"conv2d",(function(){return lr})),n.d(t,"conv2dTranspose",(function(){return pr})),n.d(t,"conv3d",(function(){return fr})),n.d(t,"conv3dTranspose",(function(){return br})),n.d(t,"cos",(function(){return gr})),n.d(t,"cosh",(function(){return xr})),n.d(t,"cumsum",(function(){return vr})),n.d(t,"denseBincount",(function(){return kr})),n.d(t,"depthToSpace",(function(){return yr})),n.d(t,"depthwiseConv2d",(function(){return wr})),n.d(t,"diag",(function(){return Ir})),n.d(t,"dilation2d",(function(){return Or})),n.d(t,"div",(function(){return Lt})),n.d(t,"divNoNan",(function(){return $r})),n.d(t,"dot",(function(){return Sr})),n.d(t,"elu",(function(){return Er})),n.d(t,"equal",(function(){return Cr})),n.d(t,"erf",(function(){return Nr})),n.d(t,"exp",(function(){return _r})),n.d(t,"expandDims",(function(){return Ar})),n.d(t,"expm1",(function(){return Rr})),n.d(t,"eye",(function(){return jr})),n.d(t,"fill",(function(){return tn})),n.d(t,"floor",(function(){return Dr})),n.d(t,"floorDiv",(function(){return Bt})),n.d(t,"gather",(function(){return Mr})),n.d(t,"greater",(function(){return Pr})),n.d(t,"greaterEqual",(function(){return Br})),n.d(t,"imag",(function(){return Lr})),n.d(t,"isFinite",(function(){return Wr})),n.d(t,"isInf",(function(){return zr})),n.d(t,"isNaN",(function(){return Vr})),n.d(t,"leakyRelu",(function(){return Ur})),n.d(t,"less",(function(){return Gr})),n.d(t,"lessEqual",(function(){return Hr})),n.d(t,"linspace",(function(){return Kr})),n.d(t,"localResponseNormalization",(function(){return qr})),n.d(t,"log",(function(){return Xr})),n.d(t,"log1p",(function(){return Yr})),n.d(t,"logSigmoid",(function(){return Jr})),n.d(t,"logSoftmax",(function(){return na})),n.d(t,"logSumExp",(function(){return da})),n.d(t,"logicalAnd",(function(){return ha})),n.d(t,"logicalNot",(function(){return pa})),n.d(t,"logicalOr",(function(){return fa})),n.d(t,"logicalXor",(function(){return ma})),n.d(t,"matMul",(function(){return we})),n.d(t,"max",(function(){return ea})),n.d(t,"maxPool",(function(){return ba})),n.d(t,"maxPool3d",(function(){return ga})),n.d(t,"maxPoolWithArgmax",(function(){return xa})),n.d(t,"maximum",(function(){return dn})),n.d(t,"mean",(function(){return va})),n.d(t,"min",(function(){return ka})),n.d(t,"minimum",(function(){return ya})),n.d(t,"mirrorPad",(function(){return wa})),n.d(t,"mod",(function(){return Ia})),n.d(t,"moments",(function(){return Oa})),n.d(t,"mul",(function(){return Wt})),n.d(t,"multiRNNCell",(function(){return Ca})),n.d(t,"multinomial",(function(){return Ta})),n.d(t,"neg",(function(){return Qr})),n.d(t,"notEqual",(function(){return $a})),n.d(t,"oneHot",(function(){return Ie})),n.d(t,"ones",(function(){return Ea})),n.d(t,"onesLike",(function(){return Na})),n.d(t,"outerProduct",(function(){return _a})),n.d(t,"pad",(function(){return Aa})),n.d(t,"pad1d",(function(){return Ra})),n.d(t,"pad2d",(function(){return Fa})),n.d(t,"pad3d",(function(){return ja})),n.d(t,"pad4d",(function(){return Da})),n.d(t,"pool",(function(){return Pa})),n.d(t,"pow",(function(){return rn})),n.d(t,"prelu",(function(){return Ba})),n.d(t,"print",(function(){return te})),n.d(t,"prod",(function(){return La})),n.d(t,"rand",(function(){return Wa})),n.d(t,"randomGamma",(function(){return Ha})),n.d(t,"randomNormal",(function(){return Ka})),n.d(t,"randomUniform",(function(){return qa})),n.d(t,"range",(function(){return Xa})),n.d(t,"real",(function(){return Ya})),n.d(t,"reciprocal",(function(){return Qa})),n.d(t,"relu",(function(){return Za})),n.d(t,"relu6",(function(){return Ja})),n.d(t,"reshape",(function(){return zn})),n.d(t,"reverse",(function(){return eo})),n.d(t,"reverse1d",(function(){return to})),n.d(t,"reverse2d",(function(){return no})),n.d(t,"reverse3d",(function(){return ro})),n.d(t,"reverse4d",(function(){return ao})),n.d(t,"round",(function(){return oo})),n.d(t,"rsqrt",(function(){return so})),n.d(t,"scalar",(function(){return Zt})),n.d(t,"selu",(function(){return io})),n.d(t,"separableConv2d",(function(){return uo})),n.d(t,"setdiff1dAsync",(function(){return co})),n.d(t,"sigmoid",(function(){return Hn})),n.d(t,"sign",(function(){return lo})),n.d(t,"sin",(function(){return ho})),n.d(t,"sinh",(function(){return po})),n.d(t,"slice",(function(){return Kn})),n.d(t,"slice1d",(function(){return fo})),n.d(t,"slice2d",(function(){return mo})),n.d(t,"slice3d",(function(){return bo})),n.d(t,"slice4d",(function(){return go})),n.d(t,"softmax",(function(){return xo})),n.d(t,"softplus",(function(){return Zr})),n.d(t,"spaceToBatchND",(function(){return Ma})),n.d(t,"fft",(function(){return vo})),n.d(t,"ifft",(function(){return ko})),n.d(t,"irfft",(function(){return yo})),n.d(t,"rfft",(function(){return Io})),n.d(t,"split",(function(){return wo})),n.d(t,"sqrt",(function(){return zt})),n.d(t,"square",(function(){return Vt})),n.d(t,"squaredDifference",(function(){return Oo})),n.d(t,"squeeze",(function(){return Co})),n.d(t,"stack",(function(){return To})),n.d(t,"step",(function(){return $o})),n.d(t,"stridedSlice",(function(){return So})),n.d(t,"sub",(function(){return an})),n.d(t,"sum",(function(){return ta})),n.d(t,"tan",(function(){return Eo})),n.d(t,"tanh",(function(){return qn})),n.d(t,"tensor",(function(){return No.a})),n.d(t,"tensor1d",(function(){return _o})),n.d(t,"tensor2d",(function(){return Ao})),n.d(t,"tensor3d",(function(){return Se})),n.d(t,"tensor4d",(function(){return Ro})),n.d(t,"tensor5d",(function(){return Fo})),n.d(t,"tensor6d",(function(){return jo})),n.d(t,"tile",(function(){return Fr})),n.d(t,"topk",(function(){return Do})),n.d(t,"truncatedNormal",(function(){return Mo})),n.d(t,"unique",(function(){return Po})),n.d(t,"unsortedSegmentSum",(function(){return Bo})),n.d(t,"unstack",(function(){return Lo})),n.d(t,"variable",(function(){return Wo})),n.d(t,"where",(function(){return Tr})),n.d(t,"whereAsync",(function(){return Vo})),n.d(t,"zeros",(function(){return Sa})),n.d(t,"zerosLike",(function(){return Ut})),n.d(t,"booleanMaskAsync",(function(){return Uo})),n.d(t,"transpose",(function(){return Oe})),n.d(t,"norm",(function(){return Go})),n.d(t,"movingAverage",(function(){return Ho})),n.d(t,"scatterND",(function(){return Ko})),n.d(t,"sparseToDense",(function(){return qo})),n.d(t,"gatherND",(function(){return Xo})),n.d(t,"dropout",(function(){return Yo})),n.d(t,"enclosingPowerOfTwo",(function(){return Qo})),n.d(t,"cosineWindow",(function(){return Zo})),n.d(t,"inTopKAsync",(function(){return Jo})),n.d(t,"op",(function(){return Z.b})),n.d(t,"OP_SCOPE_SUFFIX",(function(){return Z.a})),n.d(t,"image",(function(){return Zs})),n.d(t,"linalg",(function(){return Js})),n.d(t,"losses",(function(){return ei})),n.d(t,"spectral",(function(){return Ys})),n.d(t,"fused",(function(){return d})),n.d(t,"signal",(function(){return Qs})),n.d(t,"Reduction",(function(){return Ls})),n.d(t,"train",(function(){return ni})),n.d(t,"enableProdMode",(function(){return gt})),n.d(t,"enableDebugMode",(function(){return xt})),n.d(t,"disableDeprecationWarnings",(function(){return vt})),n.d(t,"deprecationWarn",(function(){return kt})),n.d(t,"disposeVariables",(function(){return yt})),n.d(t,"engine",(function(){return wt})),n.d(t,"memory",(function(){return It})),n.d(t,"profile",(function(){return Ot})),n.d(t,"tidy",(function(){return Ct})),n.d(t,"dispose",(function(){return Tt})),n.d(t,"keep",(function(){return $t})),n.d(t,"time",(function(){return St})),n.d(t,"setBackend",(function(){return Et})),n.d(t,"ready",(function(){return Nt})),n.d(t,"getBackend",(function(){return _t})),n.d(t,"removeBackend",(function(){return At})),n.d(t,"findBackend",(function(){return Rt})),n.d(t,"findBackendFactory",(function(){return Ft})),n.d(t,"registerBackend",(function(){return jt})),n.d(t,"backend",(function(){return Dt})),n.d(t,"setPlatform",(function(){return Mt})),n.d(t,"getKernel",(function(){return Te.c})),n.d(t,"getGradient",(function(){return Te.b})),n.d(t,"getKernelsForBackend",(function(){return Te.d})),n.d(t,"registerKernel",(function(){return Te.f})),n.d(t,"registerGradient",(function(){return Te.e})),n.d(t,"unregisterKernel",(function(){return Te.h})),n.d(t,"unregisterGradient",(function(){return Te.g})),n.d(t,"copyRegisteredKernels",(function(){return Te.a})),n.d(t,"customGrad",(function(){return Yt})),n.d(t,"grad",(function(){return Gt})),n.d(t,"grads",(function(){return Ht})),n.d(t,"valueAndGrad",(function(){return Kt})),n.d(t,"valueAndGrads",(function(){return qt})),n.d(t,"variableGrads",(function(){return Xt})),n.d(t,"Environment",(function(){return b.b})),n.d(t,"env",(function(){return b.c})),n.d(t,"ENV",(function(){return b.a})),n.d(t,"version_core",(function(){return bt})),n.d(t,"nextFrame",(function(){return ri.a})),n.d(t,"browser",(function(){return o})),n.d(t,"io",(function(){return r})),n.d(t,"math",(function(){return a})),n.d(t,"serialization",(function(){return c})),n.d(t,"test_util",(function(){return l})),n.d(t,"util",(function(){return at})),n.d(t,"backend_util",(function(){return p})),n.d(t,"tensor_util",(function(){return ye})),n.d(t,"slice_util",(function(){return u})),n.d(t,"gather_util",(function(){return s})),n.d(t,"scatter_util",(function(){return i})),n.d(t,"device_util",(function(){return Pi})),n.d(t,"kernel_impls",(function(){return f})),n.d(t,"KernelBackend",(function(){return Bi.b})),n.d(t,"DataStorage",(function(){return Bi.a})),n.d(t,"Abs",(function(){return Y.a})),n.d(t,"Acos",(function(){return Y.b})),n.d(t,"Acosh",(function(){return Y.c})),n.d(t,"Add",(function(){return Y.d})),n.d(t,"AddN",(function(){return Y.e})),n.d(t,"All",(function(){return Y.f})),n.d(t,"Any",(function(){return Y.g})),n.d(t,"ArgMax",(function(){return Y.h})),n.d(t,"ArgMin",(function(){return Y.i})),n.d(t,"Asin",(function(){return Y.j})),n.d(t,"Asinh",(function(){return Y.k})),n.d(t,"Atan",(function(){return Y.l})),n.d(t,"Atanh",(function(){return Y.n})),n.d(t,"Atan2",(function(){return Y.m})),n.d(t,"AvgPool",(function(){return Y.o})),n.d(t,"AvgPoolGrad",(function(){return Y.r})),n.d(t,"AvgPool3D",(function(){return Y.p})),n.d(t,"AvgPool3DGrad",(function(){return Y.q})),n.d(t,"BatchMatMul",(function(){return Y.s})),n.d(t,"BatchToSpaceND",(function(){return Y.t})),n.d(t,"Bincount",(function(){return Y.u})),n.d(t,"BroadcastTo",(function(){return Y.v})),n.d(t,"Cast",(function(){return Y.w})),n.d(t,"Ceil",(function(){return Y.x})),n.d(t,"ClipByValue",(function(){return Y.y})),n.d(t,"Complex",(function(){return Y.z})),n.d(t,"ComplexAbs",(function(){return Y.A})),n.d(t,"Concat",(function(){return Y.B})),n.d(t,"Conv2D",(function(){return Y.C})),n.d(t,"Conv2DBackpropFilter",(function(){return Y.D})),n.d(t,"Conv2DBackpropInput",(function(){return Y.E})),n.d(t,"Conv3D",(function(){return Y.F})),n.d(t,"Conv3DBackpropFilterV2",(function(){return Y.G})),n.d(t,"Conv3DBackpropInputV2",(function(){return Y.H})),n.d(t,"Cos",(function(){return Y.I})),n.d(t,"Cosh",(function(){return Y.J})),n.d(t,"Cumsum",(function(){return Y.L})),n.d(t,"CropAndResize",(function(){return Y.K})),n.d(t,"DenseBincount",(function(){return Y.M})),n.d(t,"DepthToSpace",(function(){return Y.N})),n.d(t,"DepthwiseConv2dNative",(function(){return Y.O})),n.d(t,"DepthwiseConv2dNativeBackpropFilter",(function(){return Y.P})),n.d(t,"DepthwiseConv2dNativeBackpropInput",(function(){return Y.Q})),n.d(t,"Diag",(function(){return Y.R})),n.d(t,"Dilation2D",(function(){return Y.S})),n.d(t,"Dilation2DBackpropInput",(function(){return Y.U})),n.d(t,"Dilation2DBackpropFilter",(function(){return Y.T})),n.d(t,"RealDiv",(function(){return Y.kc})),n.d(t,"Elu",(function(){return Y.V})),n.d(t,"EluGrad",(function(){return Y.W})),n.d(t,"Erf",(function(){return Y.Y})),n.d(t,"Equal",(function(){return Y.X})),n.d(t,"Exp",(function(){return Y.Z})),n.d(t,"ExpandDims",(function(){return Y.ab})),n.d(t,"Expm1",(function(){return Y.bb})),n.d(t,"FFT",(function(){return Y.cb})),n.d(t,"Fill",(function(){return Y.db})),n.d(t,"FlipLeftRight",(function(){return Y.eb})),n.d(t,"Floor",(function(){return Y.fb})),n.d(t,"FloorDiv",(function(){return Y.gb})),n.d(t,"FusedBatchNorm",(function(){return Y.ib})),n.d(t,"GatherV2",(function(){return Y.mb})),n.d(t,"GatherNd",(function(){return Y.lb})),n.d(t,"Greater",(function(){return Y.nb})),n.d(t,"GreaterEqual",(function(){return Y.ob})),n.d(t,"Identity",(function(){return Y.qb})),n.d(t,"IFFT",(function(){return Y.pb})),n.d(t,"Imag",(function(){return Y.rb})),n.d(t,"IsFinite",(function(){return Y.sb})),n.d(t,"IsInf",(function(){return Y.tb})),n.d(t,"IsNan",(function(){return Y.ub})),n.d(t,"LeakyRelu",(function(){return Y.xb})),n.d(t,"Less",(function(){return Y.yb})),n.d(t,"LessEqual",(function(){return Y.zb})),n.d(t,"LinSpace",(function(){return Y.Ab})),n.d(t,"Log",(function(){return Y.Bb})),n.d(t,"Log1p",(function(){return Y.Cb})),n.d(t,"LogicalAnd",(function(){return Y.Eb})),n.d(t,"LogicalNot",(function(){return Y.Fb})),n.d(t,"LogicalOr",(function(){return Y.Gb})),n.d(t,"LogSoftmax",(function(){return Y.Db})),n.d(t,"LRN",(function(){return Y.vb})),n.d(t,"LRNGrad",(function(){return Y.wb})),n.d(t,"Max",(function(){return Y.Hb})),n.d(t,"Maximum",(function(){return Y.Nb})),n.d(t,"MaxPool",(function(){return Y.Ib})),n.d(t,"MaxPoolGrad",(function(){return Y.Lb})),n.d(t,"MaxPool3D",(function(){return Y.Jb})),n.d(t,"MaxPool3DGrad",(function(){return Y.Kb})),n.d(t,"MaxPoolWithArgmax",(function(){return Y.Mb})),n.d(t,"Mean",(function(){return Y.Ob})),n.d(t,"Min",(function(){return Y.Pb})),n.d(t,"Minimum",(function(){return Y.Qb})),n.d(t,"MirrorPad",(function(){return Y.Rb})),n.d(t,"Mod",(function(){return Y.Sb})),n.d(t,"Multinomial",(function(){return Y.Tb})),n.d(t,"Multiply",(function(){return Y.Ub})),n.d(t,"Neg",(function(){return Y.Vb})),n.d(t,"NotEqual",(function(){return Y.Zb})),n.d(t,"NonMaxSuppressionV3",(function(){return Y.Wb})),n.d(t,"NonMaxSuppressionV4",(function(){return Y.Xb})),n.d(t,"NonMaxSuppressionV5",(function(){return Y.Yb})),n.d(t,"OnesLike",(function(){return Y.bc})),n.d(t,"OneHot",(function(){return Y.ac})),n.d(t,"Pack",(function(){return Y.cc})),n.d(t,"PadV2",(function(){return Y.dc})),n.d(t,"Pool",(function(){return Y.ec})),n.d(t,"Pow",(function(){return Y.fc})),n.d(t,"Prelu",(function(){return Y.gc})),n.d(t,"Prod",(function(){return Y.hc})),n.d(t,"Range",(function(){return Y.ic})),n.d(t,"Real",(function(){return Y.jc})),n.d(t,"Reciprocal",(function(){return Y.lc})),n.d(t,"Relu",(function(){return Y.mc})),n.d(t,"Reshape",(function(){return Y.oc})),n.d(t,"ResizeNearestNeighbor",(function(){return Y.rc})),n.d(t,"ResizeNearestNeighborGrad",(function(){return Y.sc})),n.d(t,"ResizeBilinear",(function(){return Y.pc})),n.d(t,"ResizeBilinearGrad",(function(){return Y.qc})),n.d(t,"Relu6",(function(){return Y.nc})),n.d(t,"Reverse",(function(){return Y.tc})),n.d(t,"Round",(function(){return Y.vc})),n.d(t,"Rsqrt",(function(){return Y.wc})),n.d(t,"ScatterNd",(function(){return Y.xc})),n.d(t,"Select",(function(){return Y.yc})),n.d(t,"Selu",(function(){return Y.zc})),n.d(t,"Slice",(function(){return Y.Ec})),n.d(t,"Sin",(function(){return Y.Cc})),n.d(t,"Sinh",(function(){return Y.Dc})),n.d(t,"Sign",(function(){return Y.Bc})),n.d(t,"Sigmoid",(function(){return Y.Ac})),n.d(t,"Softplus",(function(){return Y.Gc})),n.d(t,"Sqrt",(function(){return Y.Kc})),n.d(t,"Sum",(function(){return Y.Qc})),n.d(t,"SpaceToBatchND",(function(){return Y.Hc})),n.d(t,"SplitV",(function(){return Y.Jc})),n.d(t,"Softmax",(function(){return Y.Fc})),n.d(t,"SquaredDifference",(function(){return Y.Mc})),n.d(t,"Square",(function(){return Y.Lc})),n.d(t,"Sub",(function(){return Y.Pc})),n.d(t,"SparseToDense",(function(){return Y.Ic})),n.d(t,"StridedSlice",(function(){return Y.Oc})),n.d(t,"Tan",(function(){return Y.Rc})),n.d(t,"Tanh",(function(){return Y.Sc})),n.d(t,"Tile",(function(){return Y.Tc})),n.d(t,"TopK",(function(){return Y.Uc})),n.d(t,"Transform",(function(){return Y.Vc})),n.d(t,"Transpose",(function(){return Y.Wc})),n.d(t,"Unique",(function(){return Y.Xc})),n.d(t,"Unpack",(function(){return Y.Yc})),n.d(t,"UnsortedSegmentSum",(function(){return Y.Zc})),n.d(t,"ZerosLike",(function(){return Y.ad})),n.d(t,"Step",(function(){return Y.Nc})),n.d(t,"FromPixels",(function(){return Y.hb})),n.d(t,"RotateWithOffset",(function(){return Y.uc})),n.d(t,"_FusedMatMul",(function(){return Y.bd})),n.d(t,"FusedConv2D",(function(){return Y.jb})),n.d(t,"FusedDepthwiseConv2D",(function(){return Y.kb}));var r={};n.r(r),n.d(r,"copyModel",(function(){return G})),n.d(r,"listModels",(function(){return V})),n.d(r,"moveModel",(function(){return H})),n.d(r,"removeModel",(function(){return U})),n.d(r,"browserFiles",(function(){return se})),n.d(r,"browserHTTPRequest",(function(){return be})),n.d(r,"concatenateArrayBuffers",(function(){return g.d})),n.d(r,"decodeWeights",(function(){return g.e})),n.d(r,"encodeWeights",(function(){return g.f})),n.d(r,"fromMemory",(function(){return ve})),n.d(r,"getLoadHandlers",(function(){return w})),n.d(r,"getModelArtifactsInfoForJSON",(function(){return g.g})),n.d(r,"getSaveHandlers",(function(){return y})),n.d(r,"http",(function(){return me})),n.d(r,"isHTTPScheme",(function(){return pe})),n.d(r,"loadWeights",(function(){return le})),n.d(r,"registerLoadRouter",(function(){return k})),n.d(r,"registerSaveRouter",(function(){return v})),n.d(r,"weightsLoaderFactory",(function(){return de})),n.d(r,"withSaveHandler",(function(){return ke}));var a={};n.r(a),n.d(a,"confusionMatrix",(function(){return Ce}));var o={};n.r(o),n.d(o,"fromPixelsAsync",(function(){return Ae})),n.d(o,"toPixels",(function(){return Re})),n.d(o,"fromPixels",(function(){return Fe}));var s={};n.r(s),n.d(s,"prepareAndValidate",(function(){return je}));var i={};n.r(i),n.d(i,"validateUpdateShape",(function(){return De})),n.d(i,"validateInput",(function(){return Me})),n.d(i,"calculateShapes",(function(){return Pe}));var u={};n.r(u),n.d(u,"assertParamsValid",(function(){return Be})),n.d(u,"maskToAxes",(function(){return Le})),n.d(u,"computeOutShape",(function(){return We})),n.d(u,"stridesWithElidedDims",(function(){return ze})),n.d(u,"getNormalizedAxes",(function(){return Ge})),n.d(u,"startIndicesWithElidedDims",(function(){return He})),n.d(u,"stopIndicesWithElidedDims",(function(){return Ke})),n.d(u,"stridesForAxis",(function(){return qe})),n.d(u,"startForAxis",(function(){return Xe})),n.d(u,"stopForAxis",(function(){return Ye})),n.d(u,"isSliceContinous",(function(){return Qe})),n.d(u,"computeFlatOffset",(function(){return Ze})),n.d(u,"parseSliceParams",(function(){return Je})),n.d(u,"sliceInfo",(function(){return et}));var c={};n.r(c),n.d(c,"Serializable",(function(){return tt})),n.d(c,"SerializationMap",(function(){return nt})),n.d(c,"registerClass",(function(){return rt}));var l={};n.r(l),n.d(l,"TEST_EPSILON_FLOAT16",(function(){return ot})),n.d(l,"expectArraysClose",(function(){return st})),n.d(l,"testEpsilon",(function(){return it})),n.d(l,"expectPromiseToFail",(function(){return ct})),n.d(l,"expectArraysEqual",(function(){return lt})),n.d(l,"expectNumbersClose",(function(){return dt})),n.d(l,"expectValuesInRange",(function(){return pt})),n.d(l,"expectArrayBuffersEqual",(function(){return ft})),n.d(l,"encodeStrings",(function(){return mt}));var d={};n.r(d),n.d(d,"conv2d",(function(){return os})),n.d(d,"depthwiseConv2d",(function(){return us})),n.d(d,"matMul",(function(){return cs}));var h={};n.r(h),n.d(h,"segOpComputeOptimalWindowSize",(function(){return Ri})),n.d(h,"computeOutShape",(function(){return Fi})),n.d(h,"collectGatherOpShapeInfo",(function(){return ji}));var p={};n.r(p),n.d(p,"axesAreInnerMostDims",(function(){return ra})),n.d(p,"combineLocations",(function(){return aa})),n.d(p,"computeOutAndReduceShapes",(function(){return oa})),n.d(p,"expandShapeToKeepDim",(function(){return sa})),n.d(p,"assertAxesAreInnerMostDims",(function(){return ia})),n.d(p,"getAxesPermutation",(function(){return ua})),n.d(p,"getUndoAxesPermutation",(function(){return ca})),n.d(p,"getInnerMostAxes",(function(){return la})),n.d(p,"getBroadcastDims",(function(){return un})),n.d(p,"getReductionAxes",(function(){return cn})),n.d(p,"assertAndGetBroadcastShape",(function(){return ln})),n.d(p,"assertParamsConsistent",(function(){return ai})),n.d(p,"computeOutShape",(function(){return oi})),n.d(p,"computeDilation2DInfo",(function(){return En})),n.d(p,"computePool2DInfo",(function(){return Nn})),n.d(p,"computePool3DInfo",(function(){return _n})),n.d(p,"computeConv2DInfo",(function(){return An})),n.d(p,"computeConv3DInfo",(function(){return Rn})),n.d(p,"computeDefaultPad",(function(){return Fn})),n.d(p,"tupleValuesAreOne",(function(){return Bn})),n.d(p,"eitherStridesOrDilationsAreOne",(function(){return Ln})),n.d(p,"convertConv2DDataFormat",(function(){return Wn})),n.d(p,"getFusedDyActivation",(function(){return ts})),n.d(p,"getFusedBiasGradient",(function(){return ns})),n.d(p,"applyActivation",(function(){return rs})),n.d(p,"shouldFuse",(function(){return as})),n.d(p,"PARALLELIZE_THRESHOLD",(function(){return si})),n.d(p,"computeOptimalWindowSize",(function(){return ii})),n.d(p,"slice_util",(function(){return u})),n.d(p,"upcastType",(function(){return bn.c})),n.d(p,"getImageCenter",(function(){return ui})),n.d(p,"getReshaped",(function(){return ci})),n.d(p,"getPermuted",(function(){return li})),n.d(p,"getReshapedPermuted",(function(){return di})),n.d(p,"getSliceBeginCoords",(function(){return hi})),n.d(p,"getSliceSize",(function(){return pi})),n.d(p,"prepareAndValidate",(function(){return je})),n.d(p,"validateUpdateShape",(function(){return De})),n.d(p,"validateInput",(function(){return Me})),n.d(p,"calculateShapes",(function(){return Pe})),n.d(p,"SELU_SCALEALPHA",(function(){return fi})),n.d(p,"SELU_SCALE",(function(){return mi})),n.d(p,"ERF_P",(function(){return bi})),n.d(p,"ERF_A1",(function(){return gi})),n.d(p,"ERF_A2",(function(){return xi})),n.d(p,"ERF_A3",(function(){return vi})),n.d(p,"ERF_A4",(function(){return ki})),n.d(p,"ERF_A5",(function(){return yi})),n.d(p,"warn",(function(){return wi})),n.d(p,"log",(function(){return Ii})),n.d(p,"mergeRealAndImagArrays",(function(){return Oi})),n.d(p,"splitRealAndImagArrays",(function(){return Ci})),n.d(p,"complexWithEvenIndex",(function(){return Ti})),n.d(p,"complexWithOddIndex",(function(){return $i})),n.d(p,"getComplexWithIndex",(function(){return Si})),n.d(p,"assignToTypedArray",(function(){return Ei})),n.d(p,"exponents",(function(){return Ni})),n.d(p,"exponent",(function(){return _i})),n.d(p,"prepareSplitSize",(function(){return Ai})),n.d(p,"segment_util",(function(){return h})),n.d(p,"fromUint8ToStringArray",(function(){return Di})),n.d(p,"fromStringArrayToUint8",(function(){return Mi}));var f={};n.r(f),n.d(f,"nonMaxSuppressionV3Impl",(function(){return ys})),n.d(f,"nonMaxSuppressionV4Impl",(function(){return ws})),n.d(f,"nonMaxSuppressionV5Impl",(function(){return Is})),n.d(f,"whereImpl",(function(){return zo}));var m=n(3),b=(n(42),n(9)),g=n(18);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class x{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==x.instance&&(x.instance=new x),x.instance}static registerSaveRouter(e){x.getInstance().saveRouters.push(e)}static registerLoadRouter(e){x.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return x.getHandlers(e,"save")}static getLoadHandlers(e,t){return x.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?x.getInstance().loadRouters:x.getInstance().saveRouters).forEach(t=>{const a=t(e,n);null!==a&&r.push(a)}),r}}const v=e=>x.registerSaveRouter(e),k=e=>x.registerLoadRouter(e),y=e=>x.getSaveHandlers(e),w=(e,t)=>x.getLoadHandlers(e,t)
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */;function I(){if(!Object(b.c)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function O(e){const t=e.result;t.createObjectStore("models_store",{keyPath:"modelPath"}),t.createObjectStore("model_info_store",{keyPath:"modelPath"})}class C{constructor(e){if(this.indexedDB=I(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((e,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>O(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction("models_store","readonly"),r=t.objectStore("models_store").get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{const r=Object(g.g)(t),o=a.transaction("model_info_store","readwrite");let s=o.objectStore("model_info_store");const i=s.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;i.onsuccess=()=>{u=a.transaction("models_store","readwrite");const i=u.objectStore("models_store").put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});i.onsuccess=()=>e({modelArtifactsInfo:r}),i.onerror=e=>{s=o.objectStore("model_info_store");const t=s.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(i.error)),t.onerror=e=>(a.close(),n(i.error))}},i.onerror=e=>(a.close(),n(i.error)),o.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)})}}C.URL_SCHEME="indexeddb://";const T=e=>{return Object(b.c)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(C.URL_SCHEME)?(t=e.slice(C.URL_SCHEME.length),new C(t)):null;var t};x.registerSaveRouter(T),x.registerLoadRouter(T);class ${constructor(){this.indexedDB=I()}async listModels(){return new Promise((e,t)=>{const n=this.indexedDB.open("tensorflowjs",1);n.onupgradeneeded=()=>O(n),n.onsuccess=()=>{const r=n.result,a=r.transaction("model_info_store","readonly"),o=a.objectStore("model_info_store").getAll();o.onsuccess=()=>{const t={};for(const e of o.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},o.onerror=e=>(r.close(),t(o.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)})}async removeModel(e){var t;return e=(t=e).startsWith(C.URL_SCHEME)?t.slice(C.URL_SCHEME.length):t,new Promise((t,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>O(r),r.onsuccess=()=>{const a=r.result,o=a.transaction("model_info_store","readwrite"),s=o.objectStore("model_info_store"),i=s.get(e);let u;i.onsuccess=()=>{if(null==i.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=s.delete(e),o=()=>{u=a.transaction("models_store","readwrite");const r=u.objectStore("models_store").delete(e);r.onsuccess=()=>t(i.result.modelArtifactsInfo),r.onerror=e=>n(i.error)};r.onsuccess=o,r.onerror=e=>(o(),a.close(),n(i.error))}},i.onerror=e=>(a.close(),n(i.error)),o.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)})}}var S=n(15);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E="tensorflowjs_models",N="info",_="model_topology",A="weight_specs",R="weight_data",F="model_metadata";function j(e){return{info:[E,e,N].join("/"),topology:[E,e,_].join("/"),weightSpecs:[E,e,A].join("/"),weightData:[E,e,R].join("/"),modelMetadata:[E,e,F].join("/")}}function D(e){const t=e.split("/");if(t.length<3)throw new Error("Invalid key format: "+e);return t.slice(1,t.length-1).join("/")}class M{constructor(e){if(!Object(b.c)().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=j(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Object(g.g)(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,Object(g.a)(e.weightData));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};return null!=e.signature&&(a.signature=e.signature),null!=e.userDefinedMetadata&&(a.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(a.modelInitializer=e.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer)}const o=this.LS.getItem(this.keys.weightData);if(null==o)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=Object(g.b)(o),t}}M.URL_SCHEME="localstorage://";const P=e=>{return Object(b.c)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(M.URL_SCHEME)?(t=e.slice(M.URL_SCHEME.length),new M(t)):null;var t};x.registerSaveRouter(P),x.registerLoadRouter(P);class B{constructor(){Object(S.b)(Object(b.c)().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),Object(S.b)("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=E+"/",n="/"+N;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);if(a.startsWith(t)&&a.endsWith(n)){e[D(a)]=JSON.parse(this.LS.getItem(a))}}return e}async removeModel(e){var t;const n=j(e=(t=e).startsWith(M.URL_SCHEME)?t.slice(M.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class L{constructor(){this.managers={}}static getInstance(){return null==L.instance&&(L.instance=new L),L.instance}static registerManager(e,t){Object(S.b)(null!=e,()=>"scheme must not be undefined or null."),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),Object(S.b)(e.length>0,()=>"scheme must not be an empty string.");const n=L.getInstance();Object(S.b)(null==n.managers[e],()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function W(e){if(-1===e.indexOf("://"))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+L.getSchemes().join(","));return{scheme:e.split("://")[0],path:e.split("://")[1]}}async function z(e,t,n=!1){Object(S.b)(e!==t,()=>`Old path and new path are the same: '${e}'`);const r=x.getLoadHandlers(e);Object(S.b)(r.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),Object(S.b)(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`);const a=r[0],o=x.getSaveHandlers(t);Object(S.b)(o.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),Object(S.b)(o.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`);const s=o[0],i=W(e).scheme,u=W(e).path,c=i===W(e).scheme,l=await a.load();n&&c&&await L.getManager(i).removeModel(u);const d=await s.save(l);return n&&!c&&await L.getManager(i).removeModel(u),d.modelArtifactsInfo}async function V(){const e=L.getSchemes(),t={};for(const n of e){const e=await L.getManager(n).listModels();for(const r in e){t[n+"://"+r]=e[r]}}return t}async function U(e){const t=W(e);return L.getManager(t.scheme).removeModel(t.path)}async function G(e,t){return z(e,t,!1)}async function H(e,t){return z(e,t,!0)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class K{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Browser's encoder only supports utf-8, but got "+t);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(Object(b.c)().get("IS_BROWSER")){Object(b.c)().setPlatform("browser",new K);try{L.registerManager(M.URL_SCHEME,new B)}catch(e){}try{L.registerManager(C.URL_SCHEME,new $)}catch(e){}}n(87);var q=n(13);
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function X(e,t="float32",n){return t=t||"float32",S.c(e),new q.b(e,t,n)}var Y=n(4),Q=n(1),Z=n(2);const J=Object(Z.b)({cast_:
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t){const n=Object(Q.a)(e,"x","cast");if(!S.B(t))throw new Error("Failed to cast to unknown dtype "+t);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},a={dtype:t};return m.a.runKernel(Y.w,r,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ee=Object(Z.b)({clone_:function(e){const t={x:Object(Q.a)(e,"x","clone","string_or_numeric")};return m.a.runKernel(Y.qb,t)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function te(e,t=!1){console.log(e.toString(t))}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(m.b)();const ne={buffer:X,cast:J,clone:ee,print:te};Object(q.e)(ne);function re(e){return new Promise(e=>setTimeout(e)).then(e)}class ae{constructor(e){if(!Object(b.c)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(ae.URL_SCHEME)&&(e=e.slice(ae.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelTopologyFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer);const a=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),o=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(o.download=this.modelTopologyFileName,o.href=a,await re(()=>o.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await re(()=>e.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Object(g.g)(e)}}}}ae.URL_SCHEME="downloads://";class oe{constructor(e){if(null==e||e.length<1)throw new Error("When calling browserFiles, at least 1 file is required, but received "+e);this.files=e}async load(){const e=this.files[0],t=this.files.slice(1);return new Promise((n,r)=>{const a=new FileReader;a.onload=a=>{const o=JSON.parse(a.target.result),s=o.modelTopology;if(null==s)return void r(new Error("modelTopology field is missing from file "+e.name));0===t.length&&n({modelTopology:s});const i=o.weightsManifest;if(null==i)return void r(new Error("weightManifest field is missing from file "+e.name));let u;try{u=this.checkManifestAndWeightFiles(i,t)}catch(e){return void r(e)}const c=[],l=[],d=[];i.forEach(e=>{e.paths.forEach(e=>{l.push(e),d.push(null)}),c.push(...e.weights)}),i.forEach(e=>{e.paths.forEach(e=>{const t=new FileReader;t.onload=t=>{const r=t.target.result,a=l.indexOf(e);if(d[a]=r,-1===d.indexOf(null)){const e={modelTopology:s,weightSpecs:c,weightData:Object(g.d)(d),format:o.format,generatedBy:o.generatedBy,convertedBy:o.convertedBy};null!=o.signature&&(e.signature=o.signature),null!=o.userDefinedMetadata&&(e.userDefinedMetadata=o.userDefinedMetadata),null!=o.modelInitializer&&(e.modelInitializer=o.modelInitializer),n(e)}},t.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),t.readAsArrayBuffer(u[e])})})},a.onerror=t=>r(`Failed to read model topology and weights manifest JSON from file '${e.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),a.readAsText(e)})}checkManifestAndWeightFiles(e,t){const n=[],r=t.map(e=>Object(g.c)(e.name)),a={};for(const o of e)o.paths.forEach(e=>{const o=Object(g.c)(e);if(-1!==n.indexOf(o))throw new Error(`Duplicate file basename found in weights manifest: '${o}'`);if(n.push(o),-1===r.indexOf(o))throw new Error(`Weight file with basename '${o}' is not provided.`);a[e]=t[r.indexOf(o)]});if(n.length!==t.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${t.length}).`);return a}}function se(e){return new oe(e)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ie(e,t,n,r){!function(e){Object(S.b)(null!=e&&Array.isArray(e)&&e.length>0,()=>"promises must be a none empty array")}(e),function(e,t){Object(S.b)(e>=0&&e<=1,()=>"Progress fraction must be in range [0, 1], but got startFraction "+e),Object(S.b)(t>=0&&t<=1,()=>"Progress fraction must be in range [0, 1], but got endFraction "+t),Object(S.b)(t>=e,()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction `+t)}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(e.map(o=>(o.then(o=>{const s=n+ ++a/e.length*(r-n);return t(s),o}),o)))}x.registerSaveRouter(e=>Object(b.c)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ae.URL_SCHEME)?function(e="model"){return new ae(e)}(e.slice(ae.URL_SCHEME.length)):null);var ue=n(44);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function ce(e,t){null==t&&(t={});const n=null==t.fetchFunc?Object(b.c)().platform.fetch:t.fetchFunc,r=e.map(e=>n(e,t.requestInit,{isBinary:!0})),a=(null==t.onProgress?await Promise.all(r):await ie(r,t.onProgress,0,.5)).map(e=>e.arrayBuffer());return null==t.onProgress?await Promise.all(a):await ie(a,t.onProgress,.5,1)}async function le(e,t="",n,r){return de(e=>ce(e,{requestInit:r}))(e,t,n)}function de(e){return async(t,n="",r)=>{const a=t.map(()=>!1),o={},s=null!=r?r.map(()=>!1):[],i=[];if(t.forEach((e,t)=>{let n=0;e.weights.forEach(e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,c=ue.a[u]*S.O(e.shape),l=()=>{a[t]=!0,null==o[t]&&(o[t]=[]),o[t].push({manifestEntry:e,groupOffset:n,sizeBytes:c})};null!=r?r.forEach((t,n)=>{t===e.name&&(l(),s[n]=!0)}):l(),i.push(e.name),n+=c})}),!s.every(e=>e)){const e=r.filter((e,t)=>!s[t]);throw new Error("Could not find weights in manifest with names: "+e.join(", ")+". \nManifest JSON has weights with names: "+i.join(", ")+".")}const u=a.reduce((e,t,n)=>(t&&e.push(n),e),[]),c=[];u.forEach(e=>{t[e].paths.forEach(e=>{const t=n+(n.endsWith("/")?"":"/")+e;c.push(t)})});const l=await e(c),d={};let h=0;return u.forEach(e=>{const n=t[e].paths.length;let r=0;for(let e=0;e<n;e++)r+=l[h+e].byteLength;const a=new ArrayBuffer(r),s=new Uint8Array(a);let i=0;for(let e=0;e<n;e++){const t=new Uint8Array(l[h+e]);s.set(t,i),i+=t.byteLength}o[e].forEach(e=>{const t=a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),n=Object(g.e)(t,[e.manifestEntry]);for(const e in n)d[e]=n[e]}),h+=n}),d}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class he{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(Object(S.b)("function"==typeof t.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=Object(b.c)().platform.fetch,Object(S.b)(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&Object(S.b)(2===e.length,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:Object(g.g)(e),responses:[a]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+a.status+".")}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code `+e.status+". Please verify this URL points to the model JSON of the model to load.");let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest,a=t.generatedBy,o=t.convertedBy,s=t.format,i=t.signature,u=t.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let c,l;if(null!=r){const e=await this.loadWeights(r);[c,l]=e}const d={modelTopology:n,weightSpecs:c,weightData:l,generatedBy:a,convertedBy:o,format:s};null!=i&&(d.signature=i),null!=u&&(d.userDefinedMetadata=u);const h=t.modelInitializer;return h&&(d.modelInitializer=h),d}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),a=n>t?e.substring(n):"";return[r+"/",a]}(t),a=this.weightPathPrefix||n,o=[];for(const t of e)o.push(...t.weights);const s=[],i=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):s.push(a+e+r);this.weightUrlConverter&&s.push(...await Promise.all(i));const u=await ce(s,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[o,Object(g.d)(u)]}}function pe(e){return null!=e.match(he.URL_SCHEME_REGEX)}he.URL_SCHEME_REGEX=/^https?:\/\//;const fe=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every(e=>pe(e)):pe(e),n)return me(e,t)}return null};function me(e,t){return new he(e,t)}function be(e,t){return me(e,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */x.registerSaveRouter(fe),x.registerLoadRouter(fe);class ge{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class xe{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}function ve(e,t,n,r){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new ge(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ge({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ge({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r})}function ke(e){return new xe(e)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ye=n(10);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const we=Object(Z.b)({matMul_:function(e,t,n=!1,r=!1){let a=Object(Q.a)(e,"a","matMul"),o=Object(Q.a)(t,"b","matMul");[a,o]=Object(ye.makeTypesMatch)(a,o);const s={a:a,b:o},i={transposeA:n,transposeB:r};return m.a.runKernel(Y.s,s,i)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ie=Object(Z.b)({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error("Error in oneHot: depth must be >=2, but it is "+t);const a={indices:Object(Q.a)(e,"indices","oneHot","int32")},o={depth:t,onValue:n,offValue:r};return m.a.runKernel(Y.ac,a,o)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oe=Object(Z.b)({transpose_:function(e,t){const n=Object(Q.a)(e,"x","transpose");if(null==t&&(t=n.shape.map((e,t)=>t).reverse()),S.b(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(e=>{S.b(e>=0&&e<n.rank,()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+" but got "+t)}),n.rank<=1)return n.clone();const r={x:n},a={perm:t};return m.a.runKernel(Y.Wc,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ce=Object(Z.b)({confusionMatrix_:function(e,t,n){const r=Object(Q.a)(e,"labels","confusionMatrix"),a=Object(Q.a)(t,"predictions","confusionMatrix");S.b(null==n||n>0&&Number.isInteger(n),()=>"If provided, numClasses must be a positive integer, but got "+n),S.b(1===r.rank,()=>"Expected the rank of labels to be 1, but got "+r.rank),S.b(1===a.rank,()=>"Expected the rank of predictions to be 1, but got "+a.rank),S.b(r.shape[0]===a.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`),S.b(n>0&&Number.isInteger(n),()=>"numClasses is required to be a positive integer, but got "+n);const o=Ie(J(r,"int32"),n),s=Ie(J(a,"int32"),n),i=Oe(o),u=we(i,s);return J(u,"int32")}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Te=n(28),$e=n(20);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Se(e,t,n){if(Object(S.d)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=Object(Q.c)(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Object($e.a)(e,t,r,n)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Ee;function Ne(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,o=!1,s=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)o=!0;else if(null!=e.getContext)s=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was "+e.constructor.name);i=!0}if(a){const t=2;if(a&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=Object(Te.c)(Y.hb,m.a.backendName)){const n={pixels:e},r={numChannels:t};return m.a.runKernel(Y.hb,n,r)}const[u,c]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let l,d;if(s?l=e.getContext("2d").getImageData(0,0,u,c).data:r||n?l=e.data:(o||a||i)&&(null==Ee&&(Ee=document.createElement("canvas").getContext("2d")),Ee.canvas.width=u,Ee.canvas.height=c,Ee.drawImage(e,0,0,u,c),l=Ee.getImageData(0,0,u,c).data),4===t)d=new Int32Array(l);else{const e=u*c;d=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)d[n*t+e]=l[4*n+e]}return Se(d,[c,u,t],"int32")}function _e(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function Ae(e,t=3){let n=null;if(Object(b.c)().getBool("WRAP_TO_IMAGEBITMAP")&&_e(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return Ne(n,t)}async function Re(e,t){let n=Object(Q.a)(e,"img","toPixels");if(!(e instanceof q.a)){const e=n;n=J(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,a]=n.shape.slice(0,2),o=2===n.rank?1:n.shape[2];if(o>4||2===o)throw new Error("toPixels only supports depth of size 1, 3 or 4 but got "+o);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const s=await n.data(),i="float32"===n.dtype?255:1,u=new Uint8ClampedArray(a*r*4);for(let e=0;e<r*a;++e){const t=[0,0,0,255];for(let r=0;r<o;r++){const a=s[e*o+r];if("float32"===n.dtype){if(a<0||a>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===n.dtype&&(a<0||a>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===o?(t[0]=a*i,t[1]=a*i,t[2]=a*i):t[r]=a*i}const r=4*e;u[r+0]=Math.round(t[0]),u[r+1]=Math.round(t[1]),u[r+2]=Math.round(t[2]),u[r+3]=Math.round(t[3])}if(null!=t){t.width=a,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}const Fe=Object(Z.b)({fromPixels_:Ne});function je(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===Object(S.O)(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,o=a[a.length-1];let s=1;for(let e=0;e<a.length-1;++e)s*=a[e];const i=e.shape,u=a.slice();u.pop();let c=1;for(let e=o;e<n;++e)c*=i[e],u.push(i[e]);const l=[...Object(S.j)(e.shape).map(e=>e/c),1].slice(0,o);return[u,s,c,l]}function De(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,o="Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: "+n.shape+`, indices.shape: ${t.shape}, shape: ${e}`+`, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(o+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(o+" Output shape length < "+(r+(n.rank-a)));if(n.rank!==a+e.length-r)throw new Error(o+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(o+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(o+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function Me(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: "+t.dtype);if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: "+n);if(0===n.length){if(0===t.size)throw new Error("Indices specified for empty output. indices shape: "+t.shape);if(0===e.size)throw new Error("Updates specified for empty output. updates shape: "+e.shape)}De(n,t,e)}function Pe(e,t,n){const r=t.shape.length,a=r>1?t.shape[r-1]:1,o=n.length;let s=1;for(let e=a;e<o;++e)s*=n[e];const i=a<1?1:a;return{sliceRank:a,numUpdates:Object(S.O)(t.shape)/i,sliceSize:s,strides:[...Object(S.j)(n.slice(0,a)),1],outputSize:Object(S.O)(n)}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Be(e,t,n){const r=e.shape.length;S.b(r===t.length,()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`),S.b(r===n.length,()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`);for(let a=0;a<r;++a)S.b(t[a]+n[a]<=e.shape[a],()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`)}function Le(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function We(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function ze(e,t,n,r){const a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function Ve(e,t,n){return n<=e?n:n-(t-1)}function Ue(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function Ge(e,t,n,r,a,o,s,i,u){const c=e.length;let l=new Array(c),d=new Array(c),h=new Array(c);if(t.length&&n>0){const u=t[0],c=n+1;l=He(s,u,c,r,e),d=Ke(i,u,c,a,e),h=ze(o,u,c,e)}else for(let t=0;t<c;t++)l[t]=Xe(s,r,o,e,t,u),d[t]=Ye(i,a,o,e,t,u),h[t]=qe(o,t,u);return{begin:l,end:d,strides:h}}function He(e,t,n,r,a){const o=[...a],s=Ue(n,t);for(let a=0;a<o.length;a++)if(s.indexOf(a)>-1)o[a]=0;else{const s=Ve(t,n,a);let i=r[s];e&1<<s&&(i=0),o[a]=i}return o}function Ke(e,t,n,r,a){const o=[...a],s=Ue(n,t);for(let a=0;a<o.length;a++)if(s.indexOf(a)>-1)o[a]=Number.MAX_SAFE_INTEGER;else{const s=Ve(t,n,a);let i=r[s];e&1<<s&&(i=Number.MAX_SAFE_INTEGER),o[a]=i}for(let e=0;e<o.length;e++){const t=a[e];o[e]<0&&(o[e]+=t),o[e]=S.i(0,o[e],a[e])}return o}function qe(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function Xe(e,t,n,r,a,o){let s=t[a];const i=n[a]||1;(e&1<<a||o&1<<a||null==s)&&(s=i>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[a];return s<0&&(s+=u),s=S.i(0,s,u-1),s}function Ye(e,t,n,r,a,o){let s=t[a];const i=n[a]||1;(e&1<<a||o&1<<a||null==s)&&(s=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[a];return s<0&&(s+=u),s=i>0?S.i(0,s,u):S.i(-1,s,u-1),s}function Qe(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function Ze(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Je(e,t,n){let r;const a=e.shape.length;let o;return r="number"==typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),r.forEach(e=>{S.b(-1!==e,()=>"slice() does not support negative begin indexing.")}),o=null==n?new Array(a).fill(-1):"number"==typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,o=o.map((t,n)=>t>=0?t:(S.b(-1===t,()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`),e.shape[n]-r[n])),[r,o]}function et(e,t,n,r,a,o,s,i,u){let c=t.slice(),l=n.slice(),d=r;null==r&&(d=new Array(c.length));const h=Le(s);if(h.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==s&&0!==i)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==s&&0!==u)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const p=e.length-c.length,f=Le(i),m=e.slice();f.forEach(e=>{c[e]=0,l[e]=1,m.splice(e,0,1)});const{begin:b,end:g,strides:x}=Ge(m,h,p,c,l,d,a,o,s);c=b,l=g,d=x;const v=Le(u);v.forEach(e=>{l[e]=c[e]+1,d[e]=1});const k=We(c,l,d),y=k.filter((e,t)=>-1===v.indexOf(t));return{nonStrided:d.every(e=>1===e),$begin:c,$end:l,$strides:d,size:k,newShape:m,outShape:y}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tt{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class nt{constructor(){this.classNameMap={}}static getMap(){return null==nt.instance&&(nt.instance=new nt),nt.instance}static register(e){nt.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function rt(e){Object(S.b)(null!=e.className,()=>"Class being registered does not have the static className property defined."),Object(S.b)("string"==typeof e.className,()=>"className is required to be a string, but got type "+typeof e.className),Object(S.b)(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),nt.register(e)}var at=n(6);
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ot=.1;function st(e,t,n){return null==n&&(n=it()),ut(e,t,(e,t)=>ht(e,t,n))}function it(){return 32===m.a.backend.floatPrecision()?.001:ot}function ut(e,t,n){let r=!0;if((Object(S.A)(e)||Object(S.A)(t))&&(r=!1),Object(S.A)(e)&&Object(S.A)(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: `+r)}if(Array.isArray(e)&&Array.isArray(t)){const n=Object(Q.c)(e),r=Object(Q.c)(t);if(!Object(S.a)(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const a=Object(S.A)(e)?e:Object(S.m)(e),o=Object(S.A)(t)?t:Object(S.m)(t);if(a.length!==o.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${o.length}.\nActual:   ${a}.\nExpected: ${o}.`);for(let e=0;e<o.length;++e){const t=a[e],r=o[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\nActual:   ${a}.\nExpected: ${o}.`)}}function ct(e,t){e().then(()=>t.fail(),()=>t())}function lt(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return Object(S.z)(e)||Object(S.z)(e[0])||Object(S.z)(t)||Object(S.z)(t[0])?ut(e,n,(e,t)=>e==t):ut(e,t,(e,t)=>ht(e,t,0))}function dt(e,t,n){if(null==n&&(n=it()),!ht(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function ht(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function pt(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function ft(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))}function mt(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?mt(n):e[t]=Object(at.encodeString)(n)}return e}
/** @license See the LICENSE file. */const bt="3.3.0";
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gt(){Object(b.c)().set("PROD",!0)}function xt(){Object(b.c)().set("DEBUG",!0)}function vt(){Object(b.c)().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function kt(e){Object(b.c)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function yt(){m.a.disposeVariables()}function wt(){return m.a}function It(){return m.a.memory()}function Ot(e){return m.a.profile(e)}function Ct(e,t){return m.a.tidy(e,t)}function Tt(e){Object(ye.getTensorsInContainer)(e).forEach(e=>e.dispose())}function $t(e){return m.a.keep(e)}function St(e){return m.a.time(e)}function Et(e){return m.a.setBackend(e)}function Nt(){return m.a.ready()}function _t(){return m.a.backendName}function At(e){m.a.removeBackend(e)}function Rt(e){return m.a.findBackend(e)}function Ft(e){return m.a.findBackendFactory(e)}function jt(e,t,n=1){return m.a.registerBackend(e,t,n)}function Dt(){return m.a.backend}function Mt(e,t){Object(b.c)().setPlatform(e,t)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(q.d)(kt);const Pt=Object(Z.b)({add_:function(e,t){let n=Object(Q.a)(e,"a","add"),r=Object(Q.a)(t,"b","add");[n,r]=Object(ye.makeTypesMatch)(n,r);const a={a:n,b:r};return m.a.runKernel(Y.d,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bt=Object(Z.b)({floorDiv_:function(e,t){let n=Object(Q.a)(e,"a","floorDiv"),r=Object(Q.a)(t,"b","floorDiv");[n,r]=Object(ye.makeTypesMatch)(n,r);const a={a:n,b:r};return m.a.runKernel(Y.gb,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lt=Object(Z.b)({div_:function(e,t){let n=Object(Q.a)(e,"a","div"),r=Object(Q.a)(t,"b","div");if([n,r]=Object(ye.makeTypesMatch)(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Bt(n,r);const a={a:n,b:r};return m.a.runKernel(Y.kc,a,{})}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wt=Object(Z.b)({mul_:function(e,t){let n=Object(Q.a)(e,"a","mul"),r=Object(Q.a)(t,"b","mul");[n,r]=Object(ye.makeTypesMatch)(n,r);const a={a:n,b:r};return m.a.runKernel(Y.Ub,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zt=Object(Z.b)({sqrt_:function(e){const t={x:Object(Q.a)(e,"x","sqrt")};return m.a.runKernel(Y.Kc,t)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vt=Object(Z.b)({square_:function(e){const t=Object(Q.a)(e,"x","square");return m.a.runKernel("Square",{x:t},{})}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ut=Object(Z.b)({zerosLike_:function(e){const t={x:Object(Q.a)(e,"x","zerosLike")};return m.a.runKernel(Y.ad,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gt(e){return S.b(S.u(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{const r=Object(Q.a)(t,"x","tf.grad","string_or_numeric"),a=null!=n?Object(Q.a)(n,"dy","tf.grad"):null;return m.a.tidy(()=>{const{value:t,grads:n}=m.a.gradients(()=>e(r),[r],a);return null!=a&&S.e(t.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Qt(n),n[0]})}}function Ht(e){return S.b(S.u(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{S.b(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const r=Object(Q.b)(t,"args","tf.grads","string_or_numeric"),a=null!=n?Object(Q.a)(n,"dy","tf.grads"):null;return m.a.tidy(()=>{const{value:t,grads:n}=m.a.gradients(()=>e(...r),r,a);return null!=a&&S.e(t.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Qt(n),n})}}function Kt(e){return S.b(S.u(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{S.b(t instanceof q.a,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),S.b(null==n||n instanceof q.a,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:r,value:a}=m.a.gradients(()=>e(t),[t],n);return Qt(r),{grad:r[0],value:a}}}function qt(e){return S.b(S.u(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{S.b(Array.isArray(t)&&t.every(e=>e instanceof q.a),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),S.b(null==n||n instanceof q.a,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const r=m.a.gradients(()=>e(...t),t,n);return null!=n&&S.e(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Qt(r.grads),r}}function Xt(e,t){S.b(S.u(e),()=>"The f passed in variableGrads(f) must be a function"),S.b(null==t||Array.isArray(t)&&t.every(e=>e instanceof q.c),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=null!=t;if(!n){t=[];for(const e in m.a.registeredVariables)t.push(m.a.registeredVariables[e])}const r=n?t.filter(e=>!e.trainable):null,a=t.length;t=t.filter(e=>e.trainable),S.b(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`);const{value:o,grads:s}=m.a.gradients(e,t,null,!0);S.b(s.some(e=>null!=e),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),S.b(0===o.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${o.rank} tensor`);const i={};return t.forEach((e,t)=>{null!=s[t]&&(i[e.name]=s[t])}),null!=r&&r.forEach(e=>i[e.name]=null),{value:o,grads:i}}function Yt(e){return m.a.customGrad(e)}function Qt(e){if(e.filter(e=>null==e).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zt(e,t){if((Object(S.A)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Object(S.A)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Object($e.a)(e,[],[],t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jt extends tt{minimize(e,t=!1,n){const{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map(e=>({name:e.name,tensor:a[e.name]}));this.applyGradients(e)}else this.applyGradients(a);return Tt(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Xt(e,t)}dispose(){null!=this.iterations_&&Tt(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Zt(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for this optimizer class "+this.getClassName())}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Jt,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class en extends Jt{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=m.a.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=m.a.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:t+"/accum_grad",variable:Ct(()=>Ut(r).variable(!1))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:t+"/accum_var",variable:Ct(()=>Ut(r).variable(!1))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const o=this.accumulatedGrads[n].variable,s=this.accumulatedUpdates[n].variable;Ct(()=>{const e=Pt(Wt(o,this.rho),Wt(Vt(a),1-this.rho)),t=Wt(Lt(zt(Pt(s,this.epsilon)),zt(Pt(o,this.epsilon))),a),n=Pt(Wt(s,this.rho),Wt(Vt(t),1-this.rho));o.assign(e),s.assign(n);const i=Pt(Wt(t,-this.learningRate),r);r.assign(i)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Tt(this.accumulatedGrads.map(e=>e.variable)),Tt(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedUpdates=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function tn(e,t,n){const r={shape:e,value:t,dtype:n};return m.a.runKernel(Y.db,{},r)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */en.className="Adadelta",rt(en);class nn extends Jt{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=m.a.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:t+"/accumulator",variable:Ct(()=>tn(r.shape,this.initialAccumulatorValue).variable(e))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const o=this.accumulatedGrads[n].variable;Ct(()=>{const e=Pt(o,Vt(a));o.assign(e);const t=Pt(Wt(Lt(a,zt(Pt(e,m.a.backend.epsilon()))),-this.learningRate),r);r.assign(t)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Tt(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}nn.className="Adagrad",rt(nn);const rn=Object(Z.b)({pow_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t){let n=Object(Q.a)(e,"base","pow"),r=Object(Q.a)(t,"exp","pow");[n,r]=Object(ye.makeTypesMatch)(n,r);const a={a:n,b:r};return m.a.runKernel(Y.fc,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const an=Object(Z.b)({sub_:function(e,t){let n=Object(Q.a)(e,"a","sub"),r=Object(Q.a)(t,"b","sub");[n,r]=Object(ye.makeTypesMatch)(n,r);const a={a:n,b:r};return m.a.runKernel(Y.Pc,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class on extends Jt{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Ct(()=>{this.accBeta1=Zt(t).variable(),this.accBeta2=Zt(n).variable()}),null==r&&(this.epsilon=m.a.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);Ct(()=>{const n=an(1,this.accBeta1),r=an(1,this.accBeta2);t.forEach((t,a)=>{const o=m.a.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:t+"/m",variable:Ct(()=>Ut(o).variable(!1))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:t+"/v",variable:Ct(()=>Ut(o).variable(!1))});const s=Array.isArray(e)?e[a].tensor:e[t];if(null==s)return;const i=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,c=Pt(Wt(i,this.beta1),Wt(s,1-this.beta1)),l=Pt(Wt(u,this.beta2),Wt(Vt(s),1-this.beta2)),d=Lt(c,n),h=Lt(l,r);i.assign(c),u.assign(l);const p=Pt(Wt(Lt(d,Pt(zt(h),this.epsilon)),-this.learningRate),o);o.assign(p)}),this.accBeta1.assign(Wt(this.accBeta1,this.beta1)),this.accBeta2.assign(Wt(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Tt(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedSecondMoment&&Tt(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),Ct(()=>{this.accBeta1.assign(rn(this.beta1,this.iterations_+1)),this.accBeta2.assign(rn(this.beta2,this.iterations_+1))});const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedSecondMoment=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}on.className="Adam",rt(on);const sn=Object(Z.b)({abs_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const t=Object(Q.a)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return m.a.runKernel(Y.A,e)}{const e={x:t};return m.a.runKernel(Y.a,e)}}});
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function un(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const o=n-1-a,s=e[o]||1;(t[t.length-1-a]||1)>1&&1===s&&r.unshift(o)}return r}function cn(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],o=t.length-r-1,s=t[o];(null==a||1===a&&s>1)&&n.unshift(o)}return n}function ln(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let o=t[t.length-a-1];if(null==o&&(o=1),1===r)n.unshift(o);else if(1===o)n.unshift(r);else{if(r!==o){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}n.unshift(r)}}return n}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dn=Object(Z.b)({maximum_:function(e,t){let n=Object(Q.a)(e,"a","maximum"),r=Object(Q.a)(t,"b","maximum");[n,r]=Object(ye.makeTypesMatch)(n,r),"bool"===n.dtype&&(n=J(n,"int32"),r=J(r,"int32")),ln(n.shape,r.shape);const a={a:n,b:r};return m.a.runKernel(Y.Nb,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hn extends Jt{constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Ct(()=>{this.iteration=Zt(0).variable(),this.accBeta1=Zt(t).variable()}),null==r&&(this.epsilon=m.a.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);Ct(()=>{const n=an(1,this.accBeta1),r=Lt(-this.learningRate,Pt(Wt(this.iteration,this.decay),1));t.forEach((t,a)=>{const o=m.a.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:t+"/m",variable:Ut(o).variable(!1)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:t+"/v",variable:Ut(o).variable(!1)});const s=Array.isArray(e)?e[a].tensor:e[t];if(null==s)return;const i=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,c=Pt(Wt(i,this.beta1),Wt(s,1-this.beta1)),l=Wt(u,this.beta2),d=sn(s),h=dn(l,d);i.assign(c),u.assign(h);const p=Pt(Wt(Lt(r,n),Lt(c,Pt(h,this.epsilon))),o);o.assign(p)}),this.iteration.assign(Pt(this.iteration,1)),this.accBeta1.assign(Wt(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Tt(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedWeightedInfNorm&&Tt(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}hn.className="Adamax",rt(hn);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class pn extends Jt{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=m.a.registeredVariables[t];Ct(()=>{const e=Pt(Wt(this.c,r),a);a.assign(e)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=$t(Zt(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}pn.className="SGD",rt(pn);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class fn extends pn{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Zt(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=m.a.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:t+"/momentum",variable:Ct(()=>Ut(r).variable(e))}}const a=this.accumulations[n].variable,o=Array.isArray(e)?e[n].tensor:e[t];null!=o&&Ct(()=>{let e;const t=Pt(Wt(this.m,a),o);e=this.useNesterov?Pt(Wt(this.c,Pt(o,Wt(t,this.m))),r):Pt(Wt(this.c,t),r),a.assign(t),r.assign(e)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Tt(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}fn.className="Momentum",rt(fn);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class mn extends Jt{constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=m.a.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=m.a.registeredVariables[t];null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:t+"/rms",variable:Ct(()=>Ut(r).variable(!1))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:t+"/momentum",variable:Ct(()=>Ut(r).variable(!1))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:t+"/mg",variable:Ct(()=>Ut(r).variable(!1))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const o=this.accumulatedMeanSquares[n].variable,s=this.accumulatedMoments[n].variable;Ct(()=>{const e=Pt(Wt(o,this.decay),Wt(Vt(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,i=Pt(Wt(t,this.decay),Wt(a,1-this.decay)),u=Lt(Wt(a,this.learningRate),zt(an(e,Pt(Vt(i),this.epsilon)))),c=Pt(Wt(s,this.momentum),u);o.assign(e),t.assign(i),s.assign(c);const l=an(r,c);r.assign(l)}else{const e=Pt(Wt(o,this.decay),Wt(Vt(a),1-this.decay)),t=Pt(Wt(s,this.momentum),Lt(Wt(a,this.learningRate),zt(Pt(e,this.epsilon))));o.assign(e),s.assign(t);const n=an(r,t);r.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Tt(this.accumulatedMeanSquares.map(e=>e.variable)),null!=this.accumulatedMeanGrads&&this.centered&&Tt(this.accumulatedMeanGrads.map(e=>e.variable)),null!=this.accumulatedMoments&&Tt(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2;this.accumulatedMeanSquares=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedMoments=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}mn.className="RMSProp",rt(mn);var bn=n(30);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gn=Object(Z.b)({acos_:function(e){const t={x:Object(Q.a)(e,"x","acos")};return m.a.runKernel(Y.b,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xn=Object(Z.b)({acosh_:function(e){const t={x:Object(Q.a)(e,"x","acosh")};return m.a.runKernel(Y.c,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vn=Object(Z.b)({addN_:function(e){S.b(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),S.b(e.length>=1,()=>"Must pass at least one tensor to tf.addN(), but got "+e.length);const t=e.map((e,t)=>Object(Q.a)(e,"tensors"+t,"addN")),n=t[0];t.forEach(e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(e=>{if(!S.a(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const r=t;return m.a.runKernel(Y.e,r)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kn=Object(Z.b)({all_:function(e,t=null,n=!1){const r={x:Object(Q.a)(e,"x","all","bool")},a={axis:t,keepDims:n};return m.a.runKernel(Y.f,r,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yn=Object(Z.b)({any_:function(e,t=null,n=!1){const r={x:Object(Q.a)(e,"x","any","bool")},a={axis:t,keepDims:n};return m.a.runKernel(Y.g,r,a)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wn=Object(Z.b)({argMax_:function(e,t=0){const n={x:Object(Q.a)(e,"x","argMax")},r={axis:t};return m.a.runKernel(Y.h,n,r)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const In=Object(Z.b)({argMin_:function(e,t=0){const n={x:Object(Q.a)(e,"x","argMin")},r={axis:t};return m.a.runKernel(Y.i,n,r)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const On=Object(Z.b)({asin_:function(e){const t={x:Object(Q.a)(e,"x","asin")};return m.a.runKernel(Y.j,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cn=Object(Z.b)({asinh_:function(e){const t={x:Object(Q.a)(e,"x","asinh")};return m.a.runKernel(Y.k,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tn=Object(Z.b)({atan_:function(e){const t={x:Object(Q.a)(e,"x","atan")};return m.a.runKernel(Y.l,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $n=Object(Z.b)({atan2_:function(e,t){let n=Object(Q.a)(e,"a","atan2"),r=Object(Q.a)(t,"b","atan2");[n,r]=Object(ye.makeTypesMatch)(n,r);const a={a:n,b:r};return m.a.runKernel(Y.m,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sn=Object(Z.b)({atanh_:function(e){const t={x:Object(Q.a)(e,"x","atanh")};return m.a.runKernel(Y.n,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function En(e,t,n,r,a="NHWC",o){return An(e,[...t,e[3]],n,o,r,null,null,Wn(a))}function Nn(e,t,n,r,a,o,s="channelsLast"){const[i,u]=jn(t);let c;if("channelsLast"===s)c=[i,u,e[3],e[3]];else{if("channelsFirst"!==s)throw new Error("Unknown dataFormat "+s);c=[i,u,e[1],e[1]]}return An(e,c,n,r,a,o,!1,s)}function _n(e,t,n,r,a,o,s="NDHWC"){const[i,u,c]=Dn(t);let l,d;if("NDHWC"===s)d="channelsLast",l=[i,u,c,e[4],e[4]];else{if("NCDHW"!==s)throw new Error("Unknown dataFormat "+s);d="channelsFirst",l=[i,u,c,e[1],e[1]]}return Rn(e,l,n,r,a,!1,d,o)}function An(e,t,n,r,a,o,s=!1,i="channelsLast"){let[u,c,l,d]=[-1,-1,-1,-1];if("channelsLast"===i)[u,c,l,d]=e;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);[u,d,c,l]=e}const[h,p,,f]=t,[m,b]=jn(n),[g,x]=jn(r),v=Mn(h,g),k=Mn(p,x),{padInfo:y,outHeight:w,outWidth:I}=function(e,t,n,r,a,o,s,i,u){let c,l,d;if("number"==typeof e){c={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=Fn(e,t,n));const o=e[0],s=e[1],i=Pn((o-t+2*r)/n+1,a),u=Pn((s-t+2*r)/n+1,a);return[i,u]}([t,n],o,r,e,i);l=a[0],d=a[1]}else if("same"===e){l=Math.ceil(t/r),d=Math.ceil(n/a);const e=Math.max(0,(l-1)*r+o-t),i=Math.max(0,(d-1)*a+s-n),u=Math.floor(e/2),h=e-u,p=Math.floor(i/2);c={top:u,bottom:h,left:p,right:i-p,type:"SAME"}}else if("valid"===e)c={top:0,bottom:0,left:0,right:0,type:"VALID"},l=Math.ceil((t-o+1)/r),d=Math.ceil((n-s+1)/a);else{if("object"!=typeof e)throw Error("Unknown padding parameter: "+e);{const h="channelsLast"===u?e[1][0]:e[2][0],p="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],m="channelsLast"===u?e[2][1]:e[3][1];c={top:h,bottom:p,left:f,right:m,type:0===h&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},l=Pn((t-o+h+p)/r+1,i),d=Pn((n-s+f+m)/a+1,i)}}return{padInfo:c,outHeight:l,outWidth:d}}(a,c,l,m,b,v,k,o,i),O=s?f*d:f;let C;return"channelsFirst"===i?C=[u,O,w,I]:"channelsLast"===i&&(C=[u,w,I,O]),{batchSize:u,dataFormat:i,inHeight:c,inWidth:l,inChannels:d,outHeight:w,outWidth:I,outChannels:O,padInfo:y,strideHeight:m,strideWidth:b,filterHeight:h,filterWidth:p,effectiveFilterHeight:v,effectiveFilterWidth:k,dilationHeight:g,dilationWidth:x,inShape:e,outShape:C,filterShape:t}}function Rn(e,t,n,r,a,o=!1,s="channelsLast",i){let[u,c,l,d,h]=[-1,-1,-1,-1,-1];if("channelsLast"===s)[u,c,l,d,h]=e;else{if("channelsFirst"!==s)throw new Error("Unknown dataFormat "+s);[u,h,c,l,d]=e}const[p,f,m,,b]=t,[g,x,v]=Dn(n),[k,y,w]=Dn(r),I=Mn(p,k),O=Mn(f,y),C=Mn(m,w),{padInfo:T,outDepth:$,outHeight:S,outWidth:E}=function(e,t,n,r,a,o,s,i,u,c,l){let d,h,p,f;if("number"==typeof e){d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const o=function(e,t,n,r,a,o){null==a&&(a=Fn(e,t,r));const s=e[0],i=e[1],u=e[2],c=Pn((s-t+2*a)/r+1,o),l=Pn((i-t+2*a)/r+1,o),d=Pn((u-t+2*a)/r+1,o);return[c,l,d,n]}([t,n,r,1],i,1,a,e,l);h=o[0],p=o[1],f=o[2]}else if("same"===e){h=Math.ceil(t/a),p=Math.ceil(n/o),f=Math.ceil(r/s);const e=(h-1)*a+i-t,l=(p-1)*o+u-n,m=(f-1)*s+c-r,b=Math.floor(e/2),g=e-b,x=Math.floor(l/2),v=l-x,k=Math.floor(m/2);d={top:x,bottom:v,left:k,right:m-k,front:b,back:g,type:"SAME"}}else{if("valid"!==e)throw Error("Unknown padding parameter: "+e);d={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},h=Math.ceil((t-i+1)/a),p=Math.ceil((n-u+1)/o),f=Math.ceil((r-c+1)/s)}return{padInfo:d,outDepth:h,outHeight:p,outWidth:f}}(a,c,l,d,g,x,v,I,O,C,i),N=o?b*h:b;let _;return"channelsFirst"===s?_=[u,N,$,S,E]:"channelsLast"===s&&(_=[u,$,S,E,N]),{batchSize:u,dataFormat:s,inDepth:c,inHeight:l,inWidth:d,inChannels:h,outDepth:$,outHeight:S,outWidth:E,outChannels:N,padInfo:T,strideDepth:g,strideHeight:x,strideWidth:v,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:O,effectiveFilterWidth:C,dilationDepth:k,dilationHeight:y,dilationWidth:w,inShape:e,outShape:_,filterShape:t}}function Fn(e,t,n,r=1){const a=Mn(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function jn(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Dn(e){return"number"==typeof e?[e,e,e]:e}function Mn(e,t){return t<=1?e:e+(e-1)*(t-1)}function Pn(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error("Unknown roundingMode "+t)}}function Bn(e){const[t,n,r]=jn(e);return 1===t&&1===n&&1===r}function Ln(e,t){return Bn(e)||Bn(t)}function Wn(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error("Unknown dataFormat "+e)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zn=Object(Z.b)({reshape_:function(e,t){const n={x:Object(Q.a)(e,"x","reshape","string_or_numeric")},r={shape:t};return m.a.runKernel(Y.oc,n,r)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vn=Object(Z.b)({avgPool_:function(e,t,n,r,a){const o=Object(Q.a)(e,"x","avgPool","float32");S.b(Ln(n,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`);let s=o,i=!1;3===o.rank&&(i=!0,s=zn(o,[1,o.shape[0],o.shape[1],o.shape[2]])),S.b(4===s.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${s.rank}.`),null!=a&&S.b(S.v(r),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`);const u={x:s},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a};let l=m.a.runKernel(Y.o,u,c);return l=J(l,o.dtype),i?zn(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Un=Object(Z.b)({avgPool3d_:function(e,t,n,r,a,o="NDHWC"){const s=Object(Q.a)(e,"x","avgPool3d","float32");let i=s,u=!1;4===s.rank&&(u=!0,i=zn(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),S.b(5===i.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),S.b("NDHWC"===o,()=>"Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of "+o),null!=a&&S.b(S.v(r),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`);const c={x:i},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:o};let d=m.a.runKernel(Y.p,c,l);return d=J(d,i.dtype),u?zn(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gn=Object(Z.b)({concat_:function(e,t=0){Object(S.b)(e.length>=1,()=>"Pass at least one tensor to concat");const n=Object(Q.b)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach(e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)}),1===n.length)return ee(n[0]);const r=n,a={axis:t};return m.a.runKernel(Y.B,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hn=Object(Z.b)({sigmoid_:function(e){const t={x:Object(Q.a)(e,"x","sigmoid")};return m.a.runKernel(Y.Ac,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kn=Object(Z.b)({slice_:function(e,t,n){const r=Object(Q.a)(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const a={x:r},o={begin:t,size:n};return m.a.runKernel(Y.Ec,a,o)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qn=Object(Z.b)({tanh_:function(e){const t={x:Object(Q.a)(e,"x","tanh")};return m.a.runKernel(Y.Sc,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xn=Object(Z.b)({basicLSTMCell_:function(e,t,n,r,a,o){const s=Object(Q.a)(e,"forgetBias","basicLSTMCell"),i=Object(Q.a)(t,"lstmKernel","basicLSTMCell"),u=Object(Q.a)(n,"lstmBias","basicLSTMCell"),c=Object(Q.a)(r,"data","basicLSTMCell"),l=Object(Q.a)(a,"c","basicLSTMCell"),d=Object(Q.a)(o,"h","basicLSTMCell"),h=Gn([c,d],1),p=we(h,i),f=Pt(p,u),m=f.shape[0],b=f.shape[1]/4,g=[m,b],x=Kn(f,[0,0],g),v=Kn(f,[0,b],g),k=Kn(f,[0,2*b],g),y=Kn(f,[0,3*b],g),w=Pt(Wt(Hn(x),qn(v)),Wt(l,Hn(Pt(s,k))));return[w,Wt(qn(w),Hn(y))]}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yn=Object(Z.b)({batchToSpaceND_:function(e,t,n){const r=Object(Q.a)(e,"x","batchToSpaceND"),a=t.reduce((e,t)=>e*t);S.b(r.rank>=1+t.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`),S.b(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),S.b(r.shape[0]%a==0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`);const o={x:r},s={blockShape:t,crops:n};return m.a.runKernel(Y.t,o,s)}});const Qn=Object(Z.b)({batchNorm_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,r,a,o){null==o&&(o=.001);const s=Object(Q.a)(e,"x","batchNorm"),i=Object(Q.a)(t,"mean","batchNorm"),u=Object(Q.a)(n,"variance","batchNorm");let c,l;null!=a&&(c=Object(Q.a)(a,"scale","batchNorm")),null!=r&&(l=Object(Q.a)(r,"offset","batchNorm")),S.b(i.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),S.b(null==l||i.rank===l.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),S.b(null==c||i.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const d={x:function(e){let t;return t=0===e.rank||1===e.rank?zn(e,[1,1,1,e.size]):2===e.rank?zn(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?zn(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(s),scale:c,offset:l,mean:i,variance:u},h={varianceEpsilon:o},p=m.a.runKernel(Y.ib,d,h);return zn(p,s.shape)}});const Zn=Object(Z.b)({batchNorm2d_:function(e,t,n,r,a,o){const s=Object(Q.a)(e,"x","batchNorm"),i=Object(Q.a)(t,"mean","batchNorm"),u=Object(Q.a)(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(Q.a)(a,"scale","batchNorm")),null!=r&&(l=Object(Q.a)(r,"offset","batchNorm")),S.b(2===s.rank,()=>"Error in batchNorm2D: x must be rank 2 but got rank "+s.rank+"."),S.b(2===i.rank||1===i.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),S.b(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),null!=c&&S.b(2===c.rank||1===c.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),null!=l&&S.b(2===l.rank||1===l.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${l.rank}.`),Qn(s,i,u,l,c,o)}});const Jn=Object(Z.b)({batchNorm3d_:function(e,t,n,r,a,o){const s=Object(Q.a)(e,"x","batchNorm"),i=Object(Q.a)(t,"mean","batchNorm"),u=Object(Q.a)(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(Q.a)(a,"scale","batchNorm")),null!=r&&(l=Object(Q.a)(r,"offset","batchNorm")),S.b(3===s.rank,()=>"Error in batchNorm3D: x must be rank 3 but got rank "+s.rank+"."),S.b(3===i.rank||1===i.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),S.b(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),null!=c&&S.b(3===c.rank||1===c.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),null!=l&&S.b(3===l.rank||1===l.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${l.rank}.`),Qn(s,i,u,l,c,o)}});const er=Object(Z.b)({batchNorm4d_:function(e,t,n,r,a,o){const s=Object(Q.a)(e,"x","batchNorm"),i=Object(Q.a)(t,"mean","batchNorm"),u=Object(Q.a)(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(Q.a)(a,"scale","batchNorm")),null!=r&&(l=Object(Q.a)(r,"offset","batchNorm")),S.b(4===s.rank,()=>"Error in batchNorm4D: x must be rank 4 but got rank "+s.rank+"."),S.b(4===i.rank||1===i.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),S.b(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),null!=c&&S.b(4===c.rank||1===c.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),null!=l&&S.b(4===l.rank||1===l.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${l.rank}.`),Qn(s,i,u,l,c,o)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tr=Object(Z.b)({bincount_:function(e,t,n){const r=Object(Q.a)(e,"x","bincount"),a=Object(Q.a)(t,"weights","bincount");S.b("int32"===r.dtype,()=>"Error in bincount: input dtype must be int32, but got "+r.dtype),S.b(n>=0,()=>`size must be non-negative, but got ${n}.`),S.b(a.size===r.size||0===a.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: `+a.shape+".");const o={x:r,weights:a},s={size:n};return m.a.runKernel(Y.u,o,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nr=Object(Z.b)({broadcastTo_:function(e,t){let n=Object(Q.a)(e,"broadcastTo","x");const r=n.shape;if(t.some(e=>!(e>0)||e%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=zn(n,e)}const a=n.shape,o=Array.from(t);for(let e=t.length-1;e>=0;e--)if(a[e]===t[e])o[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===o.map((e,t)=>e>1?t:-1).filter(e=>e>=0).length)return ee(n);const s={x:n},i={reps:o};return m.a.runKernel(Y.Tc,s,i)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rr=Object(Z.b)({ceil_:function(e){const t={x:Object(Q.a)(e,"x","ceil")};return m.a.runKernel(Y.x,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ar=Object(Z.b)({clipByValue_:function(e,t,n){const r=Object(Q.a)(e,"x","clipByValue");S.b(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`);const a={x:r},o={clipValueMin:t,clipValueMax:n};return m.a.runKernel(Y.y,a,o)}});var or=n(22);const sr=Object(Z.b)({concat1d_:function(e){return Gn(e,0)}});const ir=Object(Z.b)({concat2d_:function(e,t){return Gn(e,t)}});const ur=Object(Z.b)({concat3d_:function(e,t){return Gn(e,t)}});const cr=Object(Z.b)({concat4d_:function(e,t){return Gn(e,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lr=Object(Z.b)({conv2d_:function(e,t,n,r,a="NHWC",o=[1,1],s){const i=Object(Q.a)(e,"x","conv2d"),u=Object(Q.a)(t,"filter","conv2d");let c=i,l=!1;3===i.rank&&(l=!0,c=zn(i,[1,i.shape[0],i.shape[1],i.shape[2]])),S.b(4===c.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),S.b(4===u.rank,()=>"Error in conv2d: filter must be rank 4, but got rank "+u.rank+"."),null!=s&&S.b(S.v(r),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);const d="NHWC"===a?c.shape[3]:c.shape[1];S.b(d===u.shape[2],()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${u.shape[2]}.`),S.b(Ln(n,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`);const h={x:c,filter:u},p={strides:n,pad:r,dataFormat:a,dilations:o,dimRoundingMode:s},f=m.a.runKernel(Y.C,h,p);return l?zn(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const dr=Object(Z.b)({conv1d_:function(e,t,n,r,a="NWC",o=1,s){const i=Object(Q.a)(e,"x","conv1d"),u=Object(Q.a)(t,"filter","conv1d");let c=i,l=!1;2===i.rank&&(l=!0,c=zn(i,[1,i.shape[0],i.shape[1]])),S.b(3===c.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),S.b(3===u.rank,()=>"Error in conv1d: filter must be rank 3, but got rank "+u.rank+"."),null!=s&&S.b(S.v(r),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`),S.b(c.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${u.shape[1]}.`),S.b(Ln(n,o),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${o}'`),S.b("NWC"===a,()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`);const d=zn(u,[1,u.shape[0],u.shape[1],u.shape[2]]),h=zn(c,[c.shape[0],1,c.shape[1],c.shape[2]]),p=lr(h,d,[1,n],r,"NHWC",[1,o],s);return zn(p,l?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hr=Object(Z.b)({conv2DBackpropInput_:function(e,t,n,r,a,o="NHWC",s){S.b(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let i=e,u=t,c=!1;3===t.rank&&(c=!0,u=zn(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,e[0],e[1],e[2]]),S.b(4===i.length,()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+i.length+"."),S.b(4===u.rank,()=>"Error in conv2dDerInput: dy must be rank 4, but got rank "+u.rank),S.b(4===n.rank,()=>"Error in conv2dDerInput: filter must be rank 4, but got rank "+n.rank);const l="NHWC"===o?i[3]:i[1],d="NHWC"===o?u.shape[3]:u.shape[1];S.b(l===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[2]}.`),S.b(d===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[3]}.`),null!=s&&S.b(S.v(a),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${s} but got pad ${a}.`);const h={dy:u,filter:n},p={strides:r,pad:a,dataFormat:o,dimRoundingMode:s,inputShape:i},f=m.a.runKernel(Y.E,h,p);return c?zn(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const pr=Object(Z.b)({conv2dTranspose_:function(e,t,n,r,a,o){const s=Object(Q.a)(e,"x","conv2dTranspose"),i=Object(Q.a)(t,"filter","conv2dTranspose");return hr(n,s,i,r,a,"NHWC",o)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fr=Object(Z.b)({conv3d_:function(e,t,n,r,a="NDHWC",o=[1,1,1]){const s=Object(Q.a)(e,"x","conv3d"),i=Object(Q.a)(t,"filter","conv3d");let u=s,c=!1;4===s.rank&&(c=!0,u=zn(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),S.b(5===u.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),S.b(5===i.rank,()=>"Error in conv3d: filter must be rank 5, but got rank "+i.rank+"."),S.b(u.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${i.shape[3]}.`),S.b(Ln(n,o),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),S.b("NDHWC"===a,()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`);const l={x:u,filter:i},d={strides:n,pad:r,dataFormat:a,dilations:o},h=m.a.runKernel(Y.F,l,d);return c?zn(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mr=Object(Z.b)({conv3DBackpropInput_:function(e,t,n,r,a){S.b(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let o=e,s=t,i=!1;4===t.rank&&(i=!0,s=zn(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),o=[1,e[0],e[1],e[2],e[3]]);const u=o[4],c=s.shape[4];S.b(5===o.length,()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+o.length+"."),S.b(5===s.rank,()=>"Error in conv3dDerInput: dy must be rank 5, but got rank "+s.rank),S.b(5===n.rank,()=>"Error in conv3dDerInput: filter must be rank 5, but got rank "+n.rank),S.b(u===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`),S.b(c===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${n.shape[4]}.`);const l={dy:s,filter:n},d={pad:a,strides:r,inputShape:o},h=m.a.runKernel(Y.H,l,d);return i?zn(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});const br=Object(Z.b)({conv3dTranspose_:function(e,t,n,r,a){const o=Object(Q.a)(e,"x","conv3dTranspose"),s=Object(Q.a)(t,"filter","conv3dTranspose");return mr(n,o,s,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gr=Object(Z.b)({cos_:function(e){const t={x:Object(Q.a)(e,"x","cos")};return m.a.runKernel(Y.I,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xr=Object(Z.b)({cosh_:function(e){const t={x:Object(Q.a)(e,"x","cosh")};return m.a.runKernel(Y.J,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vr=Object(Z.b)({cumsum_:function(e,t=0,n=!1,r=!1){const a={x:Object(Q.a)(e,"x","cumsum")},o={axis:t,exclusive:n,reverse:r};return m.a.runKernel(Y.L,a,o)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kr=Object(Z.b)({denseBincount_:function(e,t,n,r=!1){const a=Object(Q.a)(e,"x","denseBincount"),o=Object(Q.a)(t,"weights","denseBincount");S.b("int32"===a.dtype,()=>"Error in denseBincount: input dtype must be int32, but got "+a.dtype),S.b(a.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`),S.b(n>=0,()=>`size must be non-negative, but got ${n}.`),S.b(o.size===a.size||0===o.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: `+o.shape+".");const s={x:a,weights:o},i={size:n,binaryOutput:r};return m.a.runKernel(Y.M,s,i)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yr=Object(Z.b)({depthToSpace_:function(e,t,n="NHWC"){const r=Object(Q.a)(e,"x","depthToSpace"),a="NHWC"===n?r.shape[1]:r.shape[2],o="NHWC"===n?r.shape[2]:r.shape[3],s="NHWC"===n?r.shape[3]:r.shape[1];S.b(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`),S.b(o*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${o} and ${t} for depthToSpace with input shape\n        ${r.shape}`),S.b(s%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${s} for depthToSpace with input shape ${r.shape}`);const i={x:r},u={blockSize:t,dataFormat:n};return m.a.runKernel(Y.N,i,u)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wr=Object(Z.b)({depthwiseConv2d_:function(e,t,n,r,a="NHWC",o=[1,1],s){const i=Object(Q.a)(e,"x","depthwiseConv2d"),u=Object(Q.a)(t,"filter","depthwiseConv2d");let c=i,l=!1;3===i.rank&&(l=!0,c=zn(i,[1,i.shape[0],i.shape[1],i.shape[2]])),S.b(4===c.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),S.b(4===u.rank,()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+u.rank+"."),S.b(c.shape[3]===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),null!=s&&S.b(S.v(r),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`);const d={x:c,filter:u},h={strides:n,pad:r,dataFormat:a,dilations:o,dimRoundingMode:s},p=m.a.runKernel(Y.O,d,h);return l?zn(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ir=Object(Z.b)({diag_:function(e){const t={x:Object(Q.a)(e,"x","diag")};return m.a.runKernel(Y.R,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Or=Object(Z.b)({dilation2d_:function(e,t,n,r,a=[1,1],o="NHWC"){const s=Object(Q.a)(e,"x","dilation2d"),i=Object(Q.a)(t,"filter","dilation2d");S.b(3===s.rank||4===s.rank,()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+s.rank+"."),S.b(3===i.rank,()=>"Error in dilation2d: filter must be rank 3, but got rank "+i.rank+"."),S.b("NHWC"===o,()=>"Error in dilation2d: Only NHWC is currently supported, but got dataFormat of "+o);let u=s,c=!1;3===s.rank&&(u=zn(s,[1,s.shape[0],s.shape[1],s.shape[2]]),c=!0);const l={x:u,filter:i},d={strides:n,pad:r,dilations:a},h=m.a.runKernel(Y.S,l,d);return c?zn(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cr=Object(Z.b)({equal_:function(e,t){let n=Object(Q.a)(e,"a","equal"),r=Object(Q.a)(t,"b","equal");[n,r]=Object(ye.makeTypesMatch)(n,r),ln(n.shape,r.shape);const a={a:n,b:r};return m.a.runKernel(Y.X,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tr=Object(Z.b)({where_:function(e,t,n){const r=Object(Q.a)(t,"a","where"),a=Object(Q.a)(n,"b","where"),o=Object(Q.a)(e,"condition","where","bool"),s=ln(r.shape,a.shape),i=nr(r,s),u=nr(a,s);1===o.rank&&Object(S.b)(o.shape[0]===r.shape[0],()=>"The first dimension of `a` must match the size of `condition`."),1!==o.rank&&Object(S.e)(o.shape,u.shape,"Error in where: ");const c={condition:o,t:i,e:u};return m.a.runKernel(Y.yc,c)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $r=Object(Z.b)({divNoNan_:function(e,t){let n=Object(Q.a)(e,"a","div"),r=Object(Q.a)(t,"b","div");[n,r]=Object(ye.makeTypesMatch)(n,r);const a=Lt(n,r),o=Ut(a),s=Cr(r,o);return Tr(s,o,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sr=Object(Z.b)({dot_:function(e,t){const n=Object(Q.a)(e,"t1","dot"),r=Object(Q.a)(t,"t2","dot");S.b(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);const a=1===n.rank?n.size:n.shape[1],o=1===r.rank?r.size:r.shape[0];if(S.b(a===o,()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${o}.`),1===n.rank&&1===r.rank){const e=zn(n,[1,-1]),t=zn(r,[-1,1]),a=we(e,t);return zn(a,[])}if(1===n.rank&&2===r.rank){const e=zn(n,[1,-1]),t=zn(r,[r.shape[0],r.shape[1]]),a=we(e,t);return zn(a,[a.size])}if(2===n.rank&&1===r.rank){const e=zn(r,[-1,1]),t=we(n,e);return zn(t,[t.size])}{const e=zn(r,[r.shape[0],r.shape[1]]);return we(n,e)}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Er=Object(Z.b)({elu_:function(e){const t={x:Object(Q.a)(e,"x","elu")};return m.a.runKernel(Y.V,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nr=Object(Z.b)({erf_:function(e){let t=Object(Q.a)(e,"x","erf");S.b("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=J(t,"float32"));const n={x:t};return m.a.runKernel(Y.Y,n)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _r=Object(Z.b)({exp_:function(e){const t={x:Object(Q.a)(e,"x","exp")};return m.a.runKernel(Y.Z,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ar=Object(Z.b)({expandDims_:function(e,t=0){const n=Object(Q.a)(e,"x","expandDims","string_or_numeric");S.b(t<=n.rank,()=>"Axis must be <= rank of the tensor");const r={input:n},a={dim:t};return m.a.runKernel(Y.ab,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rr=Object(Z.b)({expm1_:function(e){const t={x:Object(Q.a)(e,"x","expm1")};return m.a.runKernel(Y.bb,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fr=Object(Z.b)({tile_:function(e,t){const n=Object(Q.a)(e,"x","tile","string_or_numeric");S.b(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);const r={x:n},a={reps:t};return m.a.runKernel(Y.Tc,r,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jr=Object(Z.b)({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const a=X([e,t],r),o=e<=t?e:t;for(let e=0;e<o;++e)a.set(1,e,e);const s=zn(a.toTensor(),[e,t]);if(null==n)return s;if(1===n.length)return Fr(Ar(s,0),[n[0],1,1]);if(2===n.length)return Fr(Ar(Ar(s,0),0),[n[0],n[1],1,1]);if(3===n.length)return Fr(Ar(Ar(Ar(s,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dr=Object(Z.b)({floor_:function(e){const t={x:Object(Q.a)(e,"x","floor")};return m.a.runKernel(Y.fb,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mr=Object(Z.b)({gather_:function(e,t,n=0,r=0){const a={x:Object(Q.a)(e,"x","gather"),indices:Object(Q.a)(t,"indices","gather","int32")},o={axis:n,batchDims:r};return m.a.runKernel(Y.mb,a,o)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pr=Object(Z.b)({greater_:function(e,t){let n=Object(Q.a)(e,"a","greater"),r=Object(Q.a)(t,"b","greater");[n,r]=Object(ye.makeTypesMatch)(n,r),ln(n.shape,r.shape);const a={a:n,b:r};return m.a.runKernel(Y.nb,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Br=Object(Z.b)({greaterEqual_:function(e,t){let n=Object(Q.a)(e,"a","greaterEqual"),r=Object(Q.a)(t,"b","greaterEqual");[n,r]=Object(ye.makeTypesMatch)(n,r),ln(n.shape,r.shape);const a={a:n,b:r};return m.a.runKernel(Y.ob,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lr=Object(Z.b)({imag_:function(e){const t={input:Object(Q.a)(e,"input","imag")};return m.a.runKernel(Y.rb,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wr=Object(Z.b)({isFinite_:function(e){const t={x:Object(Q.a)(e,"x","isFinite")};return m.a.runKernel(Y.sb,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zr=Object(Z.b)({isInf_:function(e){const t={x:Object(Q.a)(e,"x","isInf")};return m.a.runKernel(Y.tb,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vr=Object(Z.b)({isNaN_:function(e){const t={x:Object(Q.a)(e,"x","isNaN")};return m.a.runKernel(Y.ub,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ur=Object(Z.b)({leakyRelu_:function(e,t=.2){const n={x:Object(Q.a)(e,"x","leakyRelu")},r={alpha:t};return m.a.runKernel(Y.xb,n,r)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gr=Object(Z.b)({less_:function(e,t){let n=Object(Q.a)(e,"a","less"),r=Object(Q.a)(t,"b","less");[n,r]=Object(ye.makeTypesMatch)(n,r),ln(n.shape,r.shape);const a={a:n,b:r};return m.a.runKernel(Y.yb,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hr=Object(Z.b)({lessEqual_:function(e,t){let n=Object(Q.a)(e,"a","lessEqual"),r=Object(Q.a)(t,"b","lessEqual");[n,r]=Object(ye.makeTypesMatch)(n,r),ln(n.shape,r.shape);const a={a:n,b:r};return m.a.runKernel(Y.zb,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kr(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return m.a.runKernel(Y.Ab,{},r)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qr=Object(Z.b)({localResponseNormalization_:function(e,t=5,n=1,r=1,a=.5){const o=Object(Q.a)(e,"x","localResponseNormalization");S.b(4===o.rank||3===o.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${o.rank}.`),S.b(S.v(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let s=o,i=!1;3===o.rank&&(i=!0,s=zn(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const u={x:s},c={depthRadius:t,bias:n,alpha:r,beta:a},l=m.a.runKernel(Y.vb,u,c);return i?zn(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xr=Object(Z.b)({log_:function(e){const t={x:Object(Q.a)(e,"x","log")};return m.a.runKernel(Y.Bb,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yr=Object(Z.b)({log1p_:function(e){const t={x:Object(Q.a)(e,"x","log1p")};return m.a.runKernel(Y.Cb,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qr=Object(Z.b)({neg_:function(e){const t={x:Object(Q.a)(e,"x","neg")};return m.a.runKernel(Y.Vb,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zr=Object(Z.b)({softplus_:function(e){const t={x:Object(Q.a)(e,"x","softplus")};return m.a.runKernel(Y.Gc,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jr=Object(Z.b)({logSigmoid_:function(e){const t=Object(Q.a)(e,"x","logSigmoid");return Yt(e=>({value:Qr(Zr(Qr(e))),gradFunc:t=>Wt(t,Hn(Qr(e)))}))(t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ea=Object(Z.b)({max_:function(e,t=null,n=!1){const r={x:Object(Q.a)(e,"x","max")},a={reductionIndices:t,keepDims:n};return m.a.runKernel(Y.Hb,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ta=Object(Z.b)({sum_:function(e,t=null,n=!1){let r=Object(Q.a)(e,"x","sum");"bool"===r.dtype&&(r=J(r,"int32"));const a={x:r},o={axis:t,keepDims:n};return m.a.runKernel(Y.Qc,a,o)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const na=Object(Z.b)({logSoftmax_:function(e,t=-1){const n=Object(Q.a)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return Yt((e,n)=>{const r=ea(e,t,!0),a=an(e,r),o=an(J(a,"float32"),Xr(ta(_r(a),t,!0)));n([o]);return{value:o,gradFunc:(e,n)=>{const[r]=n,a=_r(r);return an(e,Wt(ta(e,t,!0),a))}}})(n)}});
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ra(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function aa(e,t,n){const r=e.length+t.length,a=[];let o=0,s=0;for(let i=0;i<r;i++)-1===n.indexOf(i)?a.push(e[o++]):a.push(t[s++]);return a}function oa(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map(t=>e[t])]}function sa(e,t){return aa(e,t.map(e=>1),t)}function ia(e,t,n){S.b(ra(t,n),()=>e+" supports only inner-most axes for now. "+`Got axes ${t} and rank-${n} input.`)}function ua(e,t){if(ra(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach(e=>n.push(e)),n}function ca(e){return e.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function la(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const da=Object(Z.b)({logSumExp_:function(e,t=null,n=!1){const r=Object(Q.a)(e,"x","logSumExp"),a=Object(S.I)(t,r.shape),o=ea(r,a,!0),s=an(r,o),i=_r(s),u=ta(i,a),c=Xr(u),l=Pt(zn(o,c.shape),c);if(n){const e=sa(l.shape,a);return zn(l,e)}return l}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ha=Object(Z.b)({logicalAnd_:function(e,t){const n=Object(Q.a)(e,"a","logicalAnd","bool"),r=Object(Q.a)(t,"b","logicalAnd","bool");ln(n.shape,r.shape);const a={a:n,b:r};return m.a.runKernel(Y.Eb,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pa=Object(Z.b)({logicalNot_:function(e){const t={x:Object(Q.a)(e,"x","logicalNot","bool")};return m.a.runKernel(Y.Fb,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fa=Object(Z.b)({logicalOr_:function(e,t){const n=Object(Q.a)(e,"a","logicalOr","bool"),r=Object(Q.a)(t,"b","logicalOr","bool");ln(n.shape,r.shape);const a={a:n,b:r};return m.a.runKernel(Y.Gb,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ma=Object(Z.b)({logicalXor_:function(e,t){const n=Object(Q.a)(e,"a","logicalXor","bool"),r=Object(Q.a)(t,"b","logicalXor","bool");return ln(n.shape,r.shape),ha(fa(e,t),pa(ha(e,t)))}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ba=Object(Z.b)({maxPool_:function(e,t,n,r,a){const o=Object(Q.a)(e,"x","maxPool");let s=o,i=!1;3===o.rank&&(i=!0,s=zn(o,[1,o.shape[0],o.shape[1],o.shape[2]])),S.b(4===s.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${s.rank}.`),S.b(Ln(n,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`),null!=a&&S.b(S.v(r),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`);const u={x:s},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a},l=m.a.runKernel(Y.Ib,u,c);return i?zn(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ga=Object(Z.b)({maxPool3d_:function(e,t=[1,1,1],n,r,a,o="NDHWC"){const s=Object(Q.a)(e,"x","maxPool3d");let i=s,u=!1;4===s.rank&&(u=!0,i=zn(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),S.b(5===i.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),S.b("NDHWC"===o,()=>"Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of "+o),null!=a&&S.b(S.v(r),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`);const c={x:i},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:o},d=m.a.runKernel(Y.Jb,c,l);return u?zn(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xa=Object(Z.b)({maxPoolWithArgmax_:function(e,t,n,r,a=!1){const o={x:Object(Q.a)(e,"x","maxPoolWithArgmax")},s={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},i=m.a.runKernel(Y.Mb,o,s);return{result:i[0],indexes:i[1]}}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const va=Object(Z.b)({mean_:function(e,t=null,n=!1){const r={x:Object(Q.a)(e,"x","mean")},a={axis:t,keepDims:n};return m.a.runKernel(Y.Ob,r,a)}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ka=Object(Z.b)({min_:function(e,t=null,n=!1){const r={x:Object(Q.a)(e,"x","min")},a={axis:t,keepDims:n};return m.a.runKernel(Y.Pb,r,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ya=Object(Z.b)({minimum_:function(e,t){let n=Object(Q.a)(e,"a","minimum"),r=Object(Q.a)(t,"b","minimum");[n,r]=Object(ye.makeTypesMatch)(n,r),"bool"===n.dtype&&(n=J(n,"int32"),r=J(r,"int32")),ln(n.shape,r.shape);const a={a:n,b:r};return m.a.runKernel(Y.Qb,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wa=Object(Z.b)({mirrorPad_:function(e,t,n){S.b("reflect"===n||"symmetric"===n,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);const r=Object(Q.a)(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");S.b(t.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`);const a="reflect"===n?1:0;for(let e=0;e<r.rank;e++)S.b(2===t[e].length,()=>"Invalid number of paddings. Must be length of 2 each."),S.b(t[e][0]>=0&&t[e][0]<=r.shape[e]-a&&t[e][1]>=0&&t[e][1]<=r.shape[e]-a,()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-a} or less than 0 for input of shape `+r.shape);const o={paddings:t,mode:n},s={x:r};return m.a.runKernel(Y.Rb,s,o)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ia=Object(Z.b)({mod_:function(e,t){let n=Object(Q.a)(e,"a","mod"),r=Object(Q.a)(t,"b","mod");[n,r]=Object(ye.makeTypesMatch)(n,r);const a={a:n,b:r};return m.a.runKernel(Y.Sb,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oa=Object(Z.b)({moments_:function(e,t=null,n=!1){e=Object(Q.a)(e,"x","moments");const r=Object(S.I)(t,e.shape),a=va(e,r,n);let o=a.shape;n||(o=sa(a.shape,r));const s=Vt(an(J(e,"float32"),zn(a,o)));return{mean:a,variance:va(s,r,n)}}});const Ca=Object(Z.b)({multiRNNCell_:function(e,t,n,r){const a=Object(Q.a)(t,"data","multiRNNCell"),o=Object(Q.b)(n,"c","multiRNNCell"),s=Object(Q.b)(r,"h","multiRNNCell");let i=a;const u=[];for(let t=0;t<e.length;t++){const n=e[t](i,o[t],s[t]);u.push(n[0]),u.push(n[1]),i=n[1]}const c=[],l=[];for(let e=0;e<u.length;e+=2)c.push(u[e]),l.push(u[e+1]);return[c,l]}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ta=Object(Z.b)({multinomial_:function(e,t,n,r=!1){const a=Object(Q.a)(e,"logits","multinomial"),o=a.size,s=a.rank;if(o<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+o+".");if(s>2)throw new Error("Rank of probabilities must be 1 or 2, but is "+s);n=n||Math.random();const i={logits:1===s?zn(a,[1,-1]):a},u={numSamples:t,seed:n,normalized:r},c=m.a.runKernel(Y.Tb,i,u);return 1===s?zn(c,[c.size]):c}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $a=Object(Z.b)({notEqual_:function(e,t){let n=Object(Q.a)(e,"a","notEqual"),r=Object(Q.a)(t,"b","notEqual");[n,r]=Object(ye.makeTypesMatch)(n,r),ln(n.shape,r.shape);const a={a:n,b:r};return m.a.runKernel(Y.Zb,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sa(e,t="float32"){if("complex64"===t){const t=Sa(e,"float32"),n=Sa(e,"float32");return Object(or.a)(t,n)}const n=Object(S.F)(Object(S.O)(e),t);return m.a.makeTensor(n,e,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ea(e,t="float32"){if("complex64"===t){const t=Ea(e,"float32"),n=Sa(e,"float32");return Object(or.a)(t,n)}const n=Object(S.D)(Object(S.O)(e),t);return m.a.makeTensor(n,e,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Na=Object(Z.b)({onesLike_:function(e){const t={x:Object(Q.a)(e,"x","onesLike")};return m.a.runKernel(Y.bc,t)}});const _a=Object(Z.b)({outerProduct_:function(e,t){const n=Object(Q.a)(e,"v1","outerProduct"),r=Object(Q.a)(t,"v2","outerProduct");S.b(1===n.rank&&1===r.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);const a=zn(n,[-1,1]),o=zn(r,[1,-1]);return we(a,o)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aa=Object(Z.b)({pad_:function(e,t,n=0){const r=Object(Q.a)(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const a={paddings:t,constantValue:n},o={x:r};return m.a.runKernel(Y.dc,o,a)}});const Ra=Object(Z.b)({pad1d_:function(e,t,n=0){return Object(S.b)(2===t.length,()=>"Invalid number of paddings. Must be length of 2."),Aa(e,[t],n)}});const Fa=Object(Z.b)({pad2d_:function(e,t,n=0){return Object(S.b)(2===t.length&&2===t[0].length&&2===t[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),Aa(e,t,n)}});const ja=Object(Z.b)({pad3d_:function(e,t,n=0){return Object(S.b)(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),Aa(e,t,n)}});const Da=Object(Z.b)({pad4d_:function(e,t,n=0){return Object(S.b)(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),Aa(e,t,n)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ma=Object(Z.b)({spaceToBatchND_:function(e,t,n){const r=Object(Q.a)(e,"x","spaceToBatchND");S.b(r.rank>=1+t.length,()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`),S.b(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),S.b(r.shape.reduce((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);const a={x:r},o={blockShape:t,paddings:n};return m.a.runKernel(Y.Hc,a,o)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pa=Object(Z.b)({pool_:function(e,t,n,r,a,o){null==a&&(a=[1,1]),null==o&&(o=1),0===r&&(r="valid");const s=Object(Q.a)(e,"x","maxPool");let i=s,u=!1;3===s.rank&&(u=!0,i=zn(s,[1,s.shape[0],s.shape[1],s.shape[2]])),S.b(Ln(o,a),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${o} and dilations '${a}'`);const c=Nn(i.shape,t,o,a,r),l=[c.dilationHeight,c.dilationWidth];let d;d="same"===r?function(e,t){const n=e.map((e,n)=>e+(e-1)*(t[n]-1)).map(e=>e-1),r=n.map(e=>Math.floor(e/2)),a=n.map((e,t)=>e-r[t]);return n.map((e,t)=>[r[t],a[t]])}([c.filterHeight,c.filterWidth],l):[[0,0],[0,0]];const h=1===l[0]&&1===l[1],[p,f]=function(e,t,n){const r=n.map(e=>e[0]),a=n.map(e=>e[1]),o=e.concat(r,a),s=t.map((e,t)=>(e-o[t]%e)%e),i=a.map((e,t)=>e+s[t]),u=t.map((e,t)=>[r[t],i[t]]),c=t.map((e,t)=>[0,s[t]]);return[u,c]}([c.inHeight,c.inWidth],l,d),m=h?r:"valid",b=h?i:Ma(i,l,p),g=("avg"===n?()=>Vn(b,t,o,m):()=>ba(b,t,o,m))(),x=h?g:Yn(g,l,f);return u?zn(x,[x.shape[1],x.shape[2],x.shape[3]]):x}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ba=Object(Z.b)({prelu_:function(e,t){const n={x:Object(Q.a)(e,"x","prelu"),alpha:Object(Q.a)(t,"alpha","prelu")};return m.a.runKernel(Y.gc,n)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const La=Object(Z.b)({prod_:function(e,t=null,n=!1){let r=Object(Q.a)(e,"x","prod");"bool"===r.dtype&&(r=J(r,"int32"));const a={x:r},o={axis:t,keepDims:n};return m.a.runKernel(Y.hc,a,o)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wa=Object(Z.b)({rand_:function(e,t,n){const r=Object(S.O)(e);let a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error("Unknown data type "+n);a=new Uint8Array(r)}for(let e=0;e<r;e++)a[e]=t();return m.a.makeTensor(a,e,n)}});var za=n(40);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Va{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const o=a||Math.random();this.random=za.alea(o.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,o;do{r=2*this.random()-1,a=2*this.random()-1,o=r*r+a*a}while(o>=1||0===o);const s=Math.sqrt(-2*Math.log(o)/o);e=this.mean+this.stdDev*r*s,t=this.mean+this.stdDev*a*s,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Ua{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const a=r||Math.random();this.randu=za.alea(a.toString()),this.randn=new Va(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,o;for(;;){do{r=this.randn.nextValue(),o=1+this.c*r}while(o<=0);if(o*=o*o,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-o+Math.log(o)),a=this.randu(),a<t||Math.log(a)<n)break}return o=1/this.beta*this.d*o,this.alpha<1&&(o*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(o)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class Ga{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=za.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Ha=Object(Z.b)({randomGamma_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n=1,r="float32",a){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error("Unsupported data type "+r);const o=new Ua(t,n,r,a),s=X(e,r);for(let e=0;e<s.values.length;e++)s.values[e]=o.nextValue();return s.toTensor()}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ka=Object(Z.b)({randomNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type "+r);const o=new Va(t,n,r,!1,a),s=X(e,r);for(let e=0;e<s.values.length;e++)s.values[e]=o.nextValue();return s.toTensor()}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qa=Object(Z.b)({randomUniform_:function(e,t=0,n=1,r="float32",a){const o=X(e,r),s=new Ga(t,n,null,a);for(let e=0;e<o.values.length;e++)o.values[e]=s.nextValue();return o.toTensor()}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xa(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const a={start:e,stop:t,step:n,dtype:r};return m.a.runKernel(Y.ic,{},a)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ya=Object(Z.b)({real_:function(e){const t={input:Object(Q.a)(e,"input","real")};return m.a.runKernel(Y.jc,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qa=Object(Z.b)({reciprocal_:function(e){const t={x:Object(Q.a)(e,"x","reciprocal")};return m.a.runKernel(Y.lc,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Za=Object(Z.b)({relu_:function(e){const t={x:Object(Q.a)(e,"x","relu")};return m.a.runKernel(Y.mc,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ja=Object(Z.b)({relu6_:function(e){const t={x:Object(Q.a)(e,"x","relu6")};return m.a.runKernel(Y.nc,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eo=Object(Z.b)({reverse_:function(e,t){const n={x:Object(Q.a)(e,"x","reverse")},r={dims:t};return m.a.runKernel(Y.tc,n,r)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const to=Object(Z.b)({reverse1d_:function(e){const t=Object(Q.a)(e,"x","reverse");return S.b(1===t.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),eo(t,0)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const no=Object(Z.b)({reverse2d_:function(e,t){const n=Object(Q.a)(e,"x","reverse");return S.b(2===n.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),eo(n,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ro=Object(Z.b)({reverse3d_:function(e,t){const n=Object(Q.a)(e,"x","reverse");return S.b(3===n.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),eo(n,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ao=Object(Z.b)({reverse4d_:function(e,t){const n=Object(Q.a)(e,"x","reverse");return S.b(4===n.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),eo(n,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oo=Object(Z.b)({round_:function(e){const t={x:Object(Q.a)(e,"x","round")};return m.a.runKernel(Y.vc,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const so=Object(Z.b)({rsqrt_:function(e){const t={x:Object(Q.a)(e,"x","rsqrt")};return m.a.runKernel(Y.wc,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const io=Object(Z.b)({selu_:function(e){const t={x:Object(Q.a)(e,"x","selu")};return m.a.runKernel(Y.zc,t)}});const uo=Object(Z.b)({separableConv2d_:function(e,t,n,r,a,o=[1,1],s="NHWC"){const i=Object(Q.a)(e,"x","separableConv2d"),u=Object(Q.a)(t,"depthwiseFilter","separableConv2d"),c=Object(Q.a)(n,"pointwiseFilter","separableConv2d");let l=i,d=!1;if(3===i.rank&&(d=!0,l=zn(i,[1,i.shape[0],i.shape[1],i.shape[2]])),"NCHW"===s)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");S.b(4===l.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${l.rank}.`),S.b(4===u.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),S.b(4===c.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),S.b(1===c.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),S.b(1===c.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);const h=u.shape[2],p=u.shape[3];S.b(c.shape[2]===h*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${h*p}, but got ${c.shape[2]}.`);const f=wr(l,u,r,a,s,o),m=lr(f,c,1,"valid",s);return d?zn(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const co=async function(e,t){const n=Object(Q.a)(e,"x","setdiff1d"),r=Object(Q.a)(t,"y","setdiff1d");S.b(n.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`),S.b(1===n.rank,()=>`x should be 1D tensor, but got x (${n.shape}).`),S.b(1===r.rank,()=>`y should be 1D tensor, but got y (${r.shape}).`);const a=await n.data(),o=await r.data(),s=new Set(o);let i=0;for(let e=0;e<a.length;e++)s.has(a[e])||i++;const u=new q.b([i],n.dtype),c=new q.b([i],"int32");for(let e=0,t=0;e<a.length;e++)s.has(a[e])||(u.values[t]=a[e],c.values[t]=e,t++);return[u.toTensor(),c.toTensor()]};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lo=Object(Z.b)({sign_:function(e){const t={x:Object(Q.a)(e,"x","sign")};return m.a.runKernel(Y.Bc,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ho=Object(Z.b)({sin_:function(e){const t={x:Object(Q.a)(e,"x","sin")};return m.a.runKernel(Y.Cc,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const po=Object(Z.b)({sinh_:function(e){const t={x:Object(Q.a)(e,"x","sinh")};return m.a.runKernel(Y.Dc,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fo=Object(Z.b)({slice1d_:function(e,t,n){const r=Object(Q.a)(e,"x","slice1d");return S.b(1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),Kn(r,[t],[n])}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mo=Object(Z.b)({slice2d_:function(e,t,n){const r=Object(Q.a)(e,"x","slice2d");return S.b(2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),Kn(r,t,n)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bo=Object(Z.b)({slice3d_:function(e,t,n){const r=Object(Q.a)(e,"x","slice3d");return S.b(3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),Kn(r,t,n)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const go=Object(Z.b)({slice4d_:function(e,t,n){const r=Object(Q.a)(e,"x","slice4d");return S.b(4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),Kn(r,t,n)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xo=Object(Z.b)({softmax_:function(e,t=-1){const n=Object(Q.a)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},a={dim:t};return m.a.runKernel(Y.Fc,r,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vo=Object(Z.b)({fft_:function(e){Object(S.b)("complex64"===e.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);const t={input:e};return m.a.runKernel(Y.cb,t)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ko=Object(Z.b)({ifft_:function(e){Object(S.b)("complex64"===e.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);const t={input:e};return m.a.runKernel(Y.pb,t)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yo=Object(Z.b)({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const a=zn(e,[n,t]);r=ko(a)}else{const a=[n,2*(t-1)],o=zn(Ya(e),[n,t]),s=zn(Lr(e),[n,t]),i=eo(Kn(o,[0,1],[n,t-2]),1),u=Wt(eo(Kn(s,[0,1],[n,t-2]),1),Zt(-1)),c=Gn([o,i],1),l=Gn([s,u],1),d=zn(Object(or.a)(c,l),[a[0],a[1]]);r=ko(d)}if(r=Ya(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=zn(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wo=Object(Z.b)({split_:function(e,t,n=0){const r={x:Object(Q.a)(e,"x","split")},a={numOrSizeSplits:t,axis:n};return m.a.runKernel(Y.Jc,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Io=Object(Z.b)({rfft_:function(e,t){Object(S.b)("float32"===e.dtype,()=>"The dtype for rfft() must be real value but got "+e.dtype);let n=e.shape[e.shape.length-1];const r=e.size/n;let a;if(null!=t&&t<n){const r=e.shape.map(e=>0),o=e.shape.map(e=>e);o[e.shape.length-1]=t,a=Kn(e,r,o),n=t}else if(null!=t&&t>n){const r=e.shape.map(e=>e);r[e.shape.length-1]=t-n,a=Gn([e,Sa(r)],e.shape.length-1),n=t}else a=e;const o=Ut(a),s=zn(Object(or.a)(a,o),[r,n]),i=vo(s),u=Math.floor(n/2)+1,c=Ya(i),l=Lr(i),d=wo(c,[u,n-u],c.shape.length-1),h=wo(l,[u,n-u],l.shape.length-1),p=a.shape.slice();return p[a.shape.length-1]=u,zn(Object(or.a)(d[0],h[0]),p)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oo=Object(Z.b)({squaredDifference_:function(e,t){let n=Object(Q.a)(e,"a","squaredDifference"),r=Object(Q.a)(t,"b","squaredDifference");[n,r]=Object(ye.makeTypesMatch)(n,r),ln(n.shape,r.shape);const a={a:n,b:r};return m.a.runKernel(Y.Mc,a,{})}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Co=Object(Z.b)({squeeze_:function(e,t){const n=Object(Q.a)(e,"x","squeeze");return zn(n,Object(S.Q)(n.shape,t).newShape)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const To=Object(Z.b)({stack_:function(e,t=0){const n=Object(Q.b)(e,"tensors","stack","string_or_numeric");S.b(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&S.b(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");const r=n,a={axis:t};return m.a.runKernel(Y.cc,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $o=Object(Z.b)({step_:function(e,t=0){const n={x:Object(Q.a)(e,"x","step")},r={alpha:t};return m.a.runKernel(Y.Nc,n,r)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const So=Object(Z.b)({stridedSlice_:function(e,t,n,r,a=0,o=0,s=0,i=0,u=0){const c={x:Object(Q.a)(e,"x","stridedSlice")},l={begin:t,end:n,strides:r,beginMask:a,endMask:o,ellipsisMask:s,newAxisMask:i,shrinkAxisMask:u};return m.a.runKernel(Y.Oc,c,l)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eo=Object(Z.b)({tan_:function(e){const t={x:Object(Q.a)(e,"x","tan")};return m.a.runKernel(Y.Rc,t)}});var No=n(33);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _o(e,t){Object(S.d)(e);const n=Object(Q.c)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Object($e.a)(e,null,n,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ao(e,t,n){if(Object(S.d)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Object(Q.c)(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Object($e.a)(e,t,r,n)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ro(e,t,n){if(Object(S.d)(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Object(Q.c)(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Object($e.a)(e,t,r,n)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fo(e,t,n){if(Object(S.d)(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=Object(Q.c)(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Object($e.a)(e,t,r,n)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jo(e,t,n){if(Object(S.d)(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=Object(Q.c)(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||r,Object($e.a)(e,t,r,n)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Do=Object(Z.b)({topk_:function(e,t=1,n=!0){const r=Object(Q.a)(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const a=r.shape[r.shape.length-1];if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got `+t);const o={x:r},s={k:t,sorted:n},[i,u]=m.a.runKernel(Y.Uc,o,s);return{values:i,indices:u}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mo=Object(Z.b)({truncatedNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const o=new Va(t,n,r,!0,a),s=X(e,r);for(let e=0;e<s.values.length;e++)s.values[e]=o.nextValue();return s.toTensor()}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Po=Object(Z.b)({unique_:function(e,t=0){const n=Object(Q.a)(e,"x","unique","string_or_numeric");Object(S.b)(n.rank>0,()=>"The input tensor must be at least 1D");const r={x:n},a={axis:t},[o,s]=m.a.runKernel(Y.Xc,r,a);return{values:o,indices:s}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bo=Object(Z.b)({unsortedSegmentSum_:function(e,t,n){const r=Object(Q.a)(e,"x","unsortedSegmentSum"),a=Object(Q.a)(t,"segmentIds","unsortedSegmentSum","int32");Object(S.b)(Object(S.v)(n),()=>"numSegments must be of dtype int");const o={x:r,segmentIds:a},s={numSegments:n};return m.a.runKernel(Y.Zc,o,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lo=Object(Z.b)({unstack_:function(e,t=0){const n=Object(Q.a)(e,"x","unstack","string_or_numeric");S.b(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);const r={value:n},a={axis:t};return m.a.runKernel(Y.Yc,r,a)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wo(e,t=!0,n,r){return m.a.makeVariable(e,t,n,r)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zo(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=X(e,"int32"),a=X([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const o=r.indexToLoc(n[t]),s=t*e.length;a.values.set(o,s)}return a.toTensor()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vo=async function(e){const t=Object(Q.a)(e,"condition","whereAsync","bool"),n=await t.data(),r=zo(t.shape,n);return e!==t&&t.dispose(),r};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uo=async function(e,t,n){const r=Object(Q.a)(e,"tensor","boolMask"),a=Object(Q.a)(t,"mask","boolMask","bool"),o=null==n?0:n,s=a.rank,i=r.shape;S.b(s>0,()=>"mask cannot be scalar"),S.e(i.slice(o,o+s),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let e=o;e<o+s;e++)u*=i[e];const c=i.slice(0,o).concat([u],i.slice(o+s)),l=zn(r,c),d=zn(a,[-1]),h=await Vo(d),p=Co(h,[1]),f=Mr(l,p,o);return e!==r&&r.dispose(),t!==a&&a.dispose(),p.dispose(),l.dispose(),d.dispose(),h.dispose(),f};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Go=Object(Z.b)({norm_:function(e,t="euclidean",n=null,r=!1){const a=function e(t,n,r=null){if(0===t.rank)return sn(t);if(1!==t.rank&&null===r)return e(zn(t,[-1]),n,r);if(1===t.rank||"number"==typeof r||Array.isArray(r)&&1===r.length){if(1===n)return ta(sn(t),r);if(n===1/0)return ea(sn(t),r);if(n===-1/0)return ka(sn(t),r);if("euclidean"===n||2===n)return zt(ta(rn(sn(t),Zt(2,"int32")),r));throw new Error("Error in norm: invalid ord value: "+n)}if(Array.isArray(r)&&2===r.length){if(1===n)return ea(ta(sn(t),r[0]),r[1]-1);if(n===1/0)return ea(ta(sn(t),r[1]),r[0]);if(n===-1/0)return ka(ta(sn(t),r[1]),r[0]);if("fro"===n||"euclidean"===n)return zt(ta(Vt(t),r));throw new Error("Error in norm: invalid ord value: "+n)}throw new Error("Error in norm: invalid axis: "+r)}(e=Object(Q.a)(e,"x","norm"),t,n);let o=a.shape;if(r){const t=Object(S.I)(n,e.shape);o=sa(a.shape,t)}return zn(a,o)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ho=Object(Z.b)({movingAverage_:function(e,t,n,r,a=!0){const o=Object(Q.a)(e,"v","movingAverage"),s=Object(Q.a)(t,"x","movingAverage"),i=Object(Q.a)(n,"decay","movingAverage");Object(ye.assertTypesMatch)(o,s),S.b(S.a(o.shape,s.shape),()=>"Shape mismatch in v and x");const u=Zt(1),c=an(u,i);let l=Wt(an(s,o),c);if(a){S.b(null!=r,()=>"When using zeroDebias: true, step is required.");const e=Object(Q.a)(r,"step","movingAverage");l=Lt(l,an(u,rn(i,e)))}return Pt(o,l)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ko=Object(Z.b)({scatterND_:function(e,t,n){const r=Object(Q.a)(e,"indices","scatterND","int32"),a=Object(Q.a)(t,"updates","scatterND");Me(a,r,n);const o={indices:r,updates:a},s={shape:n};return m.a.runKernel(Y.xc,o,s)}});const qo=Object(Z.b)({sparseToDense_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,r=0){const a=Object(Q.a)(e,"sparseIndices","sparseToDense","int32"),o=Object(Q.a)(t,"sparseValues","sparseToDense"),s=Object(Q.a)(r,"defaultValue","sparseToDense",o.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,o=e.rank>1?e.shape[1]:1;if(n.length!==o)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${o}.`);const s=t.size;if(0!==t.rank&&(1!==t.rank||s!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(a,o,n,s);const i={sparseIndices:a,sparseValues:o,defaultValue:s},u={outputShape:n};return m.a.runKernel(Y.Ic,i,u)}});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xo=Object(Z.b)({gatherND_:function(e,t){const n=Object(Q.a)(t,"indices","gatherND","int32"),r={params:Object(Q.a)(e,"x","gatherND"),indices:n};return m.a.runKernel(Y.lb,r)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yo=Object(Z.b)({dropout_:
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,r){const a=Object(Q.a)(e,"x","dropout");if(S.b("float32"===a.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`),S.b(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t)return e instanceof q.a?a.clone():a;const o=function(e,t){if(null==t)return e.shape.slice();if(S.a(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),s=1-t,i=Lt(Dr(Pt(qa(o,0,1,"float32",r),s)),s);return Wt(a,i)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qo(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Zo(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let o=0;o<e;++o){const s=2*Math.PI*o/(e+r-1);a[o]=t-n*Math.cos(s)}return _o(a,"float32")}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jo=async function(e,t,n=1){const r=Object(Q.a)(e,"predictions","inTopK"),a=Object(Q.a)(t,"targets","inTopK");Object(S.b)(r.rank>1,()=>"inTopK() expects the predictions to be of rank 2 or higher, but got "+r.rank),Object(S.b)(r.rank-1===a.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`),Object(S.e)(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const o=r.shape[r.shape.length-1];Object(S.b)(n>0&&n<=o,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${o}), but got ${n}`);const s=await r.data(),i=await a.data(),[u,c]=[s.length/o,o],l=Object(S.o)("bool",u);for(let e=0;e<u;e++){const t=e*c,r=s.subarray(t,t+c),a=[];for(let e=0;e<r.length;e++)a.push({value:r[e],index:e});a.sort((e,t)=>t.value-e.value),l[e]=0;for(let t=0;t<n;t++)if(a[t].index===i[e]){l[e]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),Object(No.a)(l,a.shape,"bool")};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const es=Object(Z.b)({conv2DBackpropFilter_:function(e,t,n,r,a,o="NHWC",s){let i=e;3===e.rank&&(i=zn(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=zn(t,[1,t.shape[0],t.shape[1],t.shape[2]])),S.b(4===i.rank,()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+i.shape+"."),S.b(4===u.rank,()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+u.shape+"."),S.b(4===n.length,()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+n+".");const c="NHWC"===o?i.shape[3]:i.shape[1],l="NHWC"===o?u.shape[3]:u.shape[1];S.b(c===n[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${n[2]}.`),S.b(l===n[3],()=>`Error in conv2dDerFilter: depth of dy (${l}) must match output depth for filter (${n[3]}).`),null!=s&&S.b(S.v(a),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${s} but got pad ${a}.`);const d={x:i,dy:u},h={strides:r,pad:a,dataFormat:o,dimRoundingMode:s,filterShape:n};return m.a.runKernel(Y.D,d,h)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ts(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Wt(e,$o(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function ns(e,t){let n=t;const r=cn(e.shape,t.shape);return r.length>0&&(n=ta(n,r)),zn(n,e.shape)}function rs(e,t,n,r){if("linear"===t)return e;if("relu"===t)return Za(e);if("elu"===t)return Er(e);if("relu6"===t)return Ja(e);if("prelu"===t)return Ba(e,n);if("leakyrelu"===t)return Ur(e,r);throw new Error(`Unknown fused activation ${t}.`)}const as=(e,t)=>!(e>0)||"linear"===t;
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const os=Object(Z.b)({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:o=[1,1],dimRoundingMode:s,bias:i,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:l}){if(u=u||"linear",!1===as(m.a.state.gradientDepth,u)){let d=lr(e,t,n,r,a,o,s);return null!=i&&(d=Pt(d,i)),rs(d,u,c,l)}const d=Object(Q.a)(e,"x","conv2d"),h=Object(Q.a)(t,"filter","conv2d");let p=d,f=!1;3===d.rank&&(f=!0,p=zn(d,[1,d.shape[0],d.shape[1],d.shape[2]])),S.b(4===p.rank,()=>"Error in fused conv2d: input must be rank 4, but got rank "+p.rank+"."),S.b(4===h.rank,()=>"Error in fused conv2d: filter must be rank 4, but got rank "+h.rank+"."),null!=s&&S.b(S.v(r),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`),S.b(p.shape[3]===h.shape[2],()=>`Error in conv2d: depth of input (${p.shape[3]}) must match input depth for filter ${h.shape[2]}.`),S.b(Ln(n,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),S.b("NHWC"===a,()=>`Error in conv2d: got dataFormat of ${a} but only NHWC is currently supported.`);const b=An(p.shape,h.shape,n,o,r,s);let g,x;null!=i&&(g=Object(Q.a)(i,"bias","fused conv2d"),[g]=Object(ye.makeTypesMatch)(g,d),ln(b.outShape,g.shape)),null!=c&&(x=Object(Q.a)(c,"prelu weights","fused conv2d"));const v=(e,t)=>{const[a,s,i,c]=t,l=ts(e,i,u);S.b(Bn(o),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`);const d=[hr(s.shape,l,a,n,r),es(s,l,a.shape,n,r)];if(null!=c){const e=ns(c,l);d.push(e)}return d},k={x:p,filter:h,bias:g,preluActivationWeights:x},y={strides:n,pad:r,dataFormat:a,dilations:o,dimRoundingMode:s,activation:u,leakyreluAlpha:l};if(null==i){return Yt((e,t,n)=>{let r=m.a.runKernel(Y.jb,k,y);return n([t,e,r]),f&&(r=zn(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:v}})(p,h)}return Yt((e,t,n,r)=>{let a=m.a.runKernel(Y.jb,k,y);return r([t,e,a,n]),f&&(a=zn(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:v}})(p,h,g)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ss=Object(Z.b)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,a,o=[1,1],s){let i=e;3===e.rank&&(i=zn(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=zn(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={x:i,dy:u},l={strides:r,pad:a,dimRoundingMode:s,dilations:o,filterShape:n};return m.a.runKernel(Y.P,c,l)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const is=Object(Z.b)({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,a,o=[1,1],s){let i=t,u=!1;3===t.rank&&(u=!0,i=zn(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const c={dy:i,filter:n},l={strides:r,pad:a,dimRoundingMode:s,dilations:o,inputShape:e},d=m.a.runKernel(Y.Q,c,l);return u?zn(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const us=Object(Z.b)({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:o=[1,1],dimRoundingMode:s,bias:i,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:l}){if(!1===as(m.a.state.gradientDepth,u)){let d=wr(e,t,n,r,a,o,s);return null!=i&&(d=Pt(d,i)),rs(d,u,c,l)}const d=Object(Q.a)(e,"x","depthwiseConv2d"),h=Object(Q.a)(t,"filter","depthwiseConv2d");let p=d,f=!1;3===d.rank&&(f=!0,p=zn(d,[1,d.shape[0],d.shape[1],d.shape[2]])),S.b(4===p.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`),S.b(4===h.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`),S.b(p.shape[3]===h.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`),null==o&&(o=[1,1]),S.b(Ln(n,o),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),null!=s&&S.b(S.v(r),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${s} but got pad ${r}.`);const b=An(p.shape,h.shape,n,o,r,s,!0);let g,x;null!=i&&(g=Object(Q.a)(i,"bias","fused conv2d"),[g]=Object(ye.makeTypesMatch)(g,d),ln(b.outShape,g.shape)),null!=c&&(x=Object(Q.a)(c,"prelu weights","fused depthwiseConv2d"));const v=(e,t)=>{S.b(Bn(o),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[a,i,c,l]=t,d=ts(e,c,u),h=is(i.shape,d,a,n,r,o,s),p=ss(i,d,a.shape,n,r,o,s);if(null!=l){return[h,p,ns(g,d)]}return[h,p]},k={x:p,filter:h,bias:g,preluActivationWeights:x},y={strides:n,pad:r,dataFormat:a,dilations:o,dimRoundingMode:s,activation:u,leakyreluAlpha:l};if(null==i){return Yt((e,t,n)=>{let r=m.a.runKernel(Y.kb,k,y);return n([t,e,r]),f&&(r=zn(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:v}})(p,h)}return Yt((e,t,n,r)=>{let a=m.a.runKernel(Y.kb,k,y);return r([t,e,a,n]),f&&(a=zn(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:v}})(p,h,g)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cs=Object(Z.b)({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:o="linear",preluActivationWeights:s,leakyreluAlpha:i}){if(!1===as(m.a.state.gradientDepth,o)){let u=we(e,t,n,r);return null!=a&&(u=Pt(u,a)),rs(u,o,s,i)}let u=Object(Q.a)(e,"a","fused matMul"),c=Object(Q.a)(t,"b","fused matMul");[u,c]=Object(ye.makeTypesMatch)(u,c);const l=n?u.shape[u.rank-2]:u.shape[u.rank-1],d=r?c.shape[c.rank-1]:c.shape[c.rank-2],h=n?u.shape[u.rank-1]:u.shape[u.rank-2],p=r?c.shape[c.rank-2]:c.shape[c.rank-1],f=u.shape.slice(0,-2),b=c.shape.slice(0,-2),g=S.O(f),x=S.O(b);S.b(u.rank>=2&&c.rank>=2&&u.rank===c.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${u.rank} and ${c.rank}.`),S.b(S.a(f,b),()=>`Error in fused matMul: outer dimensions (${f}) and (${b}) of Tensors with shapes ${u.shape} and `+c.shape+" must match."),S.b(l===d,()=>`Error in fused matMul: inner shapes (${l}) and (${d}) of Tensors with shapes ${u.shape} and ${c.shape} and transposeA=${n} and transposeB=${r} must match.`);const v=u.shape.slice(0,-2).concat([h,p]),k=zn(u,n?[g,l,h]:[g,h,l]),y=zn(c,r?[x,p,d]:[x,d,p]);let w,I;null!=a&&(w=Object(Q.a)(a,"bias","fused matMul"),[w]=Object(ye.makeTypesMatch)(w,u),ln(v,w.shape)),null!=s&&(I=Object(Q.a)(s,"prelu weights","fused matMul"));const O=(e,t)=>{const[s,i,u,c]=t,l=ts(zn(e,u.shape),u,o);let d,h;if(n||r?!n&&r?(d=we(l,i,!1,!1),h=we(l,s,!0,!1)):n&&!r?(d=we(i,l,!1,!0),h=we(s,l,!1,!1)):(d=we(i,l,!0,!0),h=we(l,s,!0,!0)):(d=we(l,i,!1,!0),h=we(s,l,!0,!1)),null!=a){return[d,h,ns(c,l)]}return[d,h]},C={a:k,b:y,bias:w,preluActivationWeights:I},T={transposeA:n,transposeB:r,activation:o,leakyreluAlpha:i};if(null==a){return Yt((e,t,n)=>{const r=m.a.runKernel(Y.bd,C,T);return n([e,t,r]),{value:zn(r,v),gradFunc:O}})(k,y)}return Yt((e,t,n,r)=>{const a=m.a.runKernel(Y.bd,C,T);return r([e,t,a,n]),{value:zn(a,v),gradFunc:O}})(k,y,w)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ls=Object(Z.b)({hammingWindow_:function(e){return Zo(e,.54,.46)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ds=Object(Z.b)({hannWindow_:function(e){return Zo(e,.5,.5)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hs=Object(Z.b)({frame_:function(e,t,n,r=!1,a=0){let o=0;const s=[];for(;o+t<=e.size;)s.push(Kn(e,o,t)),o+=n;if(r)for(;o<e.size;){const r=o+t-e.size,i=Gn([Kn(e,o,t-r),tn([r],a)]);s.push(i),o+=n}return 0===s.length?Ao([],[0,t]):zn(Gn(s),[s.length,t])}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ps=Object(Z.b)({stft_:function(e,t,n,r,a=ds){null==r&&(r=Qo(t));const o=hs(e,t,n),s=Wt(o,a(t)),i=[];for(let e=0;e<o.shape[0];e++)i.push(Io(Kn(s,[e,0],[1,t]),r));return Gn(i)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fs=Object(Z.b)({cropAndResize_:function(e,t,n,r,a="bilinear",o=0){const s=Object(Q.a)(e,"image","cropAndResize"),i=Object(Q.a)(t,"boxes","cropAndResize","float32"),u=Object(Q.a)(n,"boxInd","cropAndResize","int32"),c=i.shape[0];S.b(4===s.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${s.rank}.`),S.b(2===i.rank&&4===i.shape[1],()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${i.shape}.`),S.b(1===u.rank&&u.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${i.shape}.`),S.b(2===r.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),S.b(r[0]>=1&&r[1]>=1,()=>"cropSize must be atleast [1,1], but was "+r),S.b("bilinear"===a||"nearest"===a,()=>"method must be bilinear or nearest, but was "+a);const l={image:s,boxes:i,boxInd:u},d={method:a,extrapolationValue:o,cropSize:r};return m.a.runKernel(Y.K,l,d)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ms=Object(Z.b)({flipLeftRight_:function(e){const t=Object(Q.a)(e,"image","flipLeftRight","float32");S.b(4===t.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);const n={image:t};return m.a.runKernel(Y.eb,n,{})}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bs=Object(Z.b)({rotateWithOffset_:function(e,t,n=0,r=.5){const a=Object(Q.a)(e,"image","rotateWithOffset","float32");S.b(4===a.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`);const o={image:a},s={radians:t,fillValue:n,center:r};return m.a.runKernel(Y.uc,o,s)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gs(e,t,n,r,a,o){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==o&&(o=0);const s=e.shape[0];return n=Math.min(n,s),S.b(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),S.b(2===e.rank,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),S.b(4===e.shape[1],()=>"boxes must have 4 columns, but 2nd dimension was "+e.shape[1]),S.b(1===t.rank,()=>"scores must be a 1D tensor"),S.b(t.shape[0]===s,()=>`scores has incompatible shape with boxes. Expected ${s}, but was `+t.shape[0]),S.b(0<=o&&o<=1,()=>`softNmsSigma must be in [0, 1], but was '${o}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:o}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xs=Object(Z.b)({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const o=Object(Q.a)(e,"boxes","nonMaxSuppression"),s=Object(Q.a)(t,"scores","nonMaxSuppression"),i=gs(o,s,n,r,a),u={maxOutputSize:n=i.maxOutputSize,iouThreshold:r=i.iouThreshold,scoreThreshold:a=i.scoreThreshold};return m.a.runKernel(Y.Wb,{boxes:o,scores:s},u)}});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vs(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,o=0,s=!1;for(;r<a;){o=r+(a-r>>>1);const i=n(t,e[o]);i>0?r=o+1:(a=o,s=!i)}return s?r:-r-1}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(e,t,n||ks)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function ks(e,t){return e>t?1:e<t?-1:0}function ys(e,t,n,r,a){return Os(e,t,n,r,a,0)}function ws(e,t,n,r,a,o){return Os(e,t,n,r,a,0,!1,o,!0)}function Is(e,t,n,r,a,o){return Os(e,t,n,r,a,o,!0)}function Os(e,t,n,r,a,o,s=!1,i=!1,u=!1){const c=[];for(let e=0;e<t.length;e++)t[e]>a&&c.push({score:t[e],boxIndex:e,suppressBeginIndex:0});c.sort($s);const l=o>0?-.5/o:0,d=[],h=[];for(;d.length<n&&c.length>0;){const t=c.pop(),{score:n,boxIndex:o,suppressBeginIndex:s}=t;if(n<a)break;let i=!1;for(let n=d.length-1;n>=s;--n){const s=Cs(e,o,d[n]);if(s>=r){i=!0;break}if(t.score=t.score*Ts(r,l,s),t.score<=a)break}t.suppressBeginIndex=d.length,i||(t.score===n?(d.push(o),h.push(t.score)):t.score>a&&vs(c,t,$s))}const p=d.length,f=n-p;i&&f>0&&(d.push(...new Array(f).fill(0)),h.push(...new Array(f).fill(0)));const m={selectedIndices:d};return s&&(m.selectedScores=h),u&&(m.validOutputs=p),m}function Cs(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),o=Math.min(r[0],r[2]),s=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),c=Math.min(a[0],a[2]),l=Math.min(a[1],a[3]),d=Math.max(a[0],a[2]),h=Math.max(a[1],a[3]),p=(i-o)*(u-s),f=(d-c)*(h-l);if(p<=0||f<=0)return 0;const m=Math.max(o,c),b=Math.max(s,l),g=Math.min(i,d),x=Math.min(u,h),v=Math.max(g-m,0)*Math.max(x-b,0);return v/(p+f-v)}function Ts(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function $s(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ss=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const o=Object(Q.a)(e,"boxes","nonMaxSuppressionAsync"),s=Object(Q.a)(t,"scores","nonMaxSuppressionAsync"),i=gs(o,s,n,r,a);n=i.maxOutputSize,r=i.iouThreshold,a=i.scoreThreshold;const u=await Promise.all([o.data(),s.data()]),c=u[0],l=u[1],{selectedIndices:d}=ys(c,l,n,r,a);return o!==e&&o.dispose(),s!==t&&s.dispose(),_o(d,"int32")};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Es=Object(Z.b)({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,o=0){const s=Object(Q.a)(e,"boxes","nonMaxSuppression"),i=Object(Q.a)(t,"scores","nonMaxSuppression"),u=gs(s,i,n,r,a,o),c={boxes:s,scores:i},l={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:o=u.softNmsSigma},d=m.a.runKernel(Y.Yb,c,l);return{selectedIndices:d[0],selectedScores:d[1]}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ns=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,o=0){const s=Object(Q.a)(e,"boxes","nonMaxSuppressionAsync"),i=Object(Q.a)(t,"scores","nonMaxSuppressionAsync"),u=gs(s,i,n,r,a,o);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,o=u.softNmsSigma;const c=await Promise.all([s.data(),i.data()]),l=c[0],d=c[1],{selectedIndices:h,selectedScores:p}=Is(l,d,n,r,a,o);return s!==e&&s.dispose(),i!==t&&i.dispose(),{selectedIndices:_o(h,"int32"),selectedScores:_o(p)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _s=Object(Z.b)({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,o=!1){const s=Object(Q.a)(e,"boxes","nonMaxSuppression"),i=Object(Q.a)(t,"scores","nonMaxSuppression"),u=gs(s,i,n,r,a,null),c={boxes:s,scores:i},l={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:o},d=m.a.runKernel(Y.Xb,c,l);return{selectedIndices:d[0],validOutputs:d[1]}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const As=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,o=!1){const s=Object(Q.a)(e,"boxes","nonMaxSuppressionAsync"),i=Object(Q.a)(t,"scores","nonMaxSuppressionAsync"),u=gs(s,i,n,r,a,null),c=u.maxOutputSize,l=u.iouThreshold,d=u.scoreThreshold,[h,p]=await Promise.all([s.data(),i.data()]),{selectedIndices:f,validOutputs:m}=ws(h,p,c,l,d,o);return s!==e&&s.dispose(),i!==t&&i.dispose(),{selectedIndices:_o(f,"int32"),validOutputs:Zt(m,"int32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rs=Object(Z.b)({resizeBilinear_:function(e,t,n=!1,r=!1){const a=Object(Q.a)(e,"images","resizeBilinear");S.b(3===a.rank||4===a.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`),S.b(2===t.length,()=>"Error in resizeBilinear: new shape must 2D, but got shape "+t+"."),S.b(!1===r||!1===n,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let o=a,s=!1;3===a.rank&&(s=!0,o=zn(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,i={images:o},u={alignCorners:n,halfPixelCenters:r,size:t},c=m.a.runKernel(Y.pc,i,u);return s?zn(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fs=Object(Z.b)({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const a=Object(Q.a)(e,"images","resizeNearestNeighbor");S.b(3===a.rank||4===a.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`),S.b(2===t.length,()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+t+"."),S.b("float32"===a.dtype||"int32"===a.dtype,()=>"`images` must have `int32` or `float32` as dtype"),S.b(!1===r||!1===n,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let o=a,s=!1;3===a.rank&&(s=!0,o=zn(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,i={images:o},u={alignCorners:n,halfPixelCenters:r,size:t},c=m.a.runKernel(Y.rc,i,u);return s?zn(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const js=Object(Z.b)({transform_:function(e,t,n="nearest",r="constant",a=0,o){const s=Object(Q.a)(e,"image","transform","float32"),i=Object(Q.a)(t,"transforms","transform","float32");S.b(4===s.rank,()=>`Error in transform: image must be rank 4,but got rank ${s.rank}.`),S.b(2===i.rank&&(i.shape[0]===s.shape[0]||1===i.shape[0])&&8===i.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),S.b(null==o||2===o.length,()=>`Error in transform: outputShape must be [height, width] or null, but got ${o}.`);const u={image:s,transforms:i},c={interpolation:n,fillMode:r,fillValue:a,outputShape:o};return m.a.runKernel(Y.Vc,u,c)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ds=Object(Z.b)({bandPart_:function(e,t,n){Object(S.b)(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),Object(S.b)(n%1==0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);const r=Object(Q.a)(e,"a","bandPart");Object(S.b)(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const a=r.shape,[o,s]=r.shape.slice(-2);if(!(t<=o))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${o}).`);if(!(n<=s))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${s}).`);t<0&&(t=o),n<0&&(n=s);const i=zn(Xa(0,o,1,"int32"),[-1,1]),u=Xa(0,s,1,"int32"),c=an(i,u),l=ha(Hr(c,Zt(+t,"int32")),Br(c,Zt(-n,"int32"))),d=Sa([o,s],r.dtype);return zn(To(Lo(zn(r,[-1,o,s])).map(e=>Tr(l,e,d))),a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ms=Object(Z.b)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,Object(S.b)(null!=e&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=e[0].shape[0];for(let t=1;t<e.length;++t)Object(S.b)(e[t].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`)}else t=!0,e=wo(e,e.shape[0],0).map(e=>Co(e,[0]));Object(S.b)(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);const n=[],r=e;for(let t=0;t<e.length;++t)n.push(m.a.tidy(()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=Wt(ta(Wt(n[r],e)),n[r]);e=an(e,t)}return Lt(e,Go(e,"euclidean"))}));return t?To(n,0):n}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ps(e,t=!1){return m.a.tidy(()=>{Object(S.b)(2===e.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);const n=e.shape[0],r=e.shape[1];let a=jr(n),o=ee(e);const s=Ao([[1]],[1,1]);let i=ee(s);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=o,u=i,c=a;[i,o,a]=m.a.tidy(()=>{const t=Kn(o,[e,e],[n-e,1]),u=Go(t),c=Kn(o,[e,e],[1,1]),l=Tr(Pr(c,0),Ao([[-1]]),Ao([[1]])),d=an(c,Wt(l,u)),h=Lt(t,d);i=1===h.shape[0]?ee(s):Gn([s,Kn(h,[1,0],[h.shape[0]-1,h.shape[1]])],0);const p=Qr(Lt(we(l,d),u)),f=Kn(o,[e,0],[n-e,r]),m=Wt(p,i),b=Oe(i);if(0===e)o=an(f,we(m,we(b,f)));else{const t=an(f,we(m,we(b,f)));o=Gn([Kn(o,[0,0],[e,r]),t],0)}const g=Oe(m),x=Kn(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=an(x,we(we(x,i),g));else{const t=an(x,we(we(x,i),g));a=Gn([Kn(a,[0,0],[n,e]),t],1)}return[i,o,a]}),Tt([t,u,c])}return!t&&n>r&&(a=Kn(a,[0,0],[n,r]),o=Kn(o,[0,0],[r,r])),[a,o]})}const Bs=Object(Z.b)({qr_:function(e,t=!1){if(Object(S.b)(e.rank>=2,()=>"qr() requires input tensor to have a rank >= 2, but got rank "+e.rank),2===e.rank)return Ps(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce((e,t)=>e*t),r=Lo(zn(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],o=[];r.forEach(e=>{const[n,r]=Ps(e,t);a.push(n),o.push(r)});return[zn(To(a,0),e.shape),zn(To(o,0),e.shape)]}}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ls;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Ls||(Ls={}));const Ws=Object(Z.b)({computeWeightedLoss_:function(e,t,n=Ls.SUM_BY_NONZERO_WEIGHTS){const r=Object(Q.a)(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=Object(Q.a)(t,"weights","computeWeightedLoss"));const o=null==a?r:Wt(r,a);if(n===Ls.NONE)return o;if(n===Ls.SUM)return ta(o);if(n===Ls.MEAN){if(null==a)return va(o);{const e=r.size/a.size,t=Lt(ta(o),ta(a));return e>1?Lt(t,Zt(e)):t}}if(n===Ls.SUM_BY_NONZERO_WEIGHTS){if(null==a)return Lt(ta(o),Zt(r.size));{const e=Wt(a,Ea(r.shape)),t=J(ta($a(e,Zt(0))),"float32");return Lt(ta(o),t)}}throw Error("Unknown reduction: "+n)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zs=Object(Z.b)({absoluteDifference_:function(e,t,n,r=Ls.SUM_BY_NONZERO_WEIGHTS){const a=Object(Q.a)(e,"labels","absoluteDifference"),o=Object(Q.a)(t,"predictions","absoluteDifference");let s=null;null!=n&&(s=Object(Q.a)(n,"weights","absoluteDifference")),Object(S.e)(a.shape,o.shape,"Error in absoluteDifference: ");const i=sn(an(a,o));return Ws(i,s,r)}});const Vs=Object(Z.b)({cosineDistance_:function(e,t,n,r,a=Ls.SUM_BY_NONZERO_WEIGHTS){const o=Object(Q.a)(e,"labels","cosineDistance"),s=Object(Q.a)(t,"predictions","cosineDistance");let i=null;null!=r&&(i=Object(Q.a)(r,"weights","cosineDistance")),Object(S.e)(o.shape,s.shape,"Error in cosineDistance: ");const u=Zt(1),c=an(u,ta(Wt(o,s),n,!0));return Ws(c,i,a)}});const Us=Object(Z.b)({hingeLoss_:function(e,t,n,r=Ls.SUM_BY_NONZERO_WEIGHTS){let a=Object(Q.a)(e,"labels","hingeLoss");const o=Object(Q.a)(t,"predictions","hingeLoss");let s=null;null!=n&&(s=Object(Q.a)(n,"weights","hingeLoss")),Object(S.e)(a.shape,o.shape,"Error in hingeLoss: ");const i=Zt(1);a=an(Wt(Zt(2),a),i);const u=Za(an(i,Wt(a,o)));return Ws(u,s,r)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gs=Object(Z.b)({huberLoss_:function(e,t,n,r=1,a=Ls.SUM_BY_NONZERO_WEIGHTS){const o=Object(Q.a)(e,"labels","huberLoss"),s=Object(Q.a)(t,"predictions","huberLoss");let i=null;null!=n&&(i=Object(Q.a)(n,"weights","huberLoss")),Object(S.e)(o.shape,s.shape,"Error in huberLoss: ");const u=Zt(r),c=sn(an(s,o)),l=ya(c,u),d=an(c,l),h=Pt(Wt(Zt(.5),Vt(l)),Wt(u,d));return Ws(h,i,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hs=Object(Z.b)({logLoss_:function(e,t,n,r=1e-7,a=Ls.SUM_BY_NONZERO_WEIGHTS){const o=Object(Q.a)(e,"labels","logLoss"),s=Object(Q.a)(t,"predictions","logLoss");let i=null;null!=n&&(i=Object(Q.a)(n,"weights","logLoss")),Object(S.e)(o.shape,s.shape,"Error in logLoss: ");const u=Zt(1),c=Zt(r),l=Qr(Wt(o,Xr(Pt(s,c)))),d=Wt(an(u,o),Xr(Pt(an(u,s),c))),h=an(l,d);return Ws(h,i,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ks=Object(Z.b)({meanSquaredError_:function(e,t,n,r=Ls.SUM_BY_NONZERO_WEIGHTS){const a=Object(Q.a)(e,"labels","meanSquaredError"),o=Object(Q.a)(t,"predictions","meanSquaredError");let s=null;null!=n&&(s=Object(Q.a)(n,"weights","meanSquaredError")),Object(S.e)(a.shape,o.shape,"Error in meanSquaredError: ");const i=Oo(a,o);return Ws(i,s,r)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qs=Object(Z.b)({sigmoidCrossEntropy_:function(e,t,n,r=0,a=Ls.SUM_BY_NONZERO_WEIGHTS){let o=Object(Q.a)(e,"multiClassLabels","sigmoidCrossEntropy");const s=Object(Q.a)(t,"logits","sigmoidCrossEntropy");let i=null;if(null!=n&&(i=Object(Q.a)(n,"weights","sigmoidCrossEntropy")),Object(S.e)(o.shape,s.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=Zt(r),t=Zt(1),n=Zt(.5);o=Pt(Wt(o,an(t,e)),Wt(n,e))}const u=function(e,t){const n=Object(Q.a)(e,"labels","sigmoidCrossEntropyWithLogits"),r=Object(Q.a)(t,"logits","sigmoidCrossEntropyWithLogits");Object(S.e)(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=Za(r),o=Wt(r,n),s=Yr(_r(Qr(sn(r))));return Pt(an(a,o),s)}(o,s);return Ws(u,i,a)}});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xs=Object(Z.b)({softmaxCrossEntropy_:function(e,t,n,r=0,a=Ls.SUM_BY_NONZERO_WEIGHTS){let o=Object(Q.a)(e,"onehotLabels","softmaxCrossEntropy");const s=Object(Q.a)(t,"logits","softmaxCrossEntropy");let i=null;if(null!=n&&(i=Object(Q.a)(n,"weights","softmaxCrossEntropy")),Object(S.e)(o.shape,s.shape,"Error in softmaxCrossEntropy: "),r>0){const e=Zt(r),t=Zt(1),n=Zt(o.shape[1]);o=Pt(Wt(o,an(t,e)),Lt(e,n))}const u=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was `+n);return Yt((e,t,r)=>{const a=da(t,[n],!0),o=an(J(t,"float32"),a);r([e,o]);const s=Qr(Wt(o,e));return{value:ta(s,[n]),gradFunc:(e,t)=>{const[r,a]=t,o=sa(e.shape,[n]);return[Wt(zn(e,o),an(J(r,"float32"),_r(a))),Wt(zn(e,o),an(_r(a),J(r,"float32")))]}}})(e,t)}(o,s);return Ws(u,i,a)}}),Ys={fft:vo,ifft:ko,rfft:Io,irfft:yo},Qs={hammingWindow:ls,hannWindow:ds,frame:hs,stft:ps},Zs={flipLeftRight:ms,resizeNearestNeighbor:Fs,resizeBilinear:Rs,rotateWithOffset:bs,cropAndResize:fs,nonMaxSuppression:xs,nonMaxSuppressionAsync:Ss,nonMaxSuppressionWithScore:Es,nonMaxSuppressionWithScoreAsync:Ns,nonMaxSuppressionPadded:_s,nonMaxSuppressionPaddedAsync:As,transform:js},Js={bandPart:Ds,gramSchmidt:Ms,qr:Bs},ei={absoluteDifference:zs,computeWeightedLoss:Ws,cosineDistance:Vs,hingeLoss:Us,huberLoss:Gs,logLoss:Hs,meanSquaredError:Ks,sigmoidCrossEntropy:qs,softmaxCrossEntropy:Xs};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class ti{static sgd(e){return new pn(e)}static momentum(e,t,n=!1){return new fn(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new mn(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new on(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new en(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new hn(e,t,n,r,a)}static adagrad(e,t=.1){return new nn(e,t)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ni={sgd:ti.sgd,momentum:ti.momentum,adadelta:ti.adadelta,adagrad:ti.adagrad,rmsprop:ti.rmsprop,adamax:ti.adamax,adam:ti.adam};var ri=n(76);
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ai(e,t){const n=e[0].length;e.forEach((e,t)=>{S.b(e.length===n,()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`)}),S.b(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const r=e[0];e.forEach((e,a)=>{for(let o=0;o<n;o++)S.b(o===t||e[o]===r[o],()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`)})}function oi(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const si=30;function ii(e){return e<=si?e:Object(S.G)(e,Math.floor(Math.sqrt(e)))}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ui(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ci(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function li(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function di(e,t,n,r=!0){const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function hi(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function pi(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fi=1.7580993408473768,mi=1.0507009873554805,bi=.3275911,gi=.254829592,xi=-.284496736,vi=1.421413741,ki=-1.453152027,yi=1.061405429;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wi(...e){Object(b.c)().getBool("IS_TEST")||console.warn(...e)}function Ii(...e){Object(b.c)().getBool("IS_TEST")||console.log(...e)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oi(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Ci(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function Ti(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function $i(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Si(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Ei(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function Ni(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const o=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(o),r[a]=Math.sin(o)}return{real:n,imag:r}}function _i(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}function Ai(e,t,n=0){let r=[];if("number"==typeof t)Object(S.b)(e.shape[n]%t==0,()=>"Number of splits must evenly divide the axis."),r=new Array(t).fill(e.shape[n]/t);else{const a=t.reduce((e,t)=>(-1===t&&(e+=1),e),0);Object(S.b)(a<=1,()=>"There should be only one negative value in split array.");const o=t.indexOf(-1);if(-1!==o){const r=t.reduce((e,t)=>t>0?e+t:e);t[o]=e.shape[n]-r}Object(S.b)(e.shape[n]===t.reduce((e,t)=>e+t),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ri(e,t){let n,r=!1;for(e<=si?(n=e,r=!0):n=Object(S.G)(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Object(S.G)(e,n+1);return n}function Fi(e,t,n){const r=[],a=e.length;for(let o=0;o<a;o++)o!==t?r.push(e[o]):r.push(n);return r}function ji(e,t,n,r){const a=t.shape.length,o=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>o)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${o}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const s=e.shape[n],i=[];let u=1,c=1,l=1;for(let t=0;t<r;++t)i.push(e.shape[t]),u*=e.shape[t];for(let t=r;t<n;t++)i.push(e.shape[t]),c*=e.shape[t];for(let e=r;e<a;e++)i.push(t.shape[e]);for(let t=n+1;t<o;t++)i.push(e.shape[t]),l*=e.shape[t];return{batchSize:u,sliceSize:l,outerSize:c,dimSize:s,outputShape:i}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Di(e){try{return e.map(e=>Object(at.decodeString)(e))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8, error: "+e)}}function Mi(e){return e.map(e=>Object(at.encodeString)(e))}var Pi=n(46),Bi=n(43);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */},function(e,t,n){"use strict";n.d(t,"c",(function(){return u})),n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return d}));var r=n(3),a=n(9),o=n(13),s=n(15),i=n(6);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function u(e,t){let n=e;if(Object(s.A)(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||Object(s.A)(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Object(a.c)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&function e(t,n,r){if(r=r||[],!Array.isArray(t)&&!Object(s.A)(t))return void Object(s.b)(0===n.length,()=>`Element arr[${r.join("][")}] is a primitive, but should be an array/TypedArray of ${n[0]} elements`);Object(s.b)(n.length>0,()=>`Element arr[${r.join("][")}] should be a primitive, but is an array of ${t.length} elements`),Object(s.b)(t.length===n[0],()=>`Element arr[${r.join("][")}] should have ${n[0]} elements, but has ${t.length} elements`);const a=n.slice(1);for(let n=0;n<t.length;++n)e(t[n],a,r.concat(n))}(e,r,[]),r}function c(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function l(e,t,n,a="numeric"){if(e instanceof o.a)return c(a,e.dtype,t,n),e;let l=Object(s.r)(e);if("string"!==l&&["bool","int32","float32"].indexOf(a)>=0&&(l=a),c(a,l,t,n),null==e||!Object(s.A)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const d=u(e,l);Object(s.A)(e)||Array.isArray(e)||(e=[e]);const h="string"!==l?Object(i.toTypedArray)(e,l):Object(s.m)(e,[],!0);return r.a.makeTensor(h,d,l)}function d(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((e,a)=>l(e,`${t}[${a}]`,n,r))}},function(e,t,n){"use strict";n.d(t,"a",(function(){return o})),n.d(t,"b",(function(){return s}));var r=n(3),a=n(15);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o="__op";function s(e){const t=Object.keys(e);if(1!==t.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+t.length+" keys.");let n=t[0];const s=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=o;const i=(...e)=>{r.a.startScope(n);try{const t=s(...e);return Object(a.x)(t)&&console.error("Cannot return a Promise inside of tidy."),r.a.endScope(t),t}catch(e){throw r.a.endScope(null),e}};return Object.defineProperty(i,"name",{value:n,configurable:!0}),i}},function(e,t,n){"use strict";n.d(t,"b",(function(){return x})),n.d(t,"a",(function(){return v}));var r=n(43),a=n(9),o=n(34),s=n(4),i=n(28),u=n(6),c=n(15);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class l{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new h)}profileKernel(e,t,n){let r;const o=()=>{r=n()};let s;const i=u.now();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(o);else{o();for(const e of r)e.dataSync();s=Promise.resolve({kernelMs:u.now()-i})}if(Object(a.c)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then(t=>{d(t,n.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:s.then(e=>e.kernelMs),extraInfo:s.then(e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:o}=e;n.forEach(e=>{Promise.all([e.data(),r,o]).then(n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])})})}}function d(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class h{logKernelProfile(e,t,n,r,a,o){const s="number"==typeof r?c.L(r+"ms",9):r.error,i=c.L(e,25),u=t.rank,l=t.size,d=c.L(t.shape.toString(),14);let h="";for(const e in a){const n=a[e];if(null!=n){const r=n.shape||t.shape,a=r.length;h+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${i}\t%c${s}\t%c${u}D ${d}\t%c${l}\t%c${h}\t%c${o}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var p=n(13),f=n(10);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function m(e){return null!=e.kernelName}class b{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class g{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new b}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(e+" backend was already registered. Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new l(this.backendInstance),!0}setupRegisteredKernels(){Object(i.d)(this.backendName).forEach(e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Object(i.d)(e).forEach(t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof r.b||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then(n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0)).catch(n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return console.warn(`Initialization of backend ${e} failed`),console.warn(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(e+" backend not found in registry");this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),o=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,o),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return g.nextTensorId++}nextVariableId(){return g.nextVariableId++}clone(e){const t=v.runKernel(s.qb,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],e=>({x:()=>{const t={x:e},n={dtype:"float32"};return v.runKernel(s.w,t,n)}}),[],{}),t}runKernel(e,t,n){if(!(null!=Object(i.c)(e,this.backendName)))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach(e=>{a+="complex64"===e.dtype?3:1});const o=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],s=r-t-a-o;if(s>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${s} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,o=this.state.numTensors;let s,u;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=m(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(m(e)){const{kernelName:t,inputs:a,attrs:o}=e;null==this.backendName&&this.backend;const l=Object(i.c)(t,this.backendName);c.b(null!=l,()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`),s=()=>{const e=this.backend.numDataIds();u=l.kernelFunc({inputs:a,attrs:o,backend:this.backend});const s=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,s);const i=s.map(e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)});if(r){const e=this.getTensorsForGradient(t,a,i);n=this.saveTensorsForBackwardMode(e)}return i}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map(e=>this.keep(this.clone(e))))};s=()=>{const e=this.backend.numDataIds();u=this.tidy(()=>t(this.backend,a));const n=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:d,attrs:h}=e,p=m(e)?null:e.backwardsFunc;let f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(l,d,()=>s()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs):t=s()}),r&&this.addTapeNode(l,d,t,p,n,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-o,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map(e=>null!=d[e]?d[e].shape:null),outputShapes:t.map(e=>e.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(e=>this.keep(this.clone(e)))}getTensorsForGradient(e,t,n){const r=Object(i.b)(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let o;r.saveAllInputs?(c.b(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),o=Object.keys(t).map(e=>t[e])):o=e.map(e=>t[e]);const s=n.filter((e,t)=>a[t]);return o.concat(s)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&c.z(e[0])&&(a=e.map(e=>u.encodeString(e)));const o=r.write(a,t,n),s=new p.a(t,n,o,this.nextTensorId());if(this.trackTensor(s,r),"string"===n){const e=this.state.tensorInfo.get(o),t=Object(c.f)(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return s}makeTensorFromDataId(e,t,n,r){n=n||"float32";const a=new p.a(t,n,e,this.nextTensorId());return this.trackTensor(a,r),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new p.c(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*c.g(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof p.c||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*c.g(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(e=>e.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,o){const s={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},u=Object(i.b)(e);null!=u&&(r=u.gradFunc),null!=r&&(s.gradient=e=>(e=e.map((e,t)=>{if(null==e){const e=n[t],r=c.F(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e}),r(e.length>1?e:e[0],a,o))),this.state.activeTape.push(s)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Object(f.getTensorsInContainer)(e),n=new Set(t.map(e=>e.id));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(e=>{e.kept||e.scopeId!==r.id||this.track(e)})}gradients(e,t,n,r=!1){if(c.b(t.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));c.b(a instanceof p.a,()=>"The result y returned by f() must be a tensor.");const o=function(e,t,n){const r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const o=e[n],s=o.inputs;for(const e in s){const n=s[e];let i=!1;for(let e=0;e<t.length;e++)if(r[n.id]){o.outputs.forEach(e=>r[e.id]=!0),i=!0,a[o.id]=!0;break}if(i)break}}const o={};o[n.id]=!0;const s={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(o[n.outputs[e].id]){for(const e in r)o[r[e].id]=!0,s[n.id]=!0;break}}const i=[];for(let t=0;t<e.length;t++){const n=e[t];if(a[n.id]&&s[n.id]){const e={};for(const t in n.inputs){const a=n.inputs[t];r[a.id]&&(e[t]=a)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,i.push(t)}}return i}(this.state.activeTape,t,a);if(!r&&0===o.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const e={};e[a.id]=null==n?function(e){const t=Object(c.D)(Object(c.O)(e),"float32");return v.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const o=t[a],s=[];if(o.outputs.forEach(t=>{const n=e[t.id];null!=n?s.push(n):s.push(null)}),null==o.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);const i=o.gradient(s);for(const t in o.inputs){if(!(t in i))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(i)}.`);const a=n(()=>i[t]());if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const s=o.inputs[t];if(!c.a(a.shape,s.shape))throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${s.shape}'`);if(null==e[s.id])e[s.id]=a;else{const t=e[s.id];e[s.id]=r(t,a),t.dispose()}}}}(e,o,e=>this.tidy(e),k);const r=t.map(t=>e[t.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(e=>{for(const t of e.saved)t.dispose()}),this.state.activeTape=null),{value:a,grads:r}})}customGrad(e){return c.b(c.u(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{let n;c.b(t.every(e=>e instanceof p.a),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const r={};t.forEach((e,t)=>{r[t]=e});return this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),c.b(n.value instanceof p.a,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),c.b(c.u(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),backwardsFunc:(e,r)=>{const a=n.gradFunc(e,r),o=Array.isArray(a)?a:[a];c.b(o.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),c.b(o.every(e=>e instanceof p.a),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const s={};return o.forEach((e,t)=>{s[t]=()=>e}),s},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=Object(u.now)(),n=await this.backend.time(e);return n.wallMs=Object(u.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new b;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function x(){const e=Object(o.b)();if(null==e._tfengine){const t=new a.b(e);e._tfengine=new g(t)}return Object(a.d)(e._tfengine.ENV),Object(p.f)(()=>e._tfengine),e._tfengine}g.nextTensorId=0,g.nextVariableId=0;const v=x();function k(e,t){const n={a:e,b:t};return v.runKernel(s.d,n)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return a})),n.d(t,"c",(function(){return o})),n.d(t,"d",(function(){return s})),n.d(t,"e",(function(){return i})),n.d(t,"f",(function(){return u})),n.d(t,"g",(function(){return c})),n.d(t,"h",(function(){return l})),n.d(t,"i",(function(){return d})),n.d(t,"j",(function(){return h})),n.d(t,"k",(function(){return p})),n.d(t,"l",(function(){return f})),n.d(t,"n",(function(){return m})),n.d(t,"m",(function(){return b})),n.d(t,"o",(function(){return g})),n.d(t,"r",(function(){return x})),n.d(t,"p",(function(){return v})),n.d(t,"q",(function(){return k})),n.d(t,"s",(function(){return y})),n.d(t,"t",(function(){return w})),n.d(t,"u",(function(){return I})),n.d(t,"v",(function(){return O})),n.d(t,"w",(function(){return C})),n.d(t,"x",(function(){return T})),n.d(t,"y",(function(){return $})),n.d(t,"z",(function(){return S})),n.d(t,"A",(function(){return E})),n.d(t,"B",(function(){return N})),n.d(t,"C",(function(){return _})),n.d(t,"D",(function(){return A})),n.d(t,"E",(function(){return R})),n.d(t,"F",(function(){return F})),n.d(t,"G",(function(){return j})),n.d(t,"H",(function(){return D})),n.d(t,"I",(function(){return M})),n.d(t,"J",(function(){return P})),n.d(t,"L",(function(){return B})),n.d(t,"K",(function(){return L})),n.d(t,"M",(function(){return W})),n.d(t,"N",(function(){return z})),n.d(t,"O",(function(){return V})),n.d(t,"P",(function(){return U})),n.d(t,"Q",(function(){return G})),n.d(t,"R",(function(){return H})),n.d(t,"S",(function(){return K})),n.d(t,"U",(function(){return q})),n.d(t,"T",(function(){return X})),n.d(t,"kc",(function(){return Y})),n.d(t,"V",(function(){return Q})),n.d(t,"W",(function(){return Z})),n.d(t,"Y",(function(){return J})),n.d(t,"X",(function(){return ee})),n.d(t,"Z",(function(){return te})),n.d(t,"ab",(function(){return ne})),n.d(t,"bb",(function(){return re})),n.d(t,"cb",(function(){return ae})),n.d(t,"db",(function(){return oe})),n.d(t,"eb",(function(){return se})),n.d(t,"fb",(function(){return ie})),n.d(t,"gb",(function(){return ue})),n.d(t,"ib",(function(){return ce})),n.d(t,"mb",(function(){return le})),n.d(t,"lb",(function(){return de})),n.d(t,"nb",(function(){return he})),n.d(t,"ob",(function(){return pe})),n.d(t,"qb",(function(){return fe})),n.d(t,"pb",(function(){return me})),n.d(t,"rb",(function(){return be})),n.d(t,"sb",(function(){return ge})),n.d(t,"tb",(function(){return xe})),n.d(t,"ub",(function(){return ve})),n.d(t,"xb",(function(){return ke})),n.d(t,"yb",(function(){return ye})),n.d(t,"zb",(function(){return we})),n.d(t,"Ab",(function(){return Ie})),n.d(t,"Bb",(function(){return Oe})),n.d(t,"Cb",(function(){return Ce})),n.d(t,"Eb",(function(){return Te})),n.d(t,"Fb",(function(){return $e})),n.d(t,"Gb",(function(){return Se})),n.d(t,"Db",(function(){return Ee})),n.d(t,"vb",(function(){return Ne})),n.d(t,"wb",(function(){return _e})),n.d(t,"Hb",(function(){return Ae})),n.d(t,"Nb",(function(){return Re})),n.d(t,"Ib",(function(){return Fe})),n.d(t,"Lb",(function(){return je})),n.d(t,"Jb",(function(){return De})),n.d(t,"Kb",(function(){return Me})),n.d(t,"Mb",(function(){return Pe})),n.d(t,"Ob",(function(){return Be})),n.d(t,"Pb",(function(){return Le})),n.d(t,"Qb",(function(){return We})),n.d(t,"Rb",(function(){return ze})),n.d(t,"Sb",(function(){return Ve})),n.d(t,"Tb",(function(){return Ue})),n.d(t,"Ub",(function(){return Ge})),n.d(t,"Vb",(function(){return He})),n.d(t,"Zb",(function(){return Ke})),n.d(t,"Wb",(function(){return qe})),n.d(t,"Xb",(function(){return Xe})),n.d(t,"Yb",(function(){return Ye})),n.d(t,"bc",(function(){return Qe})),n.d(t,"ac",(function(){return Ze})),n.d(t,"cc",(function(){return Je})),n.d(t,"dc",(function(){return et})),n.d(t,"ec",(function(){return tt})),n.d(t,"fc",(function(){return nt})),n.d(t,"gc",(function(){return rt})),n.d(t,"hc",(function(){return at})),n.d(t,"ic",(function(){return ot})),n.d(t,"jc",(function(){return st})),n.d(t,"lc",(function(){return it})),n.d(t,"mc",(function(){return ut})),n.d(t,"oc",(function(){return ct})),n.d(t,"rc",(function(){return lt})),n.d(t,"sc",(function(){return dt})),n.d(t,"pc",(function(){return ht})),n.d(t,"qc",(function(){return pt})),n.d(t,"nc",(function(){return ft})),n.d(t,"tc",(function(){return mt})),n.d(t,"vc",(function(){return bt})),n.d(t,"wc",(function(){return gt})),n.d(t,"xc",(function(){return xt})),n.d(t,"yc",(function(){return vt})),n.d(t,"zc",(function(){return kt})),n.d(t,"Ec",(function(){return yt})),n.d(t,"Cc",(function(){return wt})),n.d(t,"Dc",(function(){return It})),n.d(t,"Bc",(function(){return Ot})),n.d(t,"Ac",(function(){return Ct})),n.d(t,"Gc",(function(){return Tt})),n.d(t,"Kc",(function(){return $t})),n.d(t,"Qc",(function(){return St})),n.d(t,"Hc",(function(){return Et})),n.d(t,"Jc",(function(){return Nt})),n.d(t,"Fc",(function(){return _t})),n.d(t,"Mc",(function(){return At})),n.d(t,"Lc",(function(){return Rt})),n.d(t,"Pc",(function(){return Ft})),n.d(t,"Ic",(function(){return jt})),n.d(t,"Oc",(function(){return Dt})),n.d(t,"Rc",(function(){return Mt})),n.d(t,"Sc",(function(){return Pt})),n.d(t,"Tc",(function(){return Bt})),n.d(t,"Uc",(function(){return Lt})),n.d(t,"Vc",(function(){return Wt})),n.d(t,"Wc",(function(){return zt})),n.d(t,"Xc",(function(){return Vt})),n.d(t,"Yc",(function(){return Ut})),n.d(t,"Zc",(function(){return Gt})),n.d(t,"ad",(function(){return Ht})),n.d(t,"Nc",(function(){return Kt})),n.d(t,"hb",(function(){return qt})),n.d(t,"uc",(function(){return Xt})),n.d(t,"bd",(function(){return Yt})),n.d(t,"jb",(function(){return Qt})),n.d(t,"kb",(function(){return Zt}));const r="Abs",a="Acos",o="Acosh",s="Add",i="AddN",u="All",c="Any",l="ArgMax",d="ArgMin",h="Asin",p="Asinh",f="Atan",m="Atanh",b="Atan2",g="AvgPool",x="AvgPoolGrad",v="AvgPool3D",k="AvgPool3DGrad",y="BatchMatMul",w="BatchToSpaceND",I="Bincount",O="BroadcastTo",C="Cast",T="Ceil",$="ClipByValue",S="Complex",E="ComplexAbs",N="Concat",_="Conv2D",A="Conv2DBackpropFilter",R="Conv2DBackpropInput",F="Conv3D",j="Conv3DBackpropFilterV2",D="Conv3DBackpropInputV2",M="Cos",P="Cosh",B="Cumsum",L="CropAndResize",W="DenseBincount",z="DepthToSpace",V="DepthwiseConv2dNative",U="DepthwiseConv2dNativeBackpropFilter",G="DepthwiseConv2dNativeBackpropInput",H="Diag",K="Dilation2D",q="Dilation2DBackpropInput",X="Dilation2DBackpropFilter",Y="RealDiv",Q="Elu",Z="EluGrad",J="Erf",ee="Equal",te="Exp",ne="ExpandDims",re="Expm1",ae="FFT",oe="Fill",se="FlipLeftRight",ie="Floor",ue="FloorDiv",ce="FusedBatchNorm",le="GatherV2",de="GatherNd",he="Greater",pe="GreaterEqual",fe="Identity",me="IFFT",be="Imag",ge="IsFinite",xe="IsInf",ve="IsNan",ke="LeakyRelu",ye="Less",we="LessEqual",Ie="LinSpace",Oe="Log",Ce="Log1p",Te="LogicalAnd",$e="LogicalNot",Se="LogicalOr",Ee="LogSoftmax",Ne="LRN",_e="LRNGrad",Ae="Max",Re="Maximum",Fe="MaxPool",je="MaxPoolGrad",De="MaxPool3D",Me="MaxPool3DGrad",Pe="MaxPoolWithArgmax",Be="Mean",Le="Min",We="Minimum",ze="MirrorPad",Ve="Mod",Ue="Multinomial",Ge="Multiply",He="Neg",Ke="NotEqual",qe="NonMaxSuppressionV3",Xe="NonMaxSuppressionV4",Ye="NonMaxSuppressionV5",Qe="OnesLike",Ze="OneHot",Je="Pack",et="PadV2",tt="Pool",nt="Pow",rt="Prelu",at="Prod",ot="Range",st="Real",it="Reciprocal",ut="Relu",ct="Reshape",lt="ResizeNearestNeighbor",dt="ResizeNearestNeighborGrad",ht="ResizeBilinear",pt="ResizeBilinearGrad",ft="Relu6",mt="Reverse",bt="Round",gt="Rsqrt",xt="ScatterNd",vt="Select",kt="Selu",yt="Slice",wt="Sin",It="Sinh",Ot="Sign",Ct="Sigmoid",Tt="Softplus",$t="Sqrt",St="Sum",Et="SpaceToBatchND",Nt="SplitV",_t="Softmax",At="SquaredDifference",Rt="Square",Ft="Sub",jt="SparseToDense",Dt="StridedSlice",Mt="Tan",Pt="Tanh",Bt="Tile",Lt="TopK",Wt="Transform",zt="Transpose",Vt="Unique",Ut="Unpack",Gt="UnsortedSegmentSum",Ht="ZerosLike",Kt="Step",qt="FromPixels",Xt="RotateWithOffset",Yt="_FusedMatMul",Qt="FusedConv2D",Zt="FusedDepthwiseConv2D"},function(e,t,n){"use strict";n.d(t,"a",(function(){return o})),n.d(t,"f",(function(){return s})),n.d(t,"h",(function(){return i})),n.d(t,"i",(function(){return u})),n.d(t,"e",(function(){return c})),n.d(t,"b",(function(){return l})),n.d(t,"c",(function(){return d})),n.d(t,"l",(function(){return h})),n.d(t,"g",(function(){return p})),n.d(t,"n",(function(){return f})),n.d(t,"o",(function(){return m})),n.d(t,"d",(function(){return b})),n.d(t,"j",(function(){return g})),n.d(t,"k",(function(){return x})),n.d(t,"m",(function(){return v}));var r=n(0),a=n(14);function o(e,t){if(!e)throw new Error(t)}function s(e){return"boolean"==typeof e}function i(e){return"number"==typeof e&&Number.isInteger(e)}function u(e){return e instanceof Array&&e.every(e=>i(e))}function c(e){if("float32"===e)return Float32Array;if("int32"===e)return Int32Array;if("uint32"===e)return Uint32Array;if("float16"===e)return Uint16Array;if("int8"===e)return Int8Array;if("uint8"===e)return Uint8Array;throw new Error("Type is not supported.")}function l(e){let t;if(e instanceof Float32Array)t=new Float32Array(e.length);else if(e instanceof Int32Array)t=new Int32Array(e.length);else if(e instanceof Uint32Array)t=new Uint32Array(e.length);else if(e instanceof Uint16Array)t=new Uint16Array(e.length);else if(e instanceof Int8Array)t=new Int8Array(e.length);else{if(!(e instanceof Uint8Array))throw new Error("Type is not supported.");t=new Uint8Array(e.length)}return t.set(e),t}function d(e){let t;return"float32"===e.dtype?t=a.d.float32:"int32"===e.dtype&&(t=a.d.int32),{type:t,dimensions:e.shape}}function h(e){o(e.type in a.d,"The operand type is invalid."),e.dimensions&&o(u(e.dimensions),"The dimensions is invalid.")}function p(e){return!e.every(e=>e>0)}function f(e,t,n){var r;o((r=e)instanceof Float32Array||r instanceof Int32Array||r instanceof Uint32Array||r instanceof Int16Array||r instanceof Uint16Array||r instanceof Int8Array||r instanceof Uint8Array,"The value is not a typed array."),o(e instanceof c(t),"The type of value is invalid."),o(e.length===g(n),`the value length ${e.length} is invalid, size of [${n}] ${g(n)} is expected.`)}function m(e,t){t===a.d.int32?o(Number.isInteger(e),"the value is not an int32."):t===a.d.uint32?o(Number.isInteger(e)&&e>=0,"the value is not an uint32."):t===a.d.int8?o(Number.isInteger(e)&&e>=-128&&e<=127,"the value is not an int8."):t===a.d.uint8&&o(Number.isInteger(e)&&e>=0&&e<=255,"the value is not an uint8.")}function b(e,t){const n=function(e){if("float32"===e)return"float32";if("int32"===e)return"int32";throw new Error("The operand type is not supported by TF.js.")}(e.type);return void 0!==e.dimensions?(f(t,e.type,e.dimensions),r.tensor(t,e.dimensions,n)):"number"==typeof t?(m(t,e.type),r.scalar(t,n)):(f(t,e.type,e.dimensions),r.scalar(t[0],n))}function g(e){return void 0===e||u(e)&&0===e.length?1:e.reduce((e,t)=>t>0?e*t:e,1)}function x(e,t=""){o(e instanceof a.c,`The parameter ${t} is not an operand.`)}function v(e,t=""){o(void 0===e||e instanceof a.c,`The parameter ${t} is not an optional operand.`)}},function(e,t,n){"use strict";n.r(t),n.d(t,"createScalarValue",(function(){return o})),n.d(t,"toTypedArray",(function(){return s})),n.d(t,"now",(function(){return i})),n.d(t,"fetch",(function(){return u})),n.d(t,"encodeString",(function(){return c})),n.d(t,"decodeString",(function(){return l}));var r=n(9),a=n(15);
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(e,t){return"string"===t?c(e):s([e],t)}function s(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=a.m(e)),Object(r.c)().getBool("DEBUG")&&a.h(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error("Unknown data type "+t)}function i(){return Object(r.c)().platform.now()}function u(e,t){return Object(r.c)().platform.fetch(e,t)}function c(e,t="utf-8"){return t=t||"utf-8",Object(r.c)().platform.encode(e,t)}function l(e,t="utf-8"){return t=t||"utf-8",Object(r.c)().platform.decode(e,t)}n.d(t,"shuffle",(function(){return a.M})),n.d(t,"shuffleCombo",(function(){return a.N})),n.d(t,"clamp",(function(){return a.i})),n.d(t,"nearestLargerEven",(function(){return a.H})),n.d(t,"sum",(function(){return a.R})),n.d(t,"randUniform",(function(){return a.J})),n.d(t,"distSquared",(function(){return a.l})),n.d(t,"assert",(function(){return a.b})),n.d(t,"assertShapesMatch",(function(){return a.e})),n.d(t,"assertNonNull",(function(){return a.d})),n.d(t,"flatten",(function(){return a.m})),n.d(t,"sizeFromShape",(function(){return a.O})),n.d(t,"isScalarShape",(function(){return a.y})),n.d(t,"arraysEqual",(function(){return a.a})),n.d(t,"isInt",(function(){return a.v})),n.d(t,"tanh",(function(){return a.S})),n.d(t,"sizeToSquarishShape",(function(){return a.P})),n.d(t,"createShuffledIndices",(function(){return a.k})),n.d(t,"rightPad",(function(){return a.L})),n.d(t,"repeatedTry",(function(){return a.K})),n.d(t,"inferFromImplicitShape",(function(){return a.s})),n.d(t,"parseAxisParam",(function(){return a.I})),n.d(t,"squeezeShape",(function(){return a.Q})),n.d(t,"getTypedArrayFromDType",(function(){return a.o})),n.d(t,"getArrayFromDType",(function(){return a.n})),n.d(t,"checkConversionForErrors",(function(){return a.h})),n.d(t,"isValidDtype",(function(){return a.B})),n.d(t,"hasEncodingLoss",(function(){return a.p})),n.d(t,"isTypedArray",(function(){return a.A})),n.d(t,"bytesPerElement",(function(){return a.g})),n.d(t,"bytesFromStringArray",(function(){return a.f})),n.d(t,"isString",(function(){return a.z})),n.d(t,"isBoolean",(function(){return a.t})),n.d(t,"isNumber",(function(){return a.w})),n.d(t,"inferDtype",(function(){return a.r})),n.d(t,"isFunction",(function(){return a.u})),n.d(t,"nearestDivisor",(function(){return a.G})),n.d(t,"computeStrides",(function(){return a.j})),n.d(t,"toNestedArray",(function(){return a.T})),n.d(t,"makeOnesTypedArray",(function(){return a.D})),n.d(t,"makeZerosTypedArray",(function(){return a.F})),n.d(t,"makeZerosNestedTypedArray",(function(){return a.E})),n.d(t,"assertNonNegativeIntegerDimensions",(function(){return a.c})),n.d(t,"locToIndex",(function(){return a.C})),n.d(t,"indexToLoc",(function(){return a.q})),n.d(t,"isPromise",(function(){return a.x}))},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&r.util.assert("complex64"!==e.dtype,()=>t+" does not support complex64 tensors in the CPU backend.")})}},function(e,t,n){"use strict";n.d(t,"a",(function(){return o})),n.d(t,"b",(function(){return s}));var r=n(0),a=n(7);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(e,t,n){return({inputs:o,attrs:s,backend:i})=>{const{x:u}=o;if(Object(a.a)(u,e),"string"===u.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const c=i,l=c.data.get(u.dataId).values,d=r.util.sizeFromShape(u.shape),h=n||u.dtype,p=r.util.getArrayFromDType(h,d);for(let e=0;e<d;++e)p[e]=t(l[e],s);return c.makeTensorInfo(u.shape,h,p)}}function s(e,t,n){return({inputs:r,attrs:o,backend:s})=>{const{x:i}=r;if(Object(a.a)(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const u=s,c=u.data.get(i.dataId).values,l=n||i.dtype,d=t(c,l,o);return u.makeTensorInfo(i.shape,l,d)}}},function(e,t,n){"use strict";n.d(t,"b",(function(){return a})),n.d(t,"c",(function(){return o})),n.d(t,"a",(function(){return s})),n.d(t,"d",(function(){return i}));var r=n(15);
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class a{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Object(r.x)(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=function(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("="))),t}(this.global.location.search);if("tfjsflags"in e){e.tfjsflags.split(",").forEach(e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)})}}}function o(){return s}let s=null;function i(e){s=e}},function(e,t,n){"use strict";n.r(t),n.d(t,"makeTypesMatch",(function(){return s})),n.d(t,"assertTypesMatch",(function(){return i})),n.d(t,"isTensorInList",(function(){return u})),n.d(t,"getTensorsInContainer",(function(){return c}));var r=n(13),a=n(30),o=n(15);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(e,t){if(e.dtype===t.dtype)return[e,t];const n=Object(a.c)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function i(e,t){Object(o.b)(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function u(e,t){return t.some(t=>t.id===e.id)}function c(e){const t=[];return function e(t,n,a){if(null==t)return;if(t instanceof r.a)return void n.push(t);if(o=t,!Array.isArray(o)&&"object"!=typeof o)return;var o;const s=t;for(const t in s){const r=s[t];a.has(r)||(a.add(r),e(r,n,a))}}(e,t,new Set),t}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e){return(t,n,a,o,s)=>{const i=r.backend_util.assertAndGetBroadcastShape(t,n),u=i.length,c=r.util.computeStrides(i),l=r.util.sizeFromShape(i),d=r.util.getTypedArrayFromDType(s,l),h=t.length,p=n.length,f=r.util.computeStrides(t),m=r.util.computeStrides(n),b=r.backend_util.getBroadcastDims(t,i),g=r.backend_util.getBroadcastDims(n,i);if(b.length+g.length===0)for(let t=0;t<d.length;++t)d[t]=e(a[t%a.length],o[t%o.length]);else for(let t=0;t<d.length;++t){const n=r.util.indexToLoc(t,u,c),s=n.slice(-h);b.forEach(e=>s[e]=0);const i=r.util.locToIndex(s,h,f),l=n.slice(-p);g.forEach(e=>l[e]=0);const x=r.util.locToIndex(l,p,m);d[t]=e(a[i],o[x])}return[d,i]}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return i})),n.d(t,"b",(function(){return u}));var r=n(0),a=n(7),o=n(27),s=n(17);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function i(e,t,n,r){return null==n?({inputs:n,backend:o})=>{const{a:s,b:i}=n,u=o;Object(a.a)([s,i],e);const c=u.data.get(s.dataId).values,l=u.data.get(i.dataId).values,d=r||s.dtype,[h,p]=t(s.shape,i.shape,c,l,d);return u.makeTensorInfo(p,d,h)}:({inputs:e,backend:a})=>{const{a:i,b:u}=e,c=a;if("complex64"===i.dtype||"complex64"===u.dtype){const e=Object(o.a)({inputs:{x:i},backend:c,attrs:{dtype:"complex64"}}),t=c.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,l=c.data.get(r.dataId).values,d=c.data.get(a.dataId).values,h=Object(o.a)({inputs:{x:u},backend:c,attrs:{dtype:"complex64"}}),p=c.data.get(h.dataId),f=p.complexTensorInfos.real,m=p.complexTensorInfos.imag,b=c.data.get(f.dataId).values,g=c.data.get(m.dataId).values,[x,v,k]=n(i.shape,u.shape,l,d,b,g),y=c.makeTensorInfo(k,"float32",x),w=c.makeTensorInfo(k,"float32",v),I=Object(s.a)({inputs:{real:y,imag:w},backend:c});return c.disposeIntermediateTensorInfo(e),c.disposeIntermediateTensorInfo(h),c.disposeIntermediateTensorInfo(y),c.disposeIntermediateTensorInfo(w),I}{const e=c.data.get(i.dataId).values,n=c.data.get(u.dataId).values,a=r||i.dtype,[o,s]=t(i.shape,u.shape,e,n,a);return c.makeTensorInfo(s,a,o)}}}function u(e){return(t,n,a,o,s,i)=>{const u=r.backend_util.assertAndGetBroadcastShape(t,n),c=r.util.sizeFromShape(u),l=u.length,d=r.util.computeStrides(u),h=r.util.getTypedArrayFromDType("float32",c),p=r.util.getTypedArrayFromDType("float32",c),f=r.backend_util.getBroadcastDims(t,u),m=r.backend_util.getBroadcastDims(n,u),b=r.backend_util.mergeRealAndImagArrays(a,o),g=r.backend_util.mergeRealAndImagArrays(s,i),x=t.length,v=r.util.computeStrides(t),k=n.length,y=r.util.computeStrides(n);if(f.length+m.length===0)for(let t=0;t<h.length;t++){const n=t%b.length,r=t%g.length,a=e(b[2*n],b[2*n+1],g[2*r],g[2*r+1]);h[t]=a.real,p[t]=a.imag}else for(let t=0;t<h.length;t++){const n=r.util.indexToLoc(t,l,d),a=n.slice(-x);f.forEach(e=>a[e]=0);const o=r.util.locToIndex(a,x,v),s=n.slice(-k);m.forEach(e=>s[e]=0);const i=r.util.locToIndex(s,k,y),u=e(b[2*o],b[2*o+1],g[2*i],g[2*i+1]);h[t]=u.real,p[t]=u.imag}return[h,p,u]}}},function(e,t,n){"use strict";n.d(t,"b",(function(){return l})),n.d(t,"f",(function(){return f})),n.d(t,"e",(function(){return m})),n.d(t,"d",(function(){return b})),n.d(t,"a",(function(){return g})),n.d(t,"c",(function(){return x}));var r=n(34),a=n(15);function o(e,t,n,r){const o=Object(a.j)(t),c=function(e,t,n,r){const o=Object(a.O)(t),i=r[r.length-1],c=new Array(i).fill(0),l=t.length,d="complex64"===n?u(e):e;if(l>1)for(let e=0;e<o/i;e++){const t=e*i;for(let e=0;e<i;e++)c[e]=Math.max(c[e],s(d[t+e],0,n).length)}return c}(e,t,n,o),l=t.length,d=function e(t,n,r,a,o,c=!0){const l="complex64"===r?2:1,d=n[0],h=n.length;if(0===h){if("complex64"===r){return[s(u(t)[0],0,r)]}return"bool"===r?[i(t[0])]:[t[0].toString()]}if(1===h){if(d>20){const e=3*l;let n=Array.from(t.slice(0,e)),a=Array.from(t.slice((d-3)*l,d*l));return"complex64"===r&&(n=u(n),a=u(a)),["["+n.map((e,t)=>s(e,o[t],r)).join(", ")+", ..., "+a.map((e,t)=>s(e,o[d-3+t],r)).join(", ")+"]"]}return["["+("complex64"===r?u(t):Array.from(t)).map((e,t)=>s(e,o[t],r)).join(", ")+"]"]}const p=n.slice(1),f=a.slice(1),m=a[0]*l,b=[];if(d>20){for(let n=0;n<3;n++){const a=n*m,s=a+m;b.push(...e(t.slice(a,s),p,r,f,o,!1))}b.push("...");for(let n=d-3;n<d;n++){const a=n*m,s=a+m;b.push(...e(t.slice(a,s),p,r,f,o,n===d-1))}}else for(let n=0;n<d;n++){const a=n*m,s=a+m;b.push(...e(t.slice(a,s),p,r,f,o,n===d-1))}const g=2===h?",":"";b[0]="["+b[0]+g;for(let e=1;e<b.length-1;e++)b[e]=" "+b[e]+g;let x=",\n";for(let e=2;e<h;e++)x+="\n";return b[b.length-1]=" "+b[b.length-1]+"]"+(c?"":x),b}(e,t,n,o,c),h=["Tensor"];return r&&(h.push("  dtype: "+n),h.push("  rank: "+l),h.push(`  shape: [${t}]`),h.push("  values:")),h.push(d.map(e=>"    "+e).join("\n")),h.join("\n")}function s(e,t,n){let r;return r=Array.isArray(e)?parseFloat(e[0].toFixed(7))+" + "+parseFloat(e[1].toFixed(7))+"j":Object(a.z)(e)?`'${e}'`:"bool"===n?i(e):parseFloat(e.toFixed(7)).toString(),Object(a.L)(r,t)}function i(e){return 0===e?"false":"true"}function u(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var c=n(6);
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class l{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=a.O(e),null!=n){const e=n.length;a.b(e===this.size,()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||a.n(t,this.size),this.strides=Object(a.j)(e)}set(e,...t){0===t.length&&(t=[0]),a.b(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=`+this.shape;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return d().makeTensor(this.values,this.shape,this.dtype)}}let d=null,h=null,p=null;function f(e){d=e}function m(e){h=e}function b(e){p=e}class g{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=a.O(e),this.strides=Object(a.j)(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return h.buffer(this.shape,this.dtype,e)}bufferSync(){return h.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Object(a.T)(this.shape,e)}arraySync(){return Object(a.T)(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const e=d().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map(e=>c.decodeString(e))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=d().readSync(this.dataId);if("string"===this.dtype)try{return e.map(e=>c.decodeString(e))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await d().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(d().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return h.print(this,e)}clone(){return this.throwIfDisposed(),h.clone(this)}toString(e=!1){return o(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),h.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),d().makeVariable(this,e,t,n)}}Object.defineProperty(g,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Object(r.a)("Tensor",()=>g);class x extends g{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!a.a(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);d().disposeTensor(this),this.dataId=e.dataId,d().incRef(this,null)}dispose(){d().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(x,Symbol.hasInstance,{value:e=>e instanceof g&&null!=e.assign&&e.assign instanceof Function})},function(e,t,n){"use strict";n.d(t,"d",(function(){return r})),n.d(t,"c",(function(){return o})),n.d(t,"b",(function(){return s})),n.d(t,"a",(function(){return i})),n.d(t,"e",(function(){return u}));var r,a=n(5);!function(e){e.float32="float32",e.float16="float16",e.int32="int32",e.uint32="uint32",e.int8="int8",e.uint8="uint8"}(r||(r={}));class o{constructor(e){this.builder_=e}get builder(){return this.builder_}}class s extends o{constructor(e,t,n){super(n),a.a("string"==typeof e,"The name parameter is invalid"),this.name=e,a.l(t),this.desc=t}}class i extends o{constructor(e,t,n){super(n),this.desc=e,this.value="number"==typeof t?t:a.b(t)}static createScalar(e,t=r.float32,n){return a.a(t in r,"The operand type is invalid."),a.o(e,t),new i({type:t},e,n)}static createTensor(e,t,n){return a.l(e),a.n(t,e.type,e.dimensions),new i(e,t,n)}}class u extends o{constructor(e){super(e.builder),this.operation=e}}},function(e,t,n){"use strict";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function r(e){let t=e.length,n=0,r=0;for(;t>0;)r=Math.random()*t|0,t--,n=e[t],e[t]=e[r],e[r]=n}function a(e,t){if(e.length!==t.length)throw new Error("Array sizes must match to be shuffled together First array length was "+e.length+"Second array length was "+t.length);let n,r,a=e.length,o=0;for(;a>0;)o=Math.random()*a|0,a--,n=e[a],r=t[a],e[a]=e[o],t[a]=t[o],e[o]=n,t[o]=r}function o(e,t,n){return Math.max(e,Math.min(t,n))}function s(e){return e%2==0?e:e+1}function i(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function u(e,t){const n=Math.random();return t*n+(1-n)*e}function c(e,t){let n=0;for(let r=0;r<e.length;r++){const a=Number(e[r])-Number(t[r]);n+=a*a}return n}function l(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function d(e,t,n=""){l(b(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function h(e){l(null!=e,()=>"The input to the tensor constructor must be a non-null value.")}function p(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||_(e)&&!n)for(let r=0;r<e.length;++r)p(e[r],t,n);else t.push(e);return t}function f(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function m(e){return 0===e.length}function b(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function g(e){return e%1==0}function x(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function v(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function k(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return r(t),t}function y(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function w(e,t=(e=>0),n){return new Promise((r,a)=>{let o=0;const s=()=>{if(e())return void r();o++;const i=t(o);null!=n&&o>=n?a():setTimeout(s,i)};s()})}function I(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}function O(e,t){const n=t.length;return l((e=null==e?t.map((e,t)=>t):[].concat(e)).every(e=>e>=-n&&e<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis `+e),l(e.every(e=>g(e)),()=>"All values in axis param must be integers but got axis "+e),e.map(e=>e<0?n+e:e)}function C(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,o=null==t||a?null:O(t,e).sort();let s=0;for(let t=0;t<e.length;++t){if(null!=o){if(o[s]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==o[s]||o[s]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),o[s]<=t&&s++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function T(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error("Unknown data type "+e);n=new Uint8Array(t)}return n}function $(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error("Unknown data type "+e);n=new Array(t)}return n}function S(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function E(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function N(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function _(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function A(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error("Unknown dtype "+e)}function R(e){if(null==e)return 0;let t=0;return e.forEach(e=>t+=e.length),t}function F(e){return"string"==typeof e||e instanceof String}function j(e){return"boolean"==typeof e}function D(e){return"number"==typeof e}function M(e){return Array.isArray(e)?M(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":D(e)?"float32":F(e)?"string":j(e)?"bool":"float32"}function P(e){return!!(e&&e.constructor&&e.call&&e.apply)}function B(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function L(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function W(e,t){if(0===e.length)return t[0];const n=e.reduce((e,t)=>e*t);if(0===n)return[];if(n!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}.`);return function e(t,n,r){const a=new Array;if(1===n.length){const e=n[0];for(let n=0;n<e;n++)a[n]=r[t+n]}else{const o=n[0],s=n.slice(1),i=s.reduce((e,t)=>e*t);for(let n=0;n<o;n++)a[n]=e(t+n*i,s,r)}return a}(0,e,t)}function z(e,t){const n=V(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function V(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error("Unknown data type "+t)}function U(e,t){const n=e.reduce((e,t)=>e*t,1);if(null==t||"float32"===t)return W(e,new Float32Array(n));if("int32"===t)return W(e,new Int32Array(n));if("bool"===t)return W(e,new Uint8Array(n));throw new Error("Unknown data type "+t)}function G(e){e.forEach(t=>{l(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function H(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function K(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function q(e){return e&&e.then&&"function"==typeof e.then}n.d(t,"M",(function(){return r})),n.d(t,"N",(function(){return a})),n.d(t,"i",(function(){return o})),n.d(t,"H",(function(){return s})),n.d(t,"R",(function(){return i})),n.d(t,"J",(function(){return u})),n.d(t,"l",(function(){return c})),n.d(t,"b",(function(){return l})),n.d(t,"e",(function(){return d})),n.d(t,"d",(function(){return h})),n.d(t,"m",(function(){return p})),n.d(t,"O",(function(){return f})),n.d(t,"y",(function(){return m})),n.d(t,"a",(function(){return b})),n.d(t,"v",(function(){return g})),n.d(t,"S",(function(){return x})),n.d(t,"P",(function(){return v})),n.d(t,"k",(function(){return k})),n.d(t,"L",(function(){return y})),n.d(t,"K",(function(){return w})),n.d(t,"s",(function(){return I})),n.d(t,"I",(function(){return O})),n.d(t,"Q",(function(){return C})),n.d(t,"o",(function(){return T})),n.d(t,"n",(function(){return $})),n.d(t,"h",(function(){return S})),n.d(t,"B",(function(){return E})),n.d(t,"p",(function(){return N})),n.d(t,"A",(function(){return _})),n.d(t,"g",(function(){return A})),n.d(t,"f",(function(){return R})),n.d(t,"z",(function(){return F})),n.d(t,"t",(function(){return j})),n.d(t,"w",(function(){return D})),n.d(t,"r",(function(){return M})),n.d(t,"u",(function(){return P})),n.d(t,"G",(function(){return B})),n.d(t,"j",(function(){return L})),n.d(t,"T",(function(){return W})),n.d(t,"D",(function(){return z})),n.d(t,"F",(function(){return V})),n.d(t,"E",(function(){return U})),n.d(t,"c",(function(){return G})),n.d(t,"C",(function(){return H})),n.d(t,"q",(function(){return K})),n.d(t,"x",(function(){return q}))},function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return i}));var r=n(0),a=n(7),o=n(38);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(e){const{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{perm:i}=n;Object(a.a)(s,"transpose");const u=s.shape.length,c=new Array(u);for(let e=0;e<c.length;e++)c[e]=s.shape[i[e]];const l=r.data.get(s.dataId).values,d=Object(o.a)(l,s.shape,s.dtype,i,c);return{dataId:r.write(d,c,s.dtype),shape:c,dtype:s.dtype}}const i={kernelName:r.Transpose,backendName:"cpu",kernelFunc:s}},function(e,t,n){"use strict";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function r(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,o=n.data.get(r.dataId).values,s=n.data.get(a.dataId).values,i=n.makeTensorInfo(r.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",o),imag:n.makeTensorInfo(a.shape,"float32",s)},i}n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return a}));const a={kernelName:n(0).Complex,backendName:"cpu",kernelFunc:r}},function(e,t,n){"use strict";(function(e){n.d(t,"f",(function(){return i})),n.d(t,"e",(function(){return u})),n.d(t,"a",(function(){return h})),n.d(t,"b",(function(){return p})),n.d(t,"d",(function(){return f})),n.d(t,"c",(function(){return m})),n.d(t,"g",(function(){return b}));var r=n(22),a=n(33),o=n(15),s=n(44);async function i(e,t){const n=[],r=[],a=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);for(let o=0;o<a.length;++o){const s=a[o],i=Array.isArray(e)?e[o].tensor:e[s];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error(`Unsupported dtype in weight '${s}': ${i.dtype}`);const u={name:s,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const e=new Promise(async e=>{const t=await i.bytes(),n=t.reduce((e,t)=>e+t.length,0)+4*t.length,r=new Uint8Array(n);let a=0;for(let e=0;e<t.length;e++){const n=t[e],o=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(o,a),a+=4,r.set(n,a),a+=n.length}e(r)});r.push(e)}else r.push(i.data());null!=t&&(u.group=t),n.push(u)}return{data:c(await Promise.all(r)),specs:n}}function u(e,t){const n={};let i,u=0;for(const c of t){const t=c.name,l=c.dtype,d=c.shape,h=Object(o.O)(d);let p;if("quantization"in c){const n=c.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${c.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${c.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==l)throw new Error(`Weight ${c.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${l}.`)}const r=s.a[n.dtype],a=e.slice(u,u+h*r),o="uint8"===n.dtype?new Uint8Array(a):new Uint16Array(a);if("float32"===l)if("uint8"===n.dtype||"uint16"===n.dtype){p=new Float32Array(o.length);for(let e=0;e<o.length;e++){const t=o[e];p[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===i&&(i=g()),p=i(o)}else{if("int32"!==l)throw new Error(`Unsupported dtype in weight '${t}': ${l}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);p=new Int32Array(o.length);for(let e=0;e<o.length;e++){const t=o[e];p[e]=Math.round(t*n.scale+n.min)}}u+=h*r}else if("string"===l){const t=Object(o.O)(c.shape);p=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(u,u+4))[0];u+=4;const n=new Uint8Array(e.slice(u,u+t));p.push(n),u+=t}}else{const o=s.a[l],i=e.slice(u,u+h*o);if("float32"===l)p=new Float32Array(i);else if("int32"===l)p=new Int32Array(i);else if("bool"===l)p=new Uint8Array(i);else{if("complex64"!==l)throw new Error(`Unsupported dtype in weight '${t}': ${l}`);{p=new Float32Array(i);const e=new Float32Array(p.length/2),o=new Float32Array(p.length/2);for(let t=0;t<e.length;t++)e[t]=p[2*t],o[t]=p[2*t+1];const s=Object(a.a)(e,d,"float32"),u=Object(a.a)(o,d,"float32");n[t]=Object(r.a)(s,u),s.dispose(),u.dispose()}}u+=h*o}"complex64"!==l&&(n[t]=Object(a.a)(p,d,l))}return n}function c(e){if(null===e)throw new Error("Invalid input value: "+JSON.stringify(e));let t=0;const n=[];e.forEach(e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: "+e.constructor.name)});const r=new Uint8Array(t);let a=0;return n.forEach(e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength}),r.buffer}const l=void 0!==e&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function d(t){return l?e.byteLength(t):new Blob([t]).size}function h(t){if(l)return e.from(t).toString("base64");const n=new Uint8Array(t);let r="";for(let e=0,t=n.length;e<t;e++)r+=String.fromCharCode(n[e]);return btoa(r)}function p(t){if(l){const n=e.from(t,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}const n=atob(t),r=new Uint8Array(n.length);for(let e=0;e<n.length;++e)r.set([n.charCodeAt(e)],e);return r.buffer}function f(e){if(1===e.length)return e[0];let t=0;e.forEach(e=>{t+=e.byteLength});const n=new Uint8Array(t);let r=0;return e.forEach(e=>{n.set(new Uint8Array(e),r),r+=e.byteLength}),n.buffer}function m(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function b(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:d(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:d(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function g(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const a=new ArrayBuffer(4*r.length),o=new Uint32Array(a);for(let a=0;a<r.length;a++){const s=r[a],i=e[n[s>>10]+(1023&s)]+t[s>>10];o[a]=i}return new Float32Array(a)}}}).call(this,n(83).Buffer)},function(e,t,n){"use strict";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function r(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return a}));const a={kernelName:n(0).Identity,backendName:"cpu",kernelFunc:r}},function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n(3),a=n(15),o=n(6);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(e,t,n,s){if(null==s&&(s=Object(a.r)(e)),"complex64"===s)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Object(a.A)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Object(a.c)(t);const e=Object(a.O)(t),r=Object(a.O)(n);Object(a.b)(e===r,()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`);for(let e=0;e<n.length;++e){const r=n[e],o=e!==n.length-1||r!==Object(a.O)(t.slice(e));Object(a.b)(n[e]===t[e]||!o,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return Object(a.A)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==s?Object(o.toTypedArray)(e,s):Object(a.m)(e,[],!0),r.a.makeTensor(e,t,s)}},function(e,t,n){"use strict";n.d(t,"c",(function(){return o})),n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return i}));var r=n(0),a=n(7);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(e,t,n,a,o){const s=r.slice_util.isSliceContinous(a,t,n),i=r.util.sizeFromShape(n),u=r.util.computeStrides(a);if(s){const n=r.slice_util.computeFlatOffset(t,u);return"string"===o?e.slice(n,n+i):e.subarray(n,n+i)}const c="string"===o?r.backend_util.fromUint8ToStringArray(e):e,l=Object(r.buffer)(a,o,c),d=Object(r.buffer)(n,o);for(let e=0;e<d.size;++e){const n=d.indexToLoc(e),r=n.map((e,n)=>e+t[n]);d.set(l.get(...r),...n)}return"string"===o?r.backend_util.fromStringArrayToUint8(d.values):d.values}function s(e){const{inputs:t,backend:n,attrs:s}=e,{x:i}=t,{begin:u,size:c}=s;Object(a.a)(i,"slice");const[l,d]=r.slice_util.parseSliceParams(i,u,c);r.slice_util.assertParamsValid(i,l,d);const h=o(n.data.get(i.dataId).values,l,d,i.shape,i.dtype);return n.makeTensorInfo(d,i.dtype,h)}const i={kernelName:r.Slice,backendName:"cpu",kernelFunc:s}},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(3),a=n(4),o=n(1),s=n(15),i=n(2);const u=Object(i.b)({complex_:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t){const n=Object(o.a)(e,"real","complex"),i=Object(o.a)(t,"imag","complex");s.e(n.shape,i.shape,`real and imag shapes, ${n.shape} and ${i.shape}, must match in call to tf.complex().`);const u={real:n,imag:i};return r.a.runKernel(a.z,u)}})},function(e,t,n){"use strict";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function r(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,o=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,o)}n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return a}));const a={kernelName:n(0).Real,backendName:"cpu",kernelFunc:r}},function(e,t){e.exports=function(){throw new Error("define cannot be used indirect")}},function(e,t,n){"use strict";n.d(t,"c",(function(){return s})),n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return c}));var r=n(0),a=n(11),o=n(12);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const s=Object(a.a)((e,t)=>e+t),i=Object(o.b)((e,t,n,r)=>({real:e+n,imag:t+r})),u=Object(o.a)(r.Add,s,i),c={kernelName:r.Add,backendName:"cpu",kernelFunc:u}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e){return(t,n,a)=>{const o=r.util.getTypedArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)o[n]=e(t[n],a);return o}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return c})),n.d(t,"b",(function(){return l}));var r=n(0),a=n(11),o=n(72),s=n(17),i=n(19),u=n(23);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c(e){const{inputs:t,backend:n,attrs:l}=e,{x:d}=t,{dtype:h}=l;if("complex64"===h){if("complex64"===d.dtype)return Object(i.a)({inputs:{x:d},backend:n});const e=Object(o.a)(n,d.shape,d.dtype),t=c({inputs:{x:d},backend:n,attrs:{dtype:"float32"}}),r=Object(s.a)({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===d.dtype){const e=Object(u.a)({inputs:{input:d},backend:n}),t=c({inputs:{x:e},backend:n,attrs:{dtype:h}});return n.disposeIntermediateTensorInfo(e),t}if(!r.util.hasEncodingLoss(d.dtype,h)){const e=Object(i.a)({inputs:{x:d},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:h}}if("int32"===h){const e=n.data.get(d.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(d.shape,"int32",t)}if("bool"===h){const e=n.data.get(d.dataId).values,t=r.util.toTypedArray([0],d.dtype),[o,s]=Object(a.a)((e,t)=>e!==t?1:0)(d.shape,[],e,t,"bool");return n.makeTensorInfo(s,"bool",o)}throw new Error(`Error in Cast: failed to cast ${d.dtype} to ${h}`)}const l={kernelName:r.Cast,backendName:"cpu",kernelFunc:c}},function(e,t,n){"use strict";n.d(t,"c",(function(){return i})),n.d(t,"b",(function(){return u})),n.d(t,"d",(function(){return c})),n.d(t,"f",(function(){return l})),n.d(t,"e",(function(){return d})),n.d(t,"h",(function(){return h})),n.d(t,"g",(function(){return p})),n.d(t,"a",(function(){return f}));var r=n(9),a=n(34);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=Object(a.a)("kernelRegistry",()=>new Map),s=Object(a.a)("gradRegistry",()=>new Map);function i(e,t){const n=m(e,t);return o.get(n)}function u(e){return s.get(e)}function c(e){const t=o.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[o,s]=a,[i]=o.split("_");i===e&&n.push(s)}return n}function l(e){const{kernelName:t,backendName:n}=e,r=m(t,n);o.has(r)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),o.set(r,e)}function d(e){const{kernelName:t}=e;s.has(t)&&Object(r.c)().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),s.set(t,e)}function h(e,t){const n=m(e,t);if(!o.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);o.delete(n)}function p(e){if(!s.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);s.delete(e)}function f(e,t){c(e).forEach(e=>{l(Object.assign({},e,{backendName:t}))})}function m(e,t){return`${t}_${e}`}},function(e,t,n){"use strict";n.d(t,"c",(function(){return s})),n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return c}));var r=n(0),a=n(11),o=n(12);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const s=Object(a.a)((e,t)=>e*t),i=Object(o.b)((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n})),u=Object(o.a)(r.Multiply,s,i),c={kernelName:r.Multiply,backendName:"cpu",kernelFunc:u}},function(e,t,n){"use strict";
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var r,a,o,s,i;n.d(t,"a",(function(){return r})),n.d(t,"c",(function(){return c})),n.d(t,"b",(function(){return l})),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(a||(a={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(o||(o={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(s||(s={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(i||(i={}));const u={float32:s,int32:a,bool:o,complex64:i};function c(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return u[e][t]}function l(e){return c(e,"int32")}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a})),n.d(t,"b",(function(){return o}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a,o){const s=r.util.sizeFromShape(a),i=r.util.makeZerosTypedArray(o,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=o||(i[r]+=s>0?t[n]:1)}return i}function o(e,t,n,a=!1){const o=e.shape[0],s=e.shape[1],i=Object(r.buffer)([o,n],t.dtype);for(let r=0;r<o;r++)for(let o=0;o<s;o++){const s=e.get(r,o);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(a?i.set(1,r,s):t.size>0?i.set(i.get(r,s)+t.get(r,o),r,s):i.set(i.get(r,s)+1,r,s))}return i}},function(e,t,n){"use strict";n.d(t,"c",(function(){return s})),n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return c}));var r=n(0),a=n(11),o=n(12);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const s=Object(a.a)((e,t)=>e-t),i=Object(o.b)((e,t,n,r)=>({real:e-n,imag:t-r})),u=Object(o.a)(r.Sub,s,i),c={kernelName:r.Sub,backendName:"cpu",kernelFunc:u}},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(1),a=n(20);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(e,t,n){const o=Object(r.c)(e,n);return Object(a.a)(e,t,o,n)}},function(e,t,n){"use strict";(function(e,r){
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let a;function o(){if(null==a){let t;if("undefined"!=typeof window)t=window;else if(void 0!==e)t=e;else if(void 0!==r)t=r;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}a=t}return a}function s(e,t){const n=function(){const e=o();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return s}))}).call(this,n(41),n(45))},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t){(function(t){e.exports=t}).call(this,{})},function(e,t,n){"use strict";n.d(t,"c",(function(){return s})),n.d(t,"a",(function(){return i})),n.d(t,"b",(function(){return u}));var r=n(0),a=n(26),o=n(8);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const s=Object(a.a)(e=>Math.exp(e)),i=Object(o.b)(r.Exp,s),u={kernelName:r.Exp,backendName:"cpu",kernelFunc:i}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a,o){const s=t.length,i=r.util.sizeFromShape(t),u=r.util.computeStrides(t),c=r.util.computeStrides(o),l=r.util.getTypedArrayFromDType(n,r.util.sizeFromShape(o));for(let t=0;t<i;++t){const n=r.util.indexToLoc(t,s,u),o=new Array(n.length);for(let e=0;e<o.length;e++)o[e]=n[a[e]];l[r.util.locToIndex(o,s,c)]=e[t]}return l}},function(e,t,n){"use strict";n.d(t,"b",(function(){return r})),n.d(t,"a",(function(){return i}));var r,a=n(73),o=n(14),s=n(5);!function(e){e.default="default",e["high-performance"]="high-performance",e["low-power"]="low-power"}(r||(r={}));class i{constructor(e){this.inputs_=new Map,this.outputs_=new Map,this.constants_=new Set,s.a(void 0!==e,"Invalid argument");for(const t in e)s.a("string"==typeof t&&e[t]instanceof o.e,"The outputs parameter is invalid."),this.outputs_.set(t,e[t]);s.a(0!==this.outputs_.size,"The outputs is empty"),this.initialize()}get inputs(){return this.inputs_}get outputs(){return this.outputs_}get constants(){return Array.from(this.constants_.values())}async compile(e){return await a.a.createAndCompile(e,this)}initialize(){const e=new Set;for(const t of this.outputs_.values())this.handleOperation(t.operation,e)}handleOperation(e,t){if(!t.has(e)){t.add(e);for(const n of e.inputs())if(n instanceof o.b){if(this.inputs_.has(n.name)){if(this.inputs_.get(n.name)!==n)throw new Error("The name of this input is existed.");continue}this.inputs_.set(n.name,n)}else n instanceof o.a?this.constants_.has(n)||this.constants_.add(n):n instanceof o.e&&this.handleOperation(n.operation,t)}}}},function(e,t,n){var r=n(90),a=n(91),o=n(92),s=n(93),i=n(94),u=n(95),c=n(96);c.alea=r,c.xor128=a,c.xorwow=o,c.xorshift7=s,c.xor4096=i,c.tychei=u,e.exports=c},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t,n){"use strict";(function(e){n(3);var t=n(46),r=n(9);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const a=Object(r.c)();a.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),a.registerFlag("IS_BROWSER",()=>t.isBrowser()),a.registerFlag("IS_NODE",()=>void 0!==e&&void 0!==e.versions&&void 0!==e.versions.node),a.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),a.registerFlag("PROD",()=>!1),a.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>a.getBool("DEBUG")),a.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),a.registerFlag("IS_TEST",()=>!1),a.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0),a.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1)}).call(this,n(45))},function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return a}));class r{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class a{refCount(e){return o("refCount")}incRef(e){return o("incRef")}timerAvailable(){return!0}time(e){return o("time")}read(e){return o("read")}readSync(e){return o("readSync")}numDataIds(){return o("numDataIds")}disposeData(e,t){return o("disposeData")}write(e,t,n){return o("write")}move(e,t,n,r,a){return o("move")}memory(){return o("memory")}floatPrecision(){return o("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return o("dispose")}}function o(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},function(e,t){var n,r,a=e.exports={};function o(){throw new Error("setTimeout has not been defined")}function s(){throw new Error("clearTimeout has not been defined")}function i(e){if(n===setTimeout)return setTimeout(e,0);if((n===o||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:o}catch(e){n=o}try{r="function"==typeof clearTimeout?clearTimeout:s}catch(e){r=s}}();var u,c=[],l=!1,d=-1;function h(){l&&u&&(l=!1,u.length?c=u.concat(c):d=-1,c.length&&p())}function p(){if(!l){var e=i(h);l=!0;for(var t=c.length;t;){for(u=c,c=[];++d<t;)u&&u[d].run();d=-1,t=c.length}u=null,l=!1,function(e){if(r===clearTimeout)return clearTimeout(e);if((r===s||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(e);try{r(e)}catch(t){try{return r.call(null,e)}catch(t){return r.call(this,e)}}}(e)}}function f(e,t){this.fun=e,this.array=t}function m(){}a.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];c.push(new f(e,t)),1!==c.length||l||i(p)},f.prototype.run=function(){this.fun.apply(null,this.array)},a.title="browser",a.browser=!0,a.env={},a.argv=[],a.version="",a.versions={},a.on=m,a.addListener=m,a.once=m,a.off=m,a.removeListener=m,a.removeAllListeners=m,a.emit=m,a.prependListener=m,a.prependOnceListener=m,a.listeners=function(e){return[]},a.binding=function(e){throw new Error("process.binding is not supported")},a.cwd=function(){return"/"},a.chdir=function(e){throw new Error("process.chdir is not supported")},a.umask=function(){return 0}},function(e,t,n){"use strict";function r(){if("undefined"!=typeof navigator&&null!=navigator){const e=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function a(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}n.r(t),n.d(t,"isMobile",(function(){return r})),n.d(t,"isBrowser",(function(){return a}))},function(e,t,n){"use strict";n.r(t);var r=n(48);n.d(t,"simpleAbsImpl",(function(){return r.b}));var a=n(25);n.d(t,"addImpl",(function(){return a.c}));var o=n(31);n.d(t,"bincountImpl",(function(){return o.a})),n.d(t,"bincountReduceImpl",(function(){return o.b}));var s=n(49);n.d(t,"ceilImpl",(function(){return s.b}));var i=n(50);n.d(t,"concatImpl",(function(){return i.a}));var u=n(37);n.d(t,"expImpl",(function(){return u.c}));var c=n(51);n.d(t,"expm1Impl",(function(){return c.b}));var l=n(52);n.d(t,"floorImpl",(function(){return l.b}));var d=n(53);n.d(t,"gatherV2Impl",(function(){return d.a}));var h=n(54);n.d(t,"greaterImpl",(function(){return h.b}));var p=n(55);n.d(t,"lessImpl",(function(){return p.b}));var f=n(56);n.d(t,"linSpaceImpl",(function(){return f.a}));var m=n(57);n.d(t,"logImpl",(function(){return m.b}));var b=n(58);n.d(t,"maxImpl",(function(){return b.a}));var g=n(59);n.d(t,"maximumImpl",(function(){return g.b}));var x=n(60);n.d(t,"minimumImpl",(function(){return x.b}));var v=n(29);n.d(t,"multiplyImpl",(function(){return v.c}));var k=n(61);n.d(t,"negImpl",(function(){return k.b}));var y=n(62);n.d(t,"notEqualImpl",(function(){return y.b}));var w=n(63);n.d(t,"prodImpl",(function(){return w.b}));var I=n(64);n.d(t,"rangeImpl",(function(){return I.a}));var O=n(65);n.d(t,"rsqrtImpl",(function(){return O.b}));var C=n(21);n.d(t,"sliceImpl",(function(){return C.c}));var T=n(66);n.d(t,"squaredDifferenceImpl",(function(){return T.b}));var $=n(67);n.d(t,"stridedSliceImpl",(function(){return $.a}));var S=n(32);n.d(t,"subImpl",(function(){return S.c}));var E=n(68);n.d(t,"tileImpl",(function(){return E.a}));var N=n(69);n.d(t,"topKImpl",(function(){return N.a}));var _=n(38);n.d(t,"transposeImpl",(function(){return _.a}));var A=n(70);n.d(t,"uniqueImpl",(function(){return A.a}))},function(e,t,n){"use strict";n.d(t,"b",(function(){return o})),n.d(t,"a",(function(){return s}));var r=n(0),a=n(7);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const s={kernelName:r.Abs,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;Object(a.a)(t,"abs");let s=new Float32Array(r.util.sizeFromShape(t.shape));return s=o(n.data.get(t.dataId).values),n.makeOutput(s,t.shape,"float32")}}},function(e,t,n){"use strict";n.d(t,"b",(function(){return s})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(26),o=n(8);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const s=Object(a.a)(e=>Math.ceil(e)),i=Object(o.b)(r.Ceil,s),u={kernelName:r.Ceil,backendName:"cpu",kernelFunc:i}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a){const o=r.util.getArrayFromDType(n,r.util.sizeFromShape(t));if(a&&"string"!==n){let t=0;e.forEach(e=>{const n=r.util.sizeFromShape(e.shape);o.set(e.vals,t),t+=n})}else{let a=0;e.forEach(e=>{const s="string"===n?r.backend_util.fromUint8ToStringArray(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const r=n*t[1]+a;for(let t=0;t<e.shape[1];++t)o[r+t]=s[i++]}a+=e.shape[1]})}return o}},function(e,t,n){"use strict";n.d(t,"b",(function(){return s})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(26),o=n(8);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const s=Object(a.a)(e=>Math.expm1(e)),i=Object(o.b)(r.Expm1,s),u={kernelName:r.Expm1,backendName:"cpu",kernelFunc:i}},function(e,t,n){"use strict";n.d(t,"b",(function(){return s})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(26),o=n(8);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const s=Object(a.a)(e=>Math.floor(e)),i=Object(o.b)(r.Floor,s),u={kernelName:r.Floor,backendName:"cpu",kernelFunc:i}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n){const a=Object(r.buffer)(n,e.dtype);for(let n=0;n<a.size;++n){const r=a.indexToLoc(n).slice(),o=r[0],s=r[2],i=t.locToIndex([o,s]);r[2]=t.values[i];const u=e.locToIndex(r);a.values[n]=e.values[u]}return a}},function(e,t,n){"use strict";n.d(t,"b",(function(){return s})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(11),o=n(12);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const s=Object(a.a)((e,t)=>e>t?1:0),i=Object(o.a)(r.Greater,s,null,"bool"),u={kernelName:r.Greater,backendName:"cpu",kernelFunc:i}},function(e,t,n){"use strict";n.d(t,"b",(function(){return s})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(11),o=n(12);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const s=Object(a.a)((e,t)=>e<t?1:0),i=Object(o.a)(r.Less,s,null,"bool"),u={kernelName:r.Less,backendName:"cpu",kernelFunc:i}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n){const a=(t-e)/(n-1),o=r.util.makeZerosTypedArray(n,"float32");o[0]=e;for(let e=1;e<o.length;e++)o[e]=o[e-1]+a;return o}},function(e,t,n){"use strict";n.d(t,"b",(function(){return s})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(26),o=n(8);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const s=Object(a.a)(e=>Math.log(e)),i=Object(o.b)(r.Log,s),u={kernelName:r.Log,backendName:"cpu",kernelFunc:i}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a){const o=r.util.getTypedArrayFromDType(a,r.util.sizeFromShape(n));for(let n=0;n<o.length;++n){const r=n*t;let a=e[r];for(let n=0;n<t;++n){const t=e[r+n];t>a&&(a=t)}o[n]=a}return o}},function(e,t,n){"use strict";n.d(t,"b",(function(){return s})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(11),o=n(12);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const s=Object(a.a)((e,t)=>Math.max(e,t)),i=Object(o.a)(r.Maximum,s),u={kernelName:r.Maximum,backendName:"cpu",kernelFunc:i}},function(e,t,n){"use strict";n.d(t,"b",(function(){return s})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(11),o=n(12);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const s=Object(a.a)((e,t)=>Math.min(e,t)),i=Object(o.a)(r.Minimum,s),u={kernelName:r.Minimum,backendName:"cpu",kernelFunc:i}},function(e,t,n){"use strict";n.d(t,"b",(function(){return s})),n.d(t,"a",(function(){return i}));var r=n(0),a=n(7),o=n(29);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(e,t,n){const a=r.util.createScalarValue(-1,n);return Object(o.c)([],t,a,e,n)}const i={kernelName:r.Neg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;Object(a.a)(r,"neg");const o=n.data.get(r.dataId).values,[i,u]=s(o,r.shape,r.dtype);return n.makeTensorInfo(u,r.dtype,i)}}},function(e,t,n){"use strict";n.d(t,"b",(function(){return s})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(11),o=n(12);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const s=Object(a.a)((e,t)=>e!==t?1:0),i=Object(o.a)(r.NotEqual,s,null,"bool"),u={kernelName:r.NotEqual,backendName:"cpu",kernelFunc:i}},function(e,t,n){"use strict";n.d(t,"b",(function(){return s})),n.d(t,"a",(function(){return i}));var r=n(0),a=n(7),o=n(16);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function s(e,t,n,a){const[o,s]=r.backend_util.computeOutAndReduceShapes(e,a),i=Object(r.upcastType)(t,"int32"),u=r.util.makeZerosTypedArray(r.util.sizeFromShape(o),i),c=r.util.sizeFromShape(s);for(let e=0;e<u.length;++e){const t=e*c;let r=1;for(let e=0;e<c;++e)r*=n[t+e];u[e]=r}return{outVals:u,outShape:o,outDtype:i}}const i={kernelName:r.Prod,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:i}=e,{x:u}=t,{axis:c,keepDims:l}=i;Object(a.a)(u,"prod");const d=u.shape.length,h=r.util.parseAxisParam(c,u.shape),p=r.backend_util.getAxesPermutation(h,d);let f=h,m=u;const b=[];null!=p&&(m=Object(o.a)({inputs:{x:u},backend:n,attrs:{perm:p}}),b.push(m),f=r.backend_util.getInnerMostAxes(f.length,d));const g=n.data.get(m.dataId).values,{outVals:x,outShape:v,outDtype:k}=s(m.shape,m.dtype,g,f);let y=v;return l&&(y=r.backend_util.expandShapeToKeepDim(v,h)),b.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(y,k,x)}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a){if(e===t||e<t&&n<0||t<e&&n>1)return r.util.makeZerosTypedArray(0,a);const o=Math.abs(Math.ceil((t-e)/n)),s=r.util.makeZerosTypedArray(o,a);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}},function(e,t,n){"use strict";n.d(t,"b",(function(){return s})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(26),o=n(8);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const s=Object(a.a)(e=>1/Math.sqrt(e)),i=Object(o.b)(r.Rsqrt,s),u={kernelName:r.Rsqrt,backendName:"cpu",kernelFunc:i}},function(e,t,n){"use strict";n.d(t,"b",(function(){return s})),n.d(t,"a",(function(){return u}));var r=n(0),a=n(11),o=n(12);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const s=Object(a.a)((e,t)=>{const n=e-t;return n*n}),i=Object(o.a)(r.SquaredDifference,s),u={kernelName:r.SquaredDifference,backendName:"cpu",kernelFunc:i}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a){const o=Object(r.buffer)(e,t.dtype);for(let e=0;e<o.size;e++){const r=o.indexToLoc(e),s=new Array(r.length);for(let e=0;e<s.length;e++)s[e]=r[e]*n[e]+a[e];o.set(t.get(...s),...r)}return o}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const a=Object(r.buffer)(n,e.dtype);for(let t=0;t<a.values.length;++t){const n=a.indexToLoc(t),r=new Array(e.rank);for(let t=0;t<r.length;t++)r[t]=n[t]%e.shape[t];const o=e.locToIndex(r);a.values[t]=e.values[o]}return a}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a,o){const s=t[t.length-1],[i,u]=[e.length/s,s],c=r.util.getTypedArrayFromDType(n,i*a),l=r.util.getTypedArrayFromDType("int32",i*a);for(let t=0;t<i;t++){const n=t*u,r=e.subarray(n,n+u),o=[];for(let e=0;e<r.length;e++)o.push({value:r[e],index:e});o.sort((e,t)=>t.value-e.value);const s=t*a,i=c.subarray(s,s+a),d=l.subarray(s,s+a);for(let e=0;e<a;e++)i[e]=o[e].value,d[e]=o[e].index}const d=t.slice();return d[d.length-1]=a,[Object(r.buffer)(d,n,c),Object(r.buffer)(d,"int32",l)]}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(0);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(e,t,n,a){const o=r.util.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let e=0;e<o;e++)s[0]*=n[e];s[1]=n[o];for(let e=o+1;e<n.length;e++)s[2]*=n[e];const i={},u=new Int32Array(n[o]),c=new r.TensorBuffer(s,a,e),l=[],d=1===s[0]&&1===s[2];for(let t=0;t<n[o];t++){let n;if(d)n=e[t].toString();else{const e=[];for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)e.push(c.get(n,t,r));n=e.join(",")}if(void 0!==i[n])u[t]=i[n];else{const e=Object.keys(i).length;i[n]=e,u[t]=e,l.push(t)}}const h=s.slice();h[1]=Object.keys(i).length;const p=new r.TensorBuffer(h,a);l.forEach((e,t)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)p.set(c.get(n,e,r),n,t,r)});const f=n.slice();return f[o]=h[1],{outputValues:p.values,outputShape:f,indices:u}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));n(77),n(78);var r=n(0),a=n(74);class o{constructor(){}createModelBuilder(){return new a.e}get tf(){return r}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(0),a=n(17);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function o(e,t,n="float32"){if("complex64"===n){const n=o(e,t,"float32"),r=o(e,t,"float32");return Object(a.a)({inputs:{real:n,imag:r},backend:e})}const s=r.util.makeZerosTypedArray(r.util.sizeFromShape(t),n);return e.makeTensorInfo(t,n,s)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));n(77),n(78);var r=n(0),a=n(39),o=n(14),s=n(5);class i{constructor(e,t,n){this.constantTenosrs_=e,this.allocateInputTensors(t,n),this.outputTensors_=new Map}allocateInputTensors(e,t){this.inputTensors_=new Map;for(const n in t){const r=t[n],a=e.get(n);let o;o=void 0!==r.dimensions?{type:a.desc.type,dimensions:r.dimensions}:a.desc,this.inputTensors_.set(a,s.d(o,r.buffer))}}compute(e){const t={};for(const n of e.keys())t[n]=this.getTensor(e.get(n));return t}setOutputTensor(e,t){s.a(!this.outputTensors_.has(e),"Output already has tensor."),this.outputTensors_.set(e,t)}getTensor(e){if(e instanceof o.a)return this.constantTenosrs_.get(e);if(e instanceof o.b)return this.inputTensors_.get(e);if(e instanceof o.e)return this.outputTensors_.has(e)||(e.operation.compute(this),s.a(this.outputTensors_.has(e),"No output is set.")),this.outputTensors_.get(e);throw new Error("The operand is invalid.")}}class u{constructor(e={}){this.inputOperands_=new Map,this.outputOperands_=new Map,this.constantTensors_=new Map,this.validateOptions(e)}async compute(e,t={}){let n;if(this.validateInputs(e),0!==Object.keys(t).length){n=new Map;for(const e in t)s.a("string"==typeof e&&this.outputOperands_.has(e),"The name of the output is invalid."),n.set(e,this.outputOperands_.get(e))}else n=this.outputOperands_;const a=r.tidy(()=>new i(this.constantTensors_,this.inputOperands_,e).compute(n)),o={};for(const e of Object.keys(a)){const n=a[e],i=s.c(n),u=await n.data();if(r.dispose(n),o[e]={buffer:u,dimensions:i.dimensions},void 0!==t&&e in t&&void 0!==t[e].buffer){const n=t[e].buffer;s.n(n,i.type,i.dimensions),t[e].buffer.set(u)}}return o}static async createAndCompile(e,t){const n=new u(e);return await n.compile(t),n}validateOptions(e){s.a(e instanceof Object,"Invalid options."),void 0!==e.powerPreference&&s.a(e.powerPreference in a.b,"Invalid power preference.")}validateInputs(e){for(const t in e){s.a("string"==typeof t&&this.inputOperands_.has(t),"The name of the input is invalid.");const n=e[t],r=this.inputOperands_.get(t);let a;if(s.a(void 0!==n.buffer,"The buffer of the input is undefined."),void 0!==n.dimensions){a=n.dimensions,s.a(!0===s.i(a),"The type of the input dimensions is invalid."),s.a(a.length===r.desc.dimensions.length,"The rank of the input dimensions is invalid."),s.a(!s.g(a),"The value of input dimensions is negative.");for(let e=0;e<r.desc.dimensions.length;++e){const t=r.desc.dimensions[e];t>0&&s.a(t===a[e],"The value of the input dimensions is invalid.")}}else s.a(!s.g(r.desc.dimensions),"The input dimensions is not specified."),a=r.desc.dimensions;s.n(n.buffer,r.desc.type,a)}}async compile(e){await r.ready(),this.allocateConstants(e),this.inputOperands_=e.inputs,this.outputOperands_=e.outputs,await this.inferOnce()}allocateConstants(e){for(const t of e.constants)this.constantTensors_.set(t,s.d(t.desc,t.value))}async inferOnce(){const e={};for(const t of this.inputOperands_.keys()){const n=this.inputOperands_.get(t),r=n.desc.dimensions.map(e=>e<0?1:e),a=new(s.e(n.desc.type))(s.j(n.desc.dimensions));e[t]={buffer:a,dimensions:r}}await this.compute(e)}dispose(){for(const e of this.constantTensors_.values())r.dispose(e)}}},function(e,t,n){"use strict";n.d(t,"c",(function(){return u})),n.d(t,"b",(function(){return c})),n.d(t,"a",(function(){return l})),n.d(t,"i",(function(){return d})),n.d(t,"g",(function(){return h})),n.d(t,"h",(function(){return p})),n.d(t,"f",(function(){return f})),n.d(t,"d",(function(){return m})),n.d(t,"e",(function(){return re}));var r=n(39),a=n(14),o=n(0);class s{constructor(e){this.outputs_=[],this.builder_=e}get builder(){return this.builder_}get outputs(){return this.outputs_}}class i extends s{constructor(e){super(e),this.outputs_.push(new a.e(this))}get output(){return this.outputs_[0]}compute(e){e.setOutputTensor(this.output,this.run(e))}}var u,c,l,d,h,p,f,m,b=n(5);class g extends i{constructor(e,t,n,r={}){if(super(e.builder),b.k(e),this.input_=e,b.k(t),this.mean_=t,b.k(n),this.variance_=n,b.m(r.scale),this.scale_=r.scale,b.m(r.bias),this.bias_=r.bias,void 0!==r.axis){const e=r.axis;b.a(b.h(e),"The axis parameter is invalid."),this.axis_=e}else this.axis_=1;if(void 0!==r.epsilon){const e=r.epsilon;b.a("number"==typeof e,"The epsilon parameter is invalid"),this.epsilon_=e}else this.epsilon_=1e-5}inputs(){const e=[this.input_,this.mean_,this.variance_];return this.scale_&&e.push(this.scale_),this.bias_&&e.push(this.bias_),e}run(e){const t=e.getTensor(this.input_);b.a(this.axis_<t.rank&&this.axis_>=-t.rank,"The axis parameter is invalid.");const n=this.axis_>=0?this.axis_:t.rank+this.axis_,r=e.getTensor(this.mean_);b.a(1===r.rank,"The mean operand is not 1-D.");const a=e.getTensor(this.variance_);let s,i;b.a(1===a.rank,"The mean operand is not 1-D."),this.scale_&&(s=e.getTensor(this.scale_),b.a(1===s.rank,"The scale operand is not 1-D.")),this.bias_&&(i=e.getTensor(this.bias_),b.a(1===i.rank,"The bias operand is not 1-D."));const u=Array.from(Array(t.rank).keys());return u[n]=t.rank-1,u[t.rank-1]=n,o.transpose(o.batchNorm(o.transpose(t,u),r,a,i,s,this.epsilon_),u)}}class x extends i{constructor(e,t){super(e.builder),b.k(e),this.a_=e,b.k(t),this.b_=t}inputs(){return[this.a_,this.b_]}run(e){const t=e.getTensor(this.a_),n=e.getTensor(this.b_);return this.runOp(t,n)}}class v extends x{runOp(e,t){return o.add(e,t)}}class k extends x{runOp(e,t){return o.sub(e,t)}}class y extends x{runOp(e,t){return o.mul(e,t)}}class w extends x{runOp(e,t){return o.div(e,t)}}class I extends x{runOp(e,t){return o.maximum(e,t)}}class O extends x{runOp(e,t){return o.minimum(e,t)}}class C extends x{runOp(e,t){return o.pow(e,t)}}class T extends x{runOp(e,t){if(1===e.rank||1===t.rank)return o.dot(e,t);{const n=e.rank>t.rank?e.rank:t.rank;let r=o.matMul(e,t);return r.rank!==n&&(r=o.reshape(r,[1].concat(r.shape))),r}}}class $ extends i{constructor(e,t={}){super(e.builder),b.k(e),this.x_=e,b.m(t.minValue),this.minValue_=t.minValue,b.m(t.maxValue),this.maxValue_=t.maxValue}inputs(){const e=[this.x_];return this.minValue_&&e.push(this.minValue_),this.maxValue_&&e.push(this.maxValue_),e}run(e){const t=e.getTensor(this.x_);return this.minValue_?this.maxValue_?o.minimum(o.maximum(t,e.getTensor(this.minValue_)),e.getTensor(this.maxValue_)):o.maximum(t,e.getTensor(this.minValue_)):this.maxValue_?o.minimum(t,e.getTensor(this.maxValue_)):t}}class S extends i{constructor(e,t){b.a(e.every(e=>e instanceof a.c),"The parameter is not an operand."),super(e[0].builder),this.inputs_=e,b.a(b.h(t),"The axis parameter is invalid."),this.axis_=t}inputs(){return this.inputs_}run(e){const t=[];for(const n of this.inputs())t.push(e.getTensor(n));return o.concat(t,this.axis_)}}class E extends i{constructor(e,t,n={}){super(e.builder),b.k(e),this.input_=e,b.k(t),this.filter_=t,this.initOptions(n.padding,n.strides,n.dilations,n.groups,n.inputLayout,n.filterLayout,n.autoPad,n.transpose,n.outputPadding,n.outputSizes)}initOptions(e=[0,0,0,0],t=[1,1],n=[1,1],r=1,a=u.nchw,o=c.oihw,s=l.explicit,i=!1,d=[0,0],h){b.a(b.i(e)&&4===e.length,"The padding parameter is invalid."),this.padding_=e,b.a(b.i(t)&&2===t.length,"The strides parameter is invalid."),this.strides_=t,b.a(b.i(n)&&2===n.length,"The dilations parameter is invalid."),this.dilations_=n,b.a(b.h(r),"The gourps parameter is invalid."),this.groups_=r,b.a(a in u,"The input layout parameter is invalid."),this.inputLayout_=a,b.a(o in c,"The filter layout parameter is invalid."),this.filterLayout_=o,b.a(s in l,"The autoPad parameter is invalid."),this.autoPad_=s,this.transpose_=i,this.transpose_?(b.a(b.i(d)&&2===d.length,"The outputPadding parameter is invalid."),this.outputPadding_=d,b.a(void 0===h||b.i(h)&&2===h.length,"The outputSizes parameter is invalid."),this.outputSizes_=h):(this.outputPadding_=[0,0],this.outputSizes_=void 0)}inputs(){return[this.input_,this.filter_]}run(e){let t=e.getTensor(this.input_),n=e.getTensor(this.filter_);this.inputLayout_===u.nchw&&(t=o.transpose(t,[0,2,3,1]));const r=t.shape[3];let a;if(this.filterLayout_===c.oihw?n=o.transpose(n,[2,3,1,0]):this.filterLayout_===c.ohwi&&(n=o.transpose(n,[1,2,3,0])),!1===this.transpose_)if(1===this.groups_){let e;if(this.autoPad_===l.explicit)e=this.padding_.every(e=>0===e)?"valid":[[0,0],[this.padding_[0],this.padding_[1]],[this.padding_[2],this.padding_[3]],[0,0]];else if(this.autoPad_===l["same-upper"]){e=[[0,0],[0,0],[0,0],[0,0]];const r=[0,0];for(let e=0;e<2;++e)r[e]=Math.ceil(t.shape[1+e]/this.strides_[e]);const a=[0,0];for(let e=0;e<2;++e)a[e]=this.strides_[e]*(r[e]-1)+this.outputPadding_[e]+((n.shape[e]-1)*this.dilations_[e]+1)-t.shape[1+e];for(let t=0;t<2;++t)e[t+1][0]=a[t]-Math.floor(a[t]/2),e[t+1][1]=Math.floor(a[t]/2)}else e="same";a=o.conv2d(t,n,this.strides_,e,"NHWC",this.dilations_)}else{if(this.groups_!==r||this.groups_!==n.shape[3])throw new Error("The tf.js convolution doesn't support groups parameter "+this.groups_);{let e;if(this.autoPad_===l.explicit)b.a(this.padding_.every(e=>e===this.padding_[0]),"tf.depthwiseConv2d only supports the same padding value."),e=0===this.padding_[0]?"valid":this.padding_[0];else{if(this.autoPad_!==l["same-lower"])throw new Error("tf.depthwiseConv2d only supports the same-lower auto pad.");e="same"}n=o.transpose(n,[0,1,3,2]),a=o.depthwiseConv2d(t,n,this.strides_,e,"NHWC",this.dilations_)}}else{let e;if(b.a(this.dilations_.every(e=>1===e),"tf.conv2dTranspose only supports dilation 1."),this.autoPad_===l.explicit)b.a(this.padding_.every(e=>e===this.padding_[0]),"tf.conv2dTranspose only supports the same padding value."),e=0===this.padding_[0]?"valid":this.padding_[0];else{if(this.autoPad_!==l["same-lower"])throw new Error("tf.conv2dTranspose only supports the same-lower auto pad.");e="same",this.outputSizes_=[t.shape[1]*this.strides_[0],t.shape[2]*this.strides_[1]]}const r=[t.shape[0],0,0,n.shape[2]];if(void 0===this.outputSizes_)for(let e=0;e<2;++e)r[e+1]=this.strides_[e]*(t.shape[e+1]-1)+this.outputPadding_[e]+((n.shape[e]-1)*this.dilations_[e]+1)-this.padding_[2*e]-this.padding_[2*e+1];else r[1]=this.outputSizes_[0],r[2]=this.outputSizes_[1];a=o.conv2dTranspose(t,n,r,this.strides_,e)}return this.inputLayout_===u.nchw&&(a=o.transpose(a,[0,3,1,2])),a}}class N extends s{constructor(e,t,n,r,o,s={}){super(e.builder),b.k(e),this.input_=e,b.k(t),this.weight_=t,b.k(n),this.recurrentWeight_=n,b.a(b.h(r)&&r>0,"The steps parameter is invalid."),this.steps_=r,b.a(b.h(o)&&o>0,"The hiddenSize parameter is invalid."),this.hiddenSize_=o,this.initOptions(s.bias,s.recurrentBias,s.initialHiddenState,s.resetAfter,s.returnSequence,s.direction,s.layout,s.activations),this.outputs.push(new a.e(this)),this.returnSequence_&&this.outputs_.push(new a.e(this))}initOptions(e,t,n,r=!0,a=!1,o=p.forward,s=d.zrn,i=[h.sigmoid,h.tanh]){b.m(e),this.bias_=e,b.m(t),this.recurrentBias_=t,b.m(n),this.initialHiddenState_=n,b.a(b.f(r),"The resetAfter parameter is not a boolean."),this.resetAfter_=r,b.a(b.f(a),"The resetAfter parameter is not a boolean."),this.returnSequence_=a,b.a(o in p,"The direction parameter is invalid."),this.direction_=o,b.a(s in d,"The layout parameter is invalid."),this.layout_=s,b.a(i instanceof Array&&2===i.length&&i.every(e=>e in h),"The activations parameter is invalid."),this.activations_=i}inputs(){const e=[this.input_,this.weight_,this.recurrentWeight_];return this.bias_&&e.push(this.bias_),this.recurrentBias_&&e.push(this.recurrentBias_),this.initialHiddenState_&&e.push(this.initialHiddenState_),e}computeImpl(e){const t=e.getTensor(this.input_),n=e.getTensor(this.weight_),r=e.getTensor(this.recurrentWeight_),a=this.bias_?e.getTensor(this.bias_):void 0,s=this.recurrentWeight_?e.getTensor(this.recurrentBias_):void 0,i=this.initialHiddenState_?e.getTensor(this.initialHiddenState_):void 0,u=this.steps_,c=this.hiddenSize_,l=this.resetAfter_,d=this.returnSequence_,h=this.layout_,f=this.activations_,m=this.direction_,b=m===p.both?2:1;let g,x=i;void 0===x&&(x=o.zeros([b,1,c]));const v=[],k=[],y=[],w=[];for(let e=0;e<b;++e)v.push(o.squeeze(o.slice(n,[e,0,0],[1,-1,-1]),[0])),k.push(o.squeeze(o.slice(r,[e,0,0],[1,-1,-1]),[0])),y.push(a?o.squeeze(o.slice(a,[e,0],[1,-1]),[0]):void 0),w.push(s?o.squeeze(o.slice(s,[e,0],[1,-1]),[0]):void 0);for(let e=0;e<u;++e){const n=[];let r;for(let e=0;e<b;++e)n.push(o.squeeze(o.slice(x,[e,0,0],[1,-1,-1]),[0]));for(let a=0;a<b;++a){const s=1===a||m===p.backward?u-e-1:e,i=o.squeeze(o.slice(t,[s,0,0],[1,-1,-1]),[0]),d=o.reshape(_.compute(i,v[a],k[a],n[a],c,y[a],w[a],l,h,f),[1,-1,c]);r=r?o.concat([r,d],0):d}x=r,d&&(r=o.reshape(r,[1,b,-1,c]),g=g?o.concat([g,r],0):r)}return[x,g]}compute(e){const t=this.computeImpl(e);e.setOutputTensor(this.outputs[0],t[0]),this.returnSequence_&&e.setOutputTensor(this.outputs[1],t[1])}}class _ extends i{constructor(e,t,n,r,a,o={}){super(e.builder),b.k(e),this.input_=e,b.k(t),this.weight_=t,b.k(n),this.recurrentWeight_=n,b.k(r),this.hiddenState_=r,b.a(b.h(a)&&a>0,"The hiddenSize parameter is invalid."),this.hiddenSize_=a,this.initOptions(o.bias,o.recurrentBias,o.resetAfter,o.layout,o.activations)}initOptions(e,t,n=!0,r=d.zrn,a=[h.sigmoid,h.tanh]){b.m(e),this.bias_=e,b.m(t),this.recurrentBias_=t,b.a(b.f(n),"The resetAfter parameter is not a boolean."),this.resetAfter_=n,b.a(r in d,"The layout parameter is invalid."),this.layout_=r,b.a(a instanceof Array&&2===a.length&&a.every(e=>e in h),"The activations parameter is invalid."),this.activations_=a}inputs(){const e=[this.input_,this.weight_,this.recurrentWeight_,this.hiddenState_];return this.bias_&&e.push(this.bias_),this.recurrentBias_&&e.push(this.recurrentBias_),e}static compute(e,t,n,r,a,s,i,u=!0,c=d.zrn,l=[h.sigmoid,h.tanh]){const p=o.scalar(1),f=o.scalar(0),m=c===d.zrn?{z:0,r:a,n:2*a}:{r:0,z:a,n:2*a},b=o[l[0]](o.add(o.add(s?o.slice(s,[m.z],[a]):f,i?o.slice(i,[m.z],[a]):f),o.add(o.matMul(e,o.transpose(o.slice(t,[m.z,0],[a,-1]))),o.matMul(r,o.transpose(o.slice(n,[m.z,0],[a,-1])))))),g=o[l[0]](o.add(o.add(s?o.slice(s,[m.r],[a]):f,i?o.slice(i,[m.r],[a]):f),o.add(o.matMul(e,o.transpose(o.slice(t,[m.r,0],[a,-1]))),o.matMul(r,o.transpose(o.slice(n,[m.r,0],[a,-1]))))));let x;return x=u?o[l[1]](o.add(s?o.slice(s,[m.n],[a]):f,o.add(o.matMul(e,o.transpose(o.slice(t,[m.n,0],[a,-1]))),o.mul(g,o.add(i?o.slice(i,[m.n],[a]):f,o.matMul(r,o.transpose(o.slice(n,[m.n,0],[a,-1])))))))):o[l[1]](o.add(o.add(s?o.slice(s,[m.n],[a]):f,i?o.slice(i,[m.n],[a]):f),o.add(o.matMul(e,o.transpose(o.slice(t,[m.n,0],[a,-1]))),o.matMul(o.mul(g,r),o.transpose(o.slice(n,[m.n,0],[a,-1])))))),o.add(o.mul(b,r),o.mul(x,o.sub(p,b)))}run(e){return _.compute(e.getTensor(this.input_),e.getTensor(this.weight_),e.getTensor(this.recurrentWeight_),e.getTensor(this.hiddenState_),this.hiddenSize_,this.bias_?e.getTensor(this.bias_):void 0,this.recurrentBias_?e.getTensor(this.recurrentBias_):void 0,this.resetAfter_,this.layout_,this.activations_)}}class A extends i{constructor(e,t={}){if(super(e.builder),b.k(e),this.input_=e,b.m(t.scale),this.scale_=t.scale,b.m(t.bias),this.bias_=t.bias,void 0!==t.epsilon){const e=t.epsilon;b.a("number"==typeof e,"The epsilon parameter is invalid"),this.epsilon_=e}else this.epsilon_=1e-5;void 0!==t.layout?(b.a(t.layout in u,"The layout parameter is invalid."),this.layout_=t.layout):this.layout_=u.nchw}inputs(){const e=[this.input_];return this.scale_&&e.push(this.scale_),this.bias_&&e.push(this.bias_),e}run(e){const t=e.getTensor(this.input_);b.a(4===t.rank,"The input operand is not 4-D.");let n,r,a=[2,3],s=[1,-1,1,1],i=t.shape[1];this.layout_===u.nhwc&&(a=[1,2],s=[1,1,1,-1],i=t.shape[3]),this.scale_&&(n=e.getTensor(this.scale_),b.a(1===n.rank,"The scale operand is not 1-D."),b.a(n.shape[0]===i,"The length of scale is not equal to the size of the feature dimension of the input.")),this.bias_&&(r=e.getTensor(this.bias_),b.a(1===r.rank,"The bias operand is not 1-D."),b.a(r.shape[0]===i,"The length of bias is not equal to the size of the feature dimension of the input."));const c=o.mean(t,a,!0),l=o.mean(o.pow(o.sub(t,c),2),a,!0),d=o.div(o.sub(t,c),o.pow(o.add(l,this.epsilon_),.5)),h=n?o.mul(o.reshape(n,s),d):d;return r?o.add(o.reshape(r,s),h):h}}class R extends i{constructor(e,t=.01){super(e.builder),b.k(e),this.x_=e,b.a("number"==typeof t,"The alpha parameter is invalid."),this.alpha_=t}inputs(){return[this.x_]}run(e){const t=e.getTensor(this.x_);return o.leakyRelu(t,this.alpha_)}}class F extends i{constructor(e,t,n={}){super(e.builder),this.mode_=f.constant,this.value_=0,b.k(e),this.input_=e,b.k(t),this.padding_=t,void 0!==n.mode&&(b.a(n.mode in f,"The mode parameter is invalid."),this.mode_=n.mode),void 0!==n.value&&(this.value_=n.value)}inputs(){return[this.input_,this.padding_]}run(e){const t=e.getTensor(this.input_),n=e.getTensor(this.padding_);b.a(2===n.rank&&"int32"===n.dtype&&n.shape[0]===t.rank,"The padding operand is invalid.");const r=n.arraySync();if(this.mode_===f.constant)return o.pad(t,r,this.value_);if(this.mode_===f.edge){const e=new Array(r.length);let n=t;for(;;){for(let t=0;t<r.length;++t){e[t]=[0,0];for(let n=0;n<2;++n)r[t][n]>0?(e[t][n]=1,r[t][n]-=1):e[t][n]=0}if(e.every(e=>0===e[0]&&0===e[1]))break;n=o.mirrorPad(n,e,"symmetric")}return n}{let e;return this.mode_===f.reflection?e="reflect":this.mode_===f.symmetric&&(e="symmetric"),o.mirrorPad(t,r,e)}}}class j extends i{constructor(e,t={}){super(e.builder),b.k(e),this.input_=e,this.initOptions(t.windowDimensions,t.padding,t.strides,t.dilations,t.layout,t.autoPad)}initOptions(e=[-1,-1],t=[0,0,0,0],n=[1,1],r=[1,1],a=u.nchw,o=l.explicit){b.a(b.i(e)&&2===e.length,"The padding parameter is invalid."),this.windowDimensions_=e,b.a(b.i(t)&&4===t.length,"The padding parameter is invalid."),this.padding_=t,b.a(b.i(n)&&2===n.length,"The strides parameter is invalid."),this.strides_=n,b.a(b.i(r)&&2===r.length,"The dilations parameter is invalid."),this.dilations_=r,b.a(a in u,"The layout parameter is invalid."),this.layout_=a,b.a(o in l,"The autoPad parameter is invalid."),this.autoPad_=o}inputs(){return[this.input_]}run(e){let t,n=e.getTensor(this.input_);if(this.autoPad_===l.explicit)b.a(this.padding_.every(e=>e===this.padding_[0]),"tf.pool only supports the same padding value."),t=0===this.padding_[0]?"valid":this.padding_[0];else{if(this.autoPad_!==l["same-lower"])throw new Error("tf.pool only supports the same-lower auto pad.");t="same"}const r=this.getPoolingType();this.layout_===u.nchw&&(n=o.transpose(n,[0,2,3,1]));const a=this.windowDimensions_;-1===a[0]&&-1===a[1]&&(a[0]=n.shape[1],a[1]=n.shape[2]);let s=o.pool(n,this.windowDimensions_,r,t,this.dilations_,this.strides_);return this.layout_===u.nchw&&(s=o.transpose(s,[0,3,1,2])),s}}class D extends j{getPoolingType(){return"avg"}}class M extends j{getPoolingType(){return"max"}}class P extends i{constructor(e,t={}){super(e.builder),b.k(e),this.input_=e,void 0!==t.axes?(b.a(b.i(t.axes)&&t.axes.every(e=>e>0||-1===e),"The starts parameter is invalid."),this.axes_=t.axes):this.axes_=void 0,void 0!==t.keepDimensions?(b.a(b.f(t.keepDimensions),"The keepDimensions parameter is not a boolean."),this.keepDimensions_=t.keepDimensions):this.keepDimensions_=!1}inputs(){return[this.input_]}run(e){const t=e.getTensor(this.input_);return this.runOp(t,this.axes_,this.keepDimensions_)}}class B extends P{runOp(e,t,n){return o.logSumExp(e,t,n)}}class L extends P{runOp(e,t,n){return o.max(e,t,n)}}class W extends P{runOp(e,t,n){return o.mean(e,t,n)}}class z extends P{runOp(e,t,n){return o.min(e,t,n)}}class V extends P{runOp(e,t,n){return o.prod(e,t,n)}}class U extends P{runOp(e,t,n){return o.sum(e,t,n)}}class G extends i{constructor(e,t={}){if(super(e.builder),this.mode_=m["nearest-neighbor"],b.k(e),this.input_=e,void 0!==t.scales){const e=t.scales;b.a(e instanceof Array&&e.every(e=>"number"==typeof e)&&4===e.length,"The scales parameter is invalid."),this.scales_=t.scales}void 0!==t.sizes&&(b.a(b.i(t.sizes)&&4===t.sizes.length,"The sizes parameter is invalid."),this.sizes_=t.sizes,this.scales_=void 0),b.a(void 0!==this.scales_||void 0!==this.sizes_,"The scales or sizes parameter is not provied."),void 0!==t.mode&&(b.a(t.mode in m,"The mode parameter is invalid."),this.mode_=t.mode)}inputs(){return[this.input_]}run(e){let t=e.getTensor(this.input_);b.a(4===t.rank,"The input tensor is not 4-D.");const n=[0,0];let r,a=!1;if(void 0!==this.sizes_)if(this.sizes_[0]===t.shape[0]&&this.sizes_[1]===t.shape[1])n[0]=this.sizes_[2],n[1]=this.sizes_[3],t=o.transpose(t,[0,2,3,1]),a=!0;else{if(this.sizes_[0]!==t.shape[0]||this.sizes_[3]!==t.shape[3])throw new Error("tf.image.resize doesn't support the sizes parameter.");n[0]=this.sizes_[1],n[1]=this.sizes_[2]}else if(void 0!==this.scales_)if(1===this.scales_[0]&&1===this.scales_[1])n[0]=Math.floor(t.shape[2]*this.scales_[2]),n[1]=Math.floor(t.shape[3]*this.scales_[3]),t=o.transpose(t,[0,2,3,1]),a=!0;else{if(1!==this.scales_[0]||1!==this.scales_[3])throw new Error("tf.image.resize doesn't support the scales parameter.");n[0]=Math.floor(t.shape[1]*this.scales_[1]),n[1]=Math.floor(t.shape[2]*this.scales_[2])}return this.mode_===m["nearest-neighbor"]?r=o.image.resizeNearestNeighbor(t,n,!1,!0):this.mode_===m.linear&&(r=o.image.resizeBilinear(t,n,!1,!0)),a&&(r=o.transpose(r,[0,3,1,2])),r}}class H extends i{constructor(e,t){super(e.builder),b.k(e),this.input_=e,b.a(b.i(t)&&0!==t.length,"The newShape parameter is invalid."),this.newShape_=t}inputs(){return[this.input_]}run(e){const t=e.getTensor(this.input_);return o.reshape(t,this.newShape_)}}class K extends i{constructor(e,t,n,r){super(e.builder),b.k(e),this.input_=e,b.a(b.i(t),"The starts parameter is invalid."),this.starts_=t,b.a(b.i(n)&&n.every(e=>e>0||-1===e),"The starts parameter is invalid."),this.sizes_=n,b.a(n.length==n.length,"The length of sizes is not equal to the length of sizes.))"),b.a(void 0===r||b.i(r),"The starts parameter is invalid."),void 0!==r&&b.a(n.length===r.length,"The length of axes is invalid.))"),this.axes_=r}inputs(){return[this.input_]}run(e){const t=e.getTensor(this.input_),n=t.shape.length;if(void 0===this.axes_){this.axes_=[];for(let e=0;e<n;++e)this.axes_.push(e)}b.a(this.axes_.every(e=>e<n&&e>=-n),"The value of axes is invalid."),b.a(this.starts_.length===this.axes_.length,"The length of starts is invalid."),b.a(this.sizes_.length===this.axes_.length,"The length of sizes is invalid.");const r=new Array(this.axes_.length).fill(0),a=new Array(this.axes_.length).fill(-1);for(let e=0;e<this.axes_.length;++e){let t=this.axes_[e];t<0&&(t=n+t),r[t]=this.starts_[e],a[t]=this.sizes_[e]}return o.slice(t,r,a)}}class q extends i{constructor(e){super(e.builder),b.k(e),this.x_=e}inputs(){return[this.x_]}run(e){const t=e.getTensor(this.x_);if(2!==t.rank)throw new Error("The rank of x parameter should be 2.");return o.softmax(t)}}class X extends s{constructor(e,t,n={}){super(e.builder),b.k(e),this.input_=e,b.a(b.h(t)||b.i(t),"The splits parameter is invalid."),this.splits_=t,b.a(void 0===n.axis||b.h(n.axis),"The options.axis is invalid."),this.axis_=n.axis;const r=b.h(t)?t:t.length;for(let e=0;e<r;++e)this.outputs.push(new a.e(this))}inputs(){return[this.input_]}compute(e){const t=e.getTensor(this.input_),n=o.split(t,this.splits_,this.axis_);for(let t=0;t<n.length;++t)e.setOutputTensor(this.outputs[t],n[t])}}class Y extends i{constructor(e,t){super(e.builder),b.k(e),this.input_=e,void 0!==t&&b.a(b.i(t)&&0!==t.length,"The axes parameter is invalid."),this.axes_=t}inputs(){return[this.input_]}run(e){const t=e.getTensor(this.input_);return o.squeeze(t,this.axes_)}}class Q extends i{constructor(e,t){super(e.builder),b.k(e),this.input_=e,void 0!==t&&b.a(b.i(t)&&0!==t.length,"The permutation parameter is invalid."),this.permutation_=t}inputs(){return[this.input_]}run(e){const t=e.getTensor(this.input_);return o.transpose(t,this.permutation_)}}class Z extends i{constructor(e){super(e.builder),b.k(e),this.x_=e}inputs(){return[this.x_]}run(e){const t=e.getTensor(this.x_);return this.runOp(t)}}class J extends Z{runOp(e){return o.exp(e)}}class ee extends Z{runOp(e){return o.sigmoid(e)}}class te extends Z{runOp(e){return o.tanh(e)}}class ne extends Z{runOp(e){return o.relu(e)}}!function(e){e.nchw="nchw",e.nhwc="nhwc"}(u||(u={})),function(e){e.oihw="oihw",e.hwio="hwio",e.ohwi="ohwi"}(c||(c={})),function(e){e.explicit="explicit",e["same-upper"]="same-upper",e["same-lower"]="same-lower"}(l||(l={})),function(e){e.zrn="zrn",e.rzn="rzn"}(d||(d={})),function(e){e.relu="relu",e.sigmoid="sigmoid",e.tanh="tanh"}(h||(h={})),function(e){e.forward="forward",e.backward="backward",e.both="both"}(p||(p={})),function(e){e.constant="constant",e.edge="edge",e.reflection="reflection",e.symmetric="symmetric"}(f||(f={})),function(e){e["nearest-neighbor"]="nearest-neighbor",e.linear="linear"}(m||(m={}));class re{constructor(){}createModel(e){return new r.a(e)}input(e,t){return new a.b(e,t,this)}constant(e,t){return"number"==typeof e?(void 0===t&&(t=a.d.float32),a.a.createScalar(e,t,this)):a.a.createTensor(e,t,this)}add(e,t){return this.validateOperandBuilder([e,t]),new v(e,t).output}sub(e,t){return this.validateOperandBuilder([e,t]),new k(e,t).output}mul(e,t){return this.validateOperandBuilder([e,t]),new y(e,t).output}div(e,t){return this.validateOperandBuilder([e,t]),new w(e,t).output}max(e,t){return this.validateOperandBuilder([e,t]),new I(e,t).output}min(e,t){return this.validateOperandBuilder([e,t]),new O(e,t).output}pow(e,t){return this.validateOperandBuilder([e,t]),new C(e,t).output}exp(e){return this.validateOperandBuilder([e]),new J(e).output}sigmoid(e){return this.validateOperandBuilder([e]),new ee(e).output}tanh(e){return this.validateOperandBuilder([e]),new te(e).output}batchNormalization(e,t,n,r={}){return this.validateOperandBuilder([e,t,n,r.scale,r.bias]),new g(e,t,n,r).output}clamp(e,t={}){return this.validateOperandBuilder([e,t.minValue,t.maxValue]),new $(e,t).output}concat(e,t){return this.validateOperandBuilder(e),new S(e,t).output}conv2d(e,t,n={}){return this.validateOperandBuilder([e,t]),new E(e,t,n).output}gemm(e,t,n={}){return this.validateOperandBuilder([e,t,n.c]),class{static build(e,t,n,r={}){b.k(t),b.k(n),b.m(r.c),b.a(void 0===r.aTranspose||b.f(r.aTranspose),"The options.aTranspose is invalid."),b.a(void 0===r.bTranspose||b.f(r.bTranspose),"The options.bTranspose is invalid."),b.a(void 0===r.alpha||"number"==typeof r.alpha,"The options.alpha is invalid."),b.a(void 0===r.beta||"number"==typeof r.beta,"The options.beta is invalid."),r.aTranspose&&(t=e.transpose(t)),r.bTranspose&&(n=e.transpose(n));const a=e.constant(void 0===r.alpha?1:r.alpha),o=e.constant(void 0===r.beta?1:r.beta),s=e.matmul(e.mul(a,t),n);return r.c?e.add(s,e.mul(o,r.c)):s}}.build(this,e,t,n)}gru(e,t,n,r,a,o={}){return this.validateOperandBuilder([e,t,n,o.bias,o.recurrentBias,o.initialHiddenState]),new N(e,t,n,r,a,o).outputs}gruCell(e,t,n,r,a,o={}){return this.validateOperandBuilder([e,t,n,r,o.bias,o.recurrentBias]),new _(e,t,n,r,a,o).output}instanceNormalization(e,t={}){return this.validateOperandBuilder([e,t.bias,t.scale]),new A(e,t).output}leakyRelu(e,t={}){return this.validateOperandBuilder([e]),new R(e,t.alpha).output}matmul(e,t){return this.validateOperandBuilder([e,t]),new T(e,t).output}pad(e,t,n={}){return this.validateOperandBuilder([e,t]),new F(e,t,n).output}averagePool2d(e,t={}){return this.validateOperandBuilder([e]),new D(e,t).output}maxPool2d(e,t={}){return this.validateOperandBuilder([e]),new M(e,t).output}reduceLogSumExp(e,t={}){return this.validateOperandBuilder([e]),new B(e,t).output}reduceMax(e,t={}){return this.validateOperandBuilder([e]),new L(e,t).output}reduceMean(e,t={}){return this.validateOperandBuilder([e]),new W(e,t).output}reduceMin(e,t={}){return this.validateOperandBuilder([e]),new z(e,t).output}reduceProduct(e,t={}){return this.validateOperandBuilder([e]),new V(e,t).output}reduceSum(e,t={}){return this.validateOperandBuilder([e]),new U(e,t).output}relu(e){return this.validateOperandBuilder([e]),new ne(e).output}resample(e,t={}){return this.validateOperandBuilder([e]),new G(e,t).output}reshape(e,t){return this.validateOperandBuilder([e]),new H(e,t).output}slice(e,t,n,r={}){return this.validateOperandBuilder([e]),new K(e,t,n,r.axes).output}softmax(e){return this.validateOperandBuilder([e]),new q(e).output}split(e,t,n={}){return this.validateOperandBuilder([e]),new X(e,t,n).outputs}squeeze(e,t={}){return this.validateOperandBuilder([e]),new Y(e,t.axes).output}transpose(e,t={}){return this.validateOperandBuilder([e]),new Q(e,t.permutation).output}validateOperandBuilder(e){b.a(e.every(e=>!e||e instanceof a.c&&e.builder===this),"The operand is not built by this builder.")}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(71);class a{constructor(){this.nnContext=null}getNeuralNetworkContext(){return this.nnContext||(this.nnContext=new r.a),this.nnContext}}},function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return a}));
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const r="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:void 0!==e?e:e=>e();function a(){return new Promise(e=>r(()=>e()))}}).call(this,n(98).setImmediate)},function(e,t,n){"use strict";var r=n(0);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a={},o={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function s(e){if(!(e in a)){const t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);if(t.addEventListener("webglcontextlost",t=>{t.preventDefault(),delete a[e]},!1),1===e)return t.getContext("webgl",o)||t.getContext("experimental-webgl",o);return t.getContext("webgl2",o)}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;a[e]=t}const t=a[e];return t.isContextLost()?(delete a[e],s(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),a[e])}var i,u,c;function l(e,t){return[t,e]}function d(e){const t=r.util.sizeFromShape(e),n=Math.ceil(t/4);return r.util.sizeToSquarishShape(n)}function h(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function p(e,t){const n=e;let a,o,s,i,u,c,l,d,h,p;return 2===Object(r.env)().getNumber("WEBGL_VERSION")?(a=n.R32F,o=n.R16F,s=n.RGBA16F,i=n.RGBA32F,u=n.RED,l=4,d=1,h=n.HALF_FLOAT,p=n.FLOAT):(a=e.RGBA,o=e.RGBA,s=e.RGBA,i=n.RGBA,u=e.RGBA,l=4,d=4,h=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT),c=e.RGBA,{internalFormatFloat:a,internalFormatHalfFloat:o,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:u,downloadTextureFormat:c,downloadUnpackNumChannels:l,defaultNumChannels:d,textureTypeHalfFloat:h,textureTypeFloat:p}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f(e,t){const n=t();return Object(r.env)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code "+t}}(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(i||(i={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(u||(u={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(c||(c={}));function m(e){return!!(Object(r.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function b(e,t){return C(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function g(e,t){const n=C(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(f(e,()=>e.shaderSource(n,t)),f(e,()=>e.compileShader(n)),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=x.exec(t);if(null==n)return console.log("Couldn't parse line number in error: "+t),void console.log(e);const a=+n[1],o=e.split("\n"),s=o.length.toString().length+2,i=o.map((e,t)=>r.util.rightPad((t+1).toString(),s)+e);let u=0;for(let e=0;e<i.length;e++)u=Math.max(i[e].length,u);const c=i.slice(0,a-1),l=i.slice(a-1,a),d=i.slice(a);console.log(c.join("\n")),console.log(t.split("\n")[0]),console.log("%c "+r.util.rightPad(l[0],u),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const x=/ERROR: [0-9]+:([0-9]+):/g;function v(e,t){if(f(e,()=>e.validateProgram(t)),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function k(e,t,n,r,a,o,s){const i=e.getAttribLocation(t,n);return-1!==i&&(f(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),f(e,()=>e.vertexAttribPointer(i,a,e.FLOAT,!1,o,s)),f(e,()=>e.enableVertexAttribArray(i)),!0)}function y(e,t,n,r){f(e,()=>function(e,t,n){T(e,n),f(e,()=>e.activeTexture(e.TEXTURE0+n)),f(e,()=>e.bindTexture(e.TEXTURE_2D,t))}(e,t,r)),f(e,()=>e.uniform1i(n,r))}function w(e,t,n){f(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),f(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function I(e,t){f(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),f(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function O(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error "+t}}(e,t))}function C(e,t,n){const r=f(e,()=>t());if(null==r)throw new Error(n);return r}function T(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function $(e,t=2){return r.util.sizeFromShape(e.slice(0,e.length-t))}function S(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function E(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[$(e),...S(e)]),t}function N(e){return e%2==0}function _(e,t){if(e=e.slice(-2),t=t.slice(-2),r.util.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(N(n)&&N(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&N(e[0])&&N(t[0])}let A,R;function F(e,t){return null!=e.getExtension(t)}function j(e){try{if(null!=s(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function D(e){if(0===e)return!1;const t=s(e);if(1!==e){if(F(t,"EXT_color_buffer_float"))return M(t);const e="EXT_color_buffer_half_float";if(F(t,e)){const n=t.getExtension(e);return function(e,t){const n=p(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),o}(t,n)}return!1}if(!F(t,"OES_texture_float"))return!1;if(!F(t,"WEBGL_color_buffer_float"))return!1;return M(t)}function M(e){const t=p(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function P(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&r.util.assert("complex64"!==e.dtype,()=>t+" does not support complex64 tensors in the WebGL backend.")})}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B=Object(r.env)();
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function L(){let e,t,n,a,o,s,i,u,c,l;return 2===Object(r.env)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",a="in",o="texture",s="outputColor",i="out vec4 outputColor;",u="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",c="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",a="varying",o="texture2D",s="gl_FragColor",i="",u="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",c="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:a,texture2D:o,output:s,defineOutput:i,defineSpecialNaN:u,defineSpecialInf:c,defineRound:l}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W(e,t,n="index"){const a=r.util.computeStrides(t);return a.map((t,r)=>`${`int ${e[r]} = ${n} / ${t}`}; ${r===a.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${t}`:`index -= ${e[r]} * ${t}`};`).join("")}function z(e){const t=r.util.computeStrides(e).map(e=>e.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}B.registerFlag("HAS_WEBGL",()=>B.getNumber("WEBGL_VERSION")>0),B.registerFlag("WEBGL_VERSION",()=>j(2)?2:j(1)?1:0),B.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),B.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===B.get("WEBGL_VERSION")),B.registerFlag("WEBGL_CPU_FORWARD",()=>!0),B.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),B.registerFlag("WEBGL_PACK",()=>B.getBool("HAS_WEBGL")),B.registerFlag("WEBGL_PACK_NORMALIZATION",()=>B.getBool("WEBGL_PACK")),B.registerFlag("WEBGL_PACK_CLIP",()=>B.getBool("WEBGL_PACK")),B.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>!1),B.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>B.getBool("WEBGL_PACK")),B.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>B.getBool("WEBGL_PACK")),B.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>B.getBool("WEBGL_PACK")),B.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>B.getBool("WEBGL_PACK")),B.registerFlag("WEBGL_PACK_REDUCE",()=>B.getBool("WEBGL_PACK")),B.registerFlag("WEBGL_LAZILY_UNPACK",()=>B.getBool("WEBGL_PACK")),B.registerFlag("WEBGL_CONV_IM2COL",()=>B.getBool("WEBGL_PACK")),B.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>function(e){if(null==A){const t=s(e);A=t.getParameter(t.MAX_TEXTURE_SIZE)}return A}(B.getNumber("WEBGL_VERSION"))),B.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>function(e){if(null==R){const t=s(e);R=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,R)}(B.getNumber("WEBGL_VERSION"))),B.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const e=B.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=s(e);return t=F(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:F(n,"EXT_disjoint_timer_query")?1:0,t}(e)}),B.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>B.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!r.device_util.isMobile()),B.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>function(e){if(0===e)return!1;const t=s(e);if(1===e){if(!F(t,"OES_texture_float"))return!1}else if(!F(t,"EXT_color_buffer_float"))return!1;return M(t)}(B.getNumber("WEBGL_VERSION"))),B.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!B.getBool("WEBGL_FORCE_F16_TEXTURES")&&B.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),B.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>D(B.getNumber("WEBGL_VERSION"))),B.registerFlag("WEBGL_FENCE_API_ENABLED",()=>{return 2===(e=B.getNumber("WEBGL_VERSION"))&&null!=s(e).fenceSync;var e}),B.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>B.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),B.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)}),B.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>r.device_util.isMobile()&&B.getBool("IS_CHROME")?1:-1,e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)});const V="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class U{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=i.DENSE;const t=d(e),n=L();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${W(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class G{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=i.DENSE;const t=d(e),n=L();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${W(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class H{constructor(e){this.variableNames=["A"],this.outTexUsage=u.DOWNLOAD;const t=L();this.outputShape=e,this.userCode=`\n      ${V}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class K{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=u.DOWNLOAD;const t=L();this.outputShape=e,this.userCode=`\n      ${V}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class q{constructor(e,t,n=!1){this.variableNames=["A"];const r=L(),[a,o]=t;this.outputShape=e;let s="result";n&&(s="floor(result * 255. + 0.5)"),this.userCode=`\n      ${z(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${o};\n        int c = imod(flatIndex, ${o});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${o}.0, ${a}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${s}, 0., 0., 0.);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class X{constructor(e,t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=L(),[a,o]=t;this.outputShape=e;let s="",i="result";n&&(i="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let n=0;n<=1;n++){const i=2*t+n;s+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${e[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${t} < ${e[1]}) {\n              localCoords[1] += ${t};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${o};\n              c = imod(flatIndex, ${o});\n              uv = (vec2(c, r) + halfCR) / vec2(${o}.0, ${a}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${i}] = values[0];\n              } else if(offset == 1) {\n                result[${i}] = values[1];\n              } else if(offset == 2) {\n                result[${i}] = values[2];\n              } else {\n                result[${i}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${z(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${s}\n\n        ${r.output} = ${i};\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y(e){const t=L();return function(e,t){const n=C(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(f(e,()=>e.shaderSource(n,t)),f(e,()=>e.compileShader(n)),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function Q(e){return function(e,t){const n=C(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return f(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),f(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function Z(e){return function(e,t){const n=C(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return f(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),f(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}(e,new Uint16Array([0,1,2,2,1,3]))}function J(e,t,n,a,o,s){!function(e,t){const n=Object(r.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){throw new Error("Requested texture size "+`[${e}x${t}]`+" is invalid.")}if(e>n||t>n){throw new Error("Requested texture size "+`[${e}x${t}]`+" greater than WebGL maximum on this browser / GPU "+`[${n}x${n}]`+".")}}(t,n);const i=function(e){return C(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}(e),u=e.TEXTURE_2D;return f(e,()=>e.bindTexture(u,i)),f(e,()=>e.texParameteri(u,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),f(e,()=>e.texParameteri(u,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),f(e,()=>e.texParameteri(u,e.TEXTURE_MIN_FILTER,e.NEAREST)),f(e,()=>e.texParameteri(u,e.TEXTURE_MAG_FILTER,e.NEAREST)),f(e,()=>e.texImage2D(u,0,a,t,n,0,o,s,null)),f(e,()=>e.bindTexture(e.TEXTURE_2D,null)),i}function ee(e){return e.internalFormatFloat}function te(e){return e.internalFormatHalfFloat}function ne(e){return e.downloadTextureFormat}function re(e){return e.internalFormatPackedFloat}function ae(e){return e.internalFormatPackedHalfFloat}function oe(e,t,n,r,a,o,s,i){const u=e,c=new Float32Array(function(e,t){const[n,r]=h(e,t);return n*r*4}(o,s));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,c),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),c}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class se{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=Object(r.env)().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){a[e]=t}(t,e)):this.gl=s(t);let n="WEBGL_color_buffer_float";if(1===Object(r.env)().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=b(this.gl,e),F(this.gl,t))this.textureHalfFloatExtension=b(this.gl,t);else if(Object(r.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),F(this.gl,"EXT_color_buffer_half_float"))this.colorBufferHalfFloatExtension=b(this.gl,"EXT_color_buffer_half_float");else if(Object(r.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",F(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!F(this.gl,"EXT_color_buffer_half_float"))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension("EXT_color_buffer_half_float")}this.vertexBuffer=Q(this.gl),this.indexBuffer=Z(this.gl),this.framebuffer=function(e){return C(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=p(this.gl,this.textureHalfFloatExtension)}get debug(){return Object(r.env)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;f(e,()=>e.finish()),f(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),f(e,()=>e.deleteFramebuffer(this.framebuffer)),f(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),f(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),f(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,o]=l(t,n);return J(e,a,o,ee(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,o]=l(t,n);return J(e,a,o,te(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,o]=l(t,n);return J(e,a,o,ne(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){f(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?f(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):f(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),f(e,()=>e.bindTexture(e.TEXTURE_2D,null))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,a,o){let s,i,u;f(e,()=>e.bindTexture(e.TEXTURE_2D,t)),a instanceof Uint8Array?(s=new Uint8Array(n*r*4),i=e.UNSIGNED_BYTE,u=e.RGBA):(s=new Float32Array(n*r*4),i=e.FLOAT,u=o.internalFormatPackedFloat),s.set(a),f(e,()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,i,s)),f(e,()=>e.bindTexture(e.TEXTURE_2D,null))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,o]=h(t,n);return J(e,a,o,ae(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,o]=h(t,n);return J(e,a,o,re(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(I(this.gl,this.framebuffer),this.outputTexture=null),f(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>function(e,t,n,r){const[a,o]=l(t,n),s=new Uint8Array(t*n*4);return f(e,()=>e.readPixels(0,0,a,o,r.downloadTextureFormat,e.UNSIGNED_BYTE,s)),new Float32Array(s.buffer)}(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,r,a,o){return oe(this.gl,e,0,0,0,a,o,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const a=e.createBuffer();f(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a));const o=16*t*n;return f(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,o,e.STREAM_READ)),f(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),f(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),a}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Object(r.env)().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>function(e,t,n){const r=new Float32Array(t*n*4);return f(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r)),r}(this.gl,t,n))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=g(t,e),r=Y(t),a=function(e){return C(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}(t);return f(t,()=>t.attachShader(a,r)),f(t,()=>t.attachShader(a,n)),function(e,t){if(f(e,()=>e.linkProgram(t)),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,a),this.debug&&v(t,a),this.vertexAttrsAreBound||(this.setProgram(a),this.vertexAttrsAreBound=function(e,t,n){return f(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),k(e,t,"clipSpacePos",n,3,20,0)&&k(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),a}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&f(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&v(this.gl,this.program),f(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return C(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),f(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),y(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,a]=h(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&v(this.gl,this.program),O(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),f(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),f(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=b(this.gl,2===Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await r.util.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(this.itemsToPoll.map(e=>e.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||r.util.repeatedTry(()=>(this.pollItems(),0===this.itemsToPoll.length))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),w(this.gl,e,this.framebuffer),this.debug&&O(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(w(this.gl,this.outputTexture,this.framebuffer),this.debug&&O(this.gl)):I(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;w(r,e,this.framebuffer),this.debug&&O(r),this.outputTexture=e,f(r,()=>r.viewport(0,0,t,n)),f(r,()=>r.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),f(this.gl,()=>this.gl.scissor(e,t,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{getBroadcastDims:ie}=r.backend_util;function ue(e,t,n,a){const o=[];e.forEach(e=>{const t=r.util.sizeFromShape(e.shapeInfo.logicalShape);e.shapeInfo.isUniform?o.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(o.push(`uniform sampler2D ${e.name};`),o.push(`uniform int offset${e.name};`))});const s=o.join("\n"),i=e.map(e=>function(e,t,n=!1){let a="";a+=n?le(e):ce(e);const o=e.shapeInfo.logicalShape,s=t.logicalShape;o.length<=s.length&&(a+=n?function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),o="get"+a+"AtOutCoords",s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,u=ie(e.shapeInfo.logicalShape,t.logicalShape),c=xe(i),l=i-s;let d;const h=["x","y","z","w","u","v"];d=0===s?"":i<2&&u.length>=1?"coords = 0;":u.map(e=>`coords.${h[e+l]} = 0;`).join("\n");let p="";p=i<2&&s>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>"coords."+h[t+l]).join(", ");let f="return outputValue;";const m=1===r.util.sizeFromShape(e.shapeInfo.logicalShape),b=1===r.util.sizeFromShape(t.logicalShape);if(1!==s||m||b){if(m&&!b)f=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(u.length){const e=s-2,t=s-1;u.indexOf(e)>-1&&u.indexOf(t)>-1?f="return vec4(outputValue.x);":u.indexOf(e)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":u.indexOf(t)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${o}() {\n      ${c} coords = getOutputCoords();\n      ${d}\n      vec4 outputValue = get${a}(${p});\n      ${f}\n    }\n  `}(e,t):function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),o="get"+a+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,u=e.shapeInfo.logicalShape.length,c=t.logicalShape.length;if(!e.shapeInfo.isUniform&&u===c&&null==e.shapeInfo.flatOffset&&r.util.arraysEqual(i,s))return`\n      float ${o}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=xe(c),d=ie(e.shapeInfo.logicalShape,t.logicalShape),h=c-u;let p;const f=["x","y","z","w","u","v"];p=0===u?"":c<2&&d.length>=1?"coords = 0;":d.map(e=>`coords.${f[e+h]} = 0;`).join("\n");let m="";m=c<2&&u>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>"coords."+f[t+h]).join(", ");return`\n    float ${o}() {\n      ${l} coords = getOutputCoords();\n      ${p}\n      return get${a}(${m});\n    }\n  `}(e,t));return a}(e,t,a)).join("\n"),u=t.texShape,c=L(),l=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(c);let d,h,p=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${de}\n    ${he}\n    ${pe}\n  `}(c);t.isPacked?(d=function(e,t){switch(e.length){case 0:return me();case 1:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===n[0])return`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `;if(1===n[1])return`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `;return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,t);case 2:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(r.util.arraysEqual(e,t))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const a=Math.ceil(e[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),a=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t);default:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2);let o=a,s="",i="b, r, c";for(let t=2;t<e.length-1;t++)o*=e[e.length-t-1],s=`\n      int b${t} = index / ${o};\n      index -= b${t} * ${o};\n    `+s,i=`b${t}, `+i;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${s}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${i});\n    }\n  `}(e,t)}}(t.logicalShape,u),h=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(c)):(d=function(e,t){switch(e.length){case 0:return me();case 1:return function(e,t){if(1===t[0])return`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `;if(1===t[1])return`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `;return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t);case 2:return function(e,t){if(r.util.arraysEqual(e,t))return`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `;if(1===e[1])return`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;if(1===e[0])return`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=W(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(e,t);case 4:return function(e,t){const n=W(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t);case 5:return function(e,t){const n=W(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=W(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(e.length+"-D output sampling is not yet supported")}}(t.logicalShape,u),h=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(c)),a&&(p+=fe);return[p,l,h,s,d,i,n].join("\n")}function ce(e){const t=e.shapeInfo.logicalShape;switch(t.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;const[r,a]=e.shapeInfo.texShape;if(1===r&&1===a)return`\n      float ${n}() {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const[o,s]=e.shapeInfo.texShape,i=be(t);return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${o}, ${s}, ${i});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${ge(e)}\n      }\n    `;const r=e.shapeInfo.texShape,a=r[0],o=r[1];if(1===o&&1===a)return`\n      float ${n}(int index) {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const s=be(t);if(1===o)return`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${s}) + 0.5) / ${a}.0);\n        return sampleTexture(${t}, uv);\n      }\n    `;if(1===a)return`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${s}) + 0.5) / ${o}.0, 0.5);\n        return sampleTexture(${t}, uv);\n      }\n    `;return`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${o}, index + ${s});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),o=e.shapeInfo.texShape;if(null!=o&&r.util.arraysEqual(t,o)){const e=o[0],t=o[1];return`\n    float ${a}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${t}.0, ${e}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:s,keptDims:i}=r.util.squeezeShape(t),u=s;if(u.length<t.length){const t=ve(e,u),n=["row","col"];return`\n      ${ce(t)}\n      float ${a}(int row, int col) {\n        return ${a}(${ke(n,i)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));\n        ${ge(e)}\n      }\n    `;const c=o[0],l=o[1],d=be(n);if(1===l)return`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${d}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;if(1===c)return`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${d}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n  float ${a}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${t[1]} + col + ${d};\n    vec2 uv = uvFromFlat(${c}, ${l}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),o=t[1]*t[2],s=t[2],{newShape:i,keptDims:u}=r.util.squeezeShape(t),c=i;if(c.length<t.length){const t=ve(e,c),n=["row","col","depth"];return`\n        ${ce(t)}\n        float ${a}(int row, int col, int depth) {\n          return ${a}(${ke(n,u)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${o}, ${s}, 1)));\n        ${ge(e)}\n      }\n    `;const l=e.shapeInfo.texShape,d=l[0],h=l[1],p=e.shapeInfo.flatOffset;if(h===o&&null==p)return`\n        float ${a}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${s}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${d}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(h===s&&null==p)return`\n    float ${a}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${d}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;const f=be(n);return`\n      float ${a}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${o} + col * ${s} + depth + ${f};\n        vec2 uv = uvFromFlat(${d}, ${h}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(e);case 4:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),o=t[3],s=t[2]*o,i=t[1]*s,{newShape:u,keptDims:c}=r.util.squeezeShape(t);if(u.length<t.length){const t=ve(e,u),n=["row","col","depth","depth2"];return`\n      ${ce(t)}\n      float ${a}(int row, int col, int depth, int depth2) {\n        return ${a}(${ke(n,c)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${i}, ${s}, ${o}, 1)));\n        ${ge(e)}\n      }\n    `;const l=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,h=d[0],p=d[1];if(p===i&&null==l)return`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${s}, ${o}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===o&&null==l)return`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${t[1]*t[2]}, ${t[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const f=be(n);return`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${s} +\n          depth * ${o} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${p}, index + ${f});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),o=t[4],s=t[3]*o,i=t[2]*s,u=t[1]*i,{newShape:c,keptDims:l}=r.util.squeezeShape(t);if(c.length<t.length){const t=ve(e,c),n=["row","col","depth","depth2","depth3"];return`\n      ${ce(t)}\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        return ${a}(${ke(n,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${u}, ${i}, ${s}, ${o})) +\n          depth3;\n        ${ge(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],f=h[1];if(f===u&&null==d)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${s}, ${o}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===o&&null==d)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const m=be(n);return`\n    float ${a}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${u} + col * ${i} + depth * ${s} +\n          depth2 * ${o} + depth3 + ${m};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:o,keptDims:s}=r.util.squeezeShape(t);if(o.length<t.length){const t=ve(e,o),n=["row","col","depth","depth2","depth3","depth4"];return`\n      ${ce(t)}\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${a}(${ke(n,s)});\n      }\n    `}const i=t[5],u=t[4]*i,c=t[3]*u,l=t[2]*c,d=t[1]*l;if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${d}, ${l}, ${c}, ${u})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${ge(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,f=p[0],m=p[1];if(m===d&&null==h)return`\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${c}, ${u}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(m===i&&null==h)return`\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const b=be(n);return`\n    float ${a}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${d} + col * ${l} + depth * ${c} +\n          depth2 * ${u} + depth3 * ${i} + depth4 + ${b};\n      vec2 uv = uvFromFlat(${f}, ${m}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(t.length+"-D input sampling is not yet supported")}}function le(e){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=L();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e.shapeInfo.texShape,a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],o=L();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${a[0]}, ${a[1]}, index);\n      return ${o.texture2D}(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),o=e.shapeInfo.texShape,s=o[0],i=o[1],u=L();if(null!=o&&r.util.arraysEqual(t,o))return`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${s}.0);\n\n        return ${u.texture2D}(${n}, uv);\n      }\n    `;const c=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=Math.ceil(t[1]/2);return`\n    vec4 ${a}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${l}, ${c[0]}, ${c[1]}, row, col);\n      return ${u.texture2D}(${n}, uv);\n    }\n  `}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,o=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===t[0]){const n=t.slice(1),a=[1,2],o=ve(e,n),s=["b","row","col"];return`\n        ${le(o)}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${ke(s,a)});\n        }\n      `}const s=o[0],i=o[1],u=Math.ceil(t[2]/2),c=u*Math.ceil(t[1]/2),l=L();return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${s}, ${i}, ${c}, ${u}, b, row, col);\n      return ${l.texture2D}(${n}, uv);\n    }\n  `}(e);default:return function(e){const t=e.shapeInfo.logicalShape,n=t.length,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),o=e.shapeInfo.texShape,s=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],i=s[0],u=s[1],c=Math.ceil(t[n-1]/2);let l=c*Math.ceil(t[n-2]/2),d="int b, int row, int col",h=`b * ${l} + (row / 2) * ${c} + (col / 2)`;for(let e=2;e<n-1;e++)d=`int b${e}, `+d,l*=t[n-e-1],h=`b${e} * ${l} + `+h;const p=L();return`\n    vec4 ${a}(${d}) {\n      int index = ${h};\n      int texR = index / ${u};\n      int texC = index - texR * ${u};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${i});\n      return ${p.texture2D}(${r}, uv);\n    }\n  `}(e)}}const de="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",he="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",pe="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",fe="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function me(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function be(e){return"offset"+e}function ge(e){const t=e.name,n=r.util.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function xe(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function ve(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function ke(e,t){return t.map(t=>e[t]).join(", ")}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ye(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((e,n)=>{const a=e.logicalShape,o=t[n],s=o.shape;if(!r.util.arraysEqual(a,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${a} and ${s} must match`);if(e.isUniform&&o.isUniform)return;const i=e.texShape,u=o.isUniform?null:o.texData.texShape;if(!r.util.arraysEqual(i,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${u} must match`)})}var we=n(47);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:Ie,bincountImpl:Oe,bincountReduceImpl:Ce,ceilImpl:Te,concatImpl:$e,expImpl:Se,expm1Impl:Ee,floorImpl:Ne,gatherV2Impl:_e,greaterImpl:Ae,lessImpl:Re,linSpaceImpl:Fe,logImpl:je,maxImpl:De,maximumImpl:Me,minimumImpl:Pe,multiplyImpl:Be,negImpl:Le,prodImpl:We,rangeImpl:ze,rsqrtImpl:Ve,simpleAbsImpl:Ue,sliceImpl:Ge,stridedSliceImpl:He,subImpl:Ke,tileImpl:qe,topKImpl:Xe,transposeImpl:Ye,uniqueImpl:Qe}=we;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ze(e,t){return["x","y","z","w","u","v"].slice(0,t).map(t=>`${e}.${t}`)}function Je(e,t){return 1===t?[e]:Ze(e,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class et{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=Je("rc",t),r=xe(t),a=function(e,t,n){if(1===e)return"rc > "+t[0];let r="";for(let a=e-2;a<e;a++)r+=`${n[a]} >= ${t[a]}`,a<e-1&&(r+="||");return r}(t,e,n),o=function(e,t,n,r){if(1===e)return"";const a=r.slice(-2);return`\n    int r = ${a[0]};\n    int c = ${a[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}(t,e[e.length-1],e[e.length-2],n),s=function(e,t){const n=e.length,r=function(e,t){const n=[];for(let r=0;r<=1;r++)for(let a=0;a<=1;a++){let o=`${0===r?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let n=2;n<e;n++)o=t[t.length-1-n]+","+o;n.push(o)}return n}(n,t);if(1===n)return`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`;return`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(e,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${a}) {\n            setOutput(vec4(0));\n          } else {\n            ${o}\n\n            setOutput(vec4(${s}));\n          }\n        }\n      `}}}class tt{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r;
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */this.userCode=`\n      ${r=t,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${W(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${z(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${e[1]};\n        int cols = ${e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class nt{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=at(t,n),a=ot(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const o=rt(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=o,this.log();const e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}let s;return r===c.PACKED_2X2_FLOAT32?s=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===c.PACKED_2X2_FLOAT16?s=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===c.UNPACKED_FLOAT32?s=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===c.UNPACKED_FLOAT16?s=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===c.PACKED_4X1_UNSIGNED_BYTE&&(s=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(s),this.numUsedTextures++,this._numBytesAllocated+=o,this.log(),s}releaseTexture(e,t,n,a){if(null==this.freeTextures)return;const o=at(n,a),s=ot(t,o,a);s in this.freeTextures||(this.freeTextures[s]=[]);const i=rt(t,o,this.gpgpu.gl,this.gpgpu.textureConfig,a),u=Object(r.env)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==u&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const c=this.usedTextures[s],l=c.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c.splice(l,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: "+this._numBytesAllocated),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e)});for(const e in this.usedTextures)this.usedTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function rt(e,t,n,r,a){const o=function(e,t){switch(e){case c.PACKED_2X2_FLOAT32:return re(t);case c.PACKED_2X2_FLOAT16:return ae(t);case c.UNPACKED_FLOAT32:return ee(t);case c.UNPACKED_FLOAT16:return te(t);case c.PACKED_4X1_UNSIGNED_BYTE:return ne(t);default:throw new Error("Unknown physical texture type "+e)}}(t,r);let s;if(a){const[t,n]=h(e[0],e[1]);s=t*n}else{const[t,n]=l(e[0],e[1]);s=t*n}return s*function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error("Unknown internal format "+t)}(n,o)}function at(e,t){if(e===u.UPLOAD)return c.PACKED_2X2_FLOAT32;if(e===u.RENDER||null==e)return function(e){return Object(r.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?c.PACKED_2X2_FLOAT32:c.UNPACKED_FLOAT32:e?c.PACKED_2X2_FLOAT16:c.UNPACKED_FLOAT16}(t);if(e===u.DOWNLOAD||e===u.PIXELS)return c.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type "+e)}function ot(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class st{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const it="return abs(x);";const ut="return x;";class ct{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lt{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=Je("rc",t),r=xe(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),o=n.slice(-2),s=t<=1?"rc":`vec2(${o.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${s}));\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dt=r.kernel_impls.whereImpl,ht={};class pt extends r.KernelBackend{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!Object(r.env)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=s(Object(r.env)().getNumber("WEBGL_VERSION"));this.binaryCache=((t=Object(r.env)().getNumber("WEBGL_VERSION"))in ht||(ht[t]={}),ht[t]),this.gpgpu=new se(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new nt(this.gpgpu),this.numMBBeforeWarning=null==Object(r.env)().global.screen?1024:Object(r.env)().global.screen.height*Object(r.env)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new r.DataStorage(this,Object(r.engine)())}nextDataId(){return pt.nextDataId++}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(e,t,n){if((Object(r.env)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Object(r.env)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.texData.set(a,{shape:t,dtype:n,values:e,usage:u.UPLOAD,refCount:1}),a}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,a,o){if(Object(r.env)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:a,values:t,usage:u.UPLOAD,refCount:o})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:a,complexTensorInfos:o,slice:s,shape:i,isPacked:u}=t;if(null!=s){let t;t=u?new ct(i,ut):new st(i,ut);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:a}],a),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===a)return n;const c=null!=this.activeTimers;let l,d;if(c&&(l=r.util.now()),"complex64"===a){const e=this.readSync(o.real.dataId),t=this.readSync(o.imag.dataId);d=r.backend_util.mergeRealAndImagArrays(e,t)}else d=this.getValuesFromTexture(e);return c&&(this.downloadWaitMs+=r.util.now()-l),this.convertAndCacheOnCPU(e,d)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise(e=>t.push(e))}const t=this.texData.get(e),{values:n,shape:a,slice:o,dtype:s,complexTensorInfos:i,isPacked:u}=t;if(null!=o){let t;t=u?new ct(a,ut):new st(a,ut);const n=this.runWebGLProgram(t,[{dataId:e,shape:a,dtype:s}],s),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if(!Object(r.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Object(r.env)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c,l,h=null;if("complex64"!==s&&Object(r.env)().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(e);const t=this.texData.get(c.dataId);h=this.gpgpu.createBufferFromTexture(t.texture,...d(a))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),t=e[0],n=e[1];l=r.backend_util.mergeRealAndImagArrays(t,n)}else if(null==h)l=this.getValuesFromTexture(e);else{const e=r.util.sizeFromShape(a);l=this.gpgpu.downloadFloat32MatrixFromBuffer(h,e)}null!=c&&this.disposeIntermediateTensorInfo(c);const p=this.convertAndCacheOnCPU(e,l),f=this.pendingRead.get(e);return this.pendingRead.delete(e),f.forEach(e=>e(p)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Object(r.engine)().removeDataId(e,this),this.pendingDeletes--),p}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map(e=>r.util.decodeString(e))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Object(r.buffer)(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!m(n)){if(Object(r.env)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:a}=this.texData.get(e),o=r.util.sizeFromShape(t);if(Object(r.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...d(t)).subarray(0,o);return this.disposeIntermediateTensorInfo(n),a}const s=Object(r.env)().getBool("WEBGL_PACK")&&!0===a,i=s?E(t):t,u=s?new K(i):new H(i),c=this.runWebGLProgram(u,[{shape:i,dtype:n,dataId:e}],"float32"),l=this.texData.get(c.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture,l.texShape[0],l.texShape[1]).subarray(0,o);return this.disposeIntermediateTensorInfo(c),h}timerAvailable(){return Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){const t=this.activeTimers,n=[];let a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e();const o=r.util.flatten(this.activeTimers.map(e=>e.query)).filter(e=>null!=e),s=r.util.flatten(this.activeTimers.map(e=>e.name)).filter(e=>null!=e);this.activeTimers=t,a&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(o);i.kernelMs=r.util.sum(e),i.getExtraProfileInfo=()=>e.map((e,t)=>({name:s[t],ms:e})).map(e=>`${e.name}: ${e.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:r.util.now(),endMs:null}}endTimer(e){return Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=r.util.now(),e)}async getQueryTime(e){if(Object(r.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:a,isPacked:o,slice:s}=this.texData.get(e),i=s&&s.origDataId||e,u=this.dataRefCount.get(i);u>1?this.dataRefCount.set(i,u-1):(this.dataRefCount.delete(i),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,o)));const c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}getCPUBackend(){return Object(r.env)().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=Object(r.engine)().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(e,t=128){const n=this.getCPUBackend();return Object(r.env)().getBool("IS_TEST")||this.warnedAboutCPUBackend||null!=n||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&e.every(e=>null==this.texData.get(e.dataId).texture&&r.util.sizeFromShape(e.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){r.backend_util.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return dt(e.shape,t)}packedUnaryOp(e,t,n){const a=new ct(e.shape,t),o=this.compileAndRun(a,[e],n);return Object(r.engine)().makeTensorFromDataId(o.dataId,o.shape,o.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=Ue(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Object(r.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,it,e.dtype);const t=new st(e.shape,it),n=this.compileAndRun(t,[e]);return Object(r.engine)().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&r.util.isString(n[0])){const o=n.map(e=>r.util.encodeString(e));a=this.write(o,e,t)}else a=this.write(n,e,t);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:a}=this.makeTensorInfo(e,t,n);return Object(r.engine)().makeTensorFromDataId(a,e,t,this)}unpackTensor(e){const t=new lt(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new et(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[$(e.shape),...S(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[$(t),...S(t)],o=new tt(a,n),s=this.runWebGLProgram(o,[r],e.dtype,null,!0);return{dataId:s.dataId,shape:t,dtype:s.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:r,dtype:a}=t,o=E(r);let s;s=n?new G(o):new U(o);return{dtype:a,shape:r,dataId:this.runWebGLProgram(s,[{shape:o,dtype:a,dataId:e}],a,null,!0).dataId}}runWebGLProgram(e,t,n,a,o=!1){const s=this.makeTensorInfo(e.outputShape,n),u=this.texData.get(s.dataId);if(e.packedOutput&&(u.isPacked=!0),e.outPackingScheme===i.DENSE){const t=d(e.outputShape);u.texShape=t.map(e=>2*e)}if(null!=e.outTexUsage&&(u.usage=e.outTexUsage),0===r.util.sizeFromShape(s.shape))return u.values=r.util.getTypedArrayFromDType(s.dtype,0),s;const c=[],l=t.map(t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&r.util.sizeFromShape(t.shape)<=Object(r.env)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),c.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!_(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),c.push(t),n=this.texData.get(t.dataId),e.shape=r}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}});this.uploadToGPU(s.dataId);const h={shape:s.shape,texData:u,isUniform:!1},p=function(e,t,n){let r="";t.concat(n).forEach(e=>{const t=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0,n=e.isUniform?"uniform":e.texData.texShape;r+=`${e.shape}_${n}_${t}`});const a=e.userCode;let o=e.constructor.name;return o+="_"+r+"_"+a,o}(e,l,h),f=this.getAndSaveBinary(p,()=>function(e,t,n,a){const o=t.userCode,s=n.map((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}}),i=s.map(e=>e.shapeInfo),u={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},c=ue(s,u,o,t.packedInputs),l=e.createProgram(c);let d=null;const h=e.getUniformLocation(l,"NAN",!1);1===Object(r.env)().getNumber("WEBGL_VERSION")&&(d=e.getUniformLocation(l,"INFINITY",!1));const p={};for(let n=0;n<t.variableNames.length;n++){const r=t.variableNames[n],a=!1;p[r]=e.getUniformLocation(l,r,a),p["offset"+r]=e.getUniformLocation(l,"offset"+r,a)}return{program:t,source:c,webGLProgram:l,uniformLocations:p,inShapeInfos:i,outShapeInfo:u,infLoc:d,nanLoc:h}}(this.gpgpu,e,l,h)),m=null!=this.activeTimers;let b;m&&(b=this.startTimer()),function(e,t,n,a,o){ye(t.inShapeInfos,n),ye([t.outShapeInfo],[a]);const s=a.texData.texture,i=a.texData.texShape;a.texData.isPacked?e.setOutputPackedMatrixTexture(s,i[0],i[1]):e.setOutputMatrixTexture(s,i[0],i[1]),e.setProgram(t.webGLProgram),1===Object(r.env)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach((n,a)=>{const o=t.program.variableNames[a],s=t.uniformLocations[o],i=t.uniformLocations["offset"+o];if(null!=s)if(n.isUniform)if(r.util.sizeFromShape(n.shape)<2)e.gl.uniform1f(s,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,s,a)}),null!=o&&o(e,t.webGLProgram),e.executeProgram()}(this.gpgpu,f,l,h,a),c.forEach(e=>this.disposeIntermediateTensorInfo(e)),m&&(b=this.endTimer(b),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(b)}));const g=Object(r.env)().get("WEBGL_FLUSH_THRESHOLD");if(g>0){const e=r.util.now();e-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Object(r.env)().getBool("WEBGL_LAZILY_UNPACK")&&u.isPacked&&!1===o){const e=this.unpackTensor(s);return this.disposeIntermediateTensorInfo(s),e}return s}compileAndRun(e,t,n,r,a=!1){n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!Object(r.env)().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})}this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Object(r.tidy)(()=>{if(!Object(r.env)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Object(r.env)().getBool("DEBUG");Object(r.env)().set("DEBUG",!1);const t=this.abs(Object(r.scalar)(1e-8)).dataSync()[0];if(Object(r.env)().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:a,values:o,texture:s,usage:i,isPacked:c}=t;if(null!=s)return;const l=null!=this.activeTimers;let d;l&&(d=r.util.now());let p=t.texShape;if(null==p&&(p=function(e,t=!1){let n=Object(r.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map((t,n)=>n>=e.length-2?r.util.nearestLargerEven(e[n]):e[n])).length&&(e=[2,e[0]])),2!==e.length){const t=r.util.squeezeShape(e);e=t.newShape}let a=r.util.sizeFromShape(e);if(e.length<=1&&a<=n)return[1,a];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=$(e);let n=2,o=2;return e.length&&([n,o]=S(e)),a=t*(n/2)*(o/2),r.util.sizeToSquarishShape(a).map(e=>2*e)}return r.util.sizeToSquarishShape(a)}(n,c),t.texShape=p),null!=o){const e=E(n);let s,i=p[1],f=p[0];const m=o instanceof Uint8Array;c?([i,f]=h(p[0],p[1]),s=new X(e,[f,i],m)):s=new q(e,[f,i],m);const b=this.makeTensorInfo([f,i],a);this.texData.get(b.dataId).usage=m?u.PIXELS:u.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(b.dataId),i,f,o);const g=!0,x=this.runWebGLProgram(s,[b],a,null,g),v=this.texData.get(x.dataId);t.texture=v.texture,t.texShape=v.texShape,t.isPacked=v.isPacked,t.usage=v.usage,this.disposeIntermediateTensorInfo(b),this.texData.delete(x.dataId),t.values=null,l&&(this.uploadWaitMs+=r.util.now()-d)}else{const e=this.acquireTexture(p,i,a,c);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error("Unknown dtype "+t)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*r.util.bytesPerElement(t)}}pt.nextDataId=0,
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
r.device_util.isBrowser()&&Object(r.registerBackend)("webgl",()=>new pt,2);class ft{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=r.backend_util.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mt{constructor(e,t,n,a=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r.backend_util.assertAndGetBroadcastShape(t,n);const o=this.outputShape.length;let s="";if(a)if(0===o||1===r.util.sizeFromShape(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(s=`\n          ${xe(o)} coords = getOutputCoords();\n        `,1===o)s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=Je("coords",o);s+=`\n            bool nextRowOutOfBounds =\n              (${e[o-2]} + 1) >= ${this.outputShape[o-2]};\n            bool nextColOutOfBounds =\n              (${e[o-1]} + 1) >= ${this.outputShape[o-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bt(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const gt={kernelName:r.Identity,backendName:"webgl",kernelFunc:bt};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xt(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,o=n.makeTensorInfo(r.shape,"complex64"),s=n.texData.get(o.dataId),i=bt({inputs:{x:r},backend:n}),u=bt({inputs:{x:a},backend:n});return s.complexTensorInfos={real:i,imag:u},o}const vt={kernelName:r.Complex,backendName:"webgl",kernelFunc:xt},kt="return (a < 0.) ? b * a : a;",yt="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wt={kernelName:r.LeakyRelu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{alpha:s}=a,i=n.makeTensorInfo([],"float32",r.util.createScalarValue(s,"float32")),u=Object(r.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new mt(yt,o.shape,i.shape):new ft(kt,o.shape,i.shape),c=n.runWebGLProgram(u,[o,i],o.dtype);return n.disposeIntermediateTensorInfo(i),c}},It="return (a < 0.) ? b * a : a;",Ot="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ct={kernelName:r.Prelu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a,alpha:o}=t,s=Object(r.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new mt(Ot,a.shape,o.shape):new ft(It,a.shape,o.shape);return n.runWebGLProgram(s,[a,o],a.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tt({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:a}){return({inputs:o,backend:s})=>{const{x:i}=o,u=s,c=a||i.dtype;if(u.shouldExecuteOnCPU([i])&&null!=n){const e=u.texData.get(i.dataId),t=n(e.values,c);return u.makeTensorInfo(i.shape,c,t)}let l;return l=Object(r.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new ct(i.shape,t):new st(i.shape,e),u.runWebGLProgram(l,[i],c)}}function $t({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:a=!1,cpuKernelImpl:o,dtype:s}){return({inputs:i,backend:u})=>{const{a:c,b:l}=i,d=u;if(a&&"complex64"===c.dtype){const t=d.texData.get(c.dataId),n=d.texData.get(l.dataId),[a,o]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map(t=>{const[n,a]=t,o={dataId:n.dataId,dtype:n.dtype,shape:c.shape},s={dataId:a.dataId,dtype:a.dtype,shape:l.shape},i=new ft(e,c.shape,l.shape);return d.runWebGLProgram(i,[o,s],Object(r.upcastType)(n.dtype,a.dtype))}),s=xt({inputs:{real:a,imag:o},backend:d});return d.disposeIntermediateTensorInfo(a),d.disposeIntermediateTensorInfo(o),s}const h=s||Object(r.upcastType)(c.dtype,l.dtype);if(d.shouldExecuteOnCPU([c,l])&&null!=o){const e=d.texData.get(c.dataId),t=d.texData.get(l.dataId),[n,r]=o(c.shape,l.shape,e.values,t.values,h),a=d.makeTensorInfo(r,h);return d.texData.get(a.dataId).values=n,a}let p;return p=Object(r.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new mt(t,c.shape,l.shape,n):new ft(e,c.shape,l.shape),d.runWebGLProgram(p,[c,l],h)}}function St(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?Ot:It;if("leakyrelu"===e)return t?yt:kt;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Et{constructor(e,t,n,r=!1,a=!1,o=!1,s=null,i=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const c=r?e[1]:e[2],l=Math.ceil(c/2),d=r?"i * 2, rc.y":"rc.y, i * 2",h=a?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",b="";s&&(m=i?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${s}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${s}\n        }`:`vec4 activation(vec4 x) {\n          ${s}\n        }`,b="result = activation(result);");const g=o?"result += getBiasAtOutCoords();":"";o&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let x="rc.x",v="rc.x";e[0]<t[0]?x=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(v=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n\n      const float sharedDimension = ${l}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${l}; i++) {\n          int batchA = ${x};\n          int batchB = ${v};\n          vec4 a = getMatrixA(batchA, ${d});\n          vec4 b = getMatrixB(batchB, ${h});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${g}\n\n        ${b}\n\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nt="return areal * breal - aimag * bimag;",_t="return areal * bimag + aimag * breal;";class At{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=r.backend_util.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rt="return a * b;";function Ft(e){const{inputs:t,backend:n}=e,{a:a,b:o}=t,s=r.backend_util.upcastType(a.dtype,o.dtype);if("complex64"===a.dtype){const e=n.texData.get(a.dataId),t=n.texData.get(o.dataId),r=new At(Nt,a.shape,o.shape),s=new At(_t,a.shape,o.shape),i=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:o.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:o.shape}],u=n.runWebGLProgram(r,i,"float32"),c=n.runWebGLProgram(s,i,"float32"),l=xt({inputs:{real:u,imag:c},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),l}if(n.shouldExecuteOnCPU([a,o])){const e=n.texData.get(a.dataId),t=n.texData.get(o.dataId),[r,i]=Be(a.shape,o.shape,e.values,t.values,s),u=n.makeTensorInfo(i,s);return n.texData.get(u.dataId).values=r,u}let i;return i=Object(r.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new mt(Rt,a.shape,o.shape):new ft(Rt,a.shape,o.shape),n.runWebGLProgram(i,[a,o],s)}const jt={kernelName:r.Multiply,backendName:"webgl",kernelFunc:Ft};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Dt(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{shape:s}=a,i=n,u=r.util.sizeFromShape(o.shape),c=r.util.inferFromImplicitShape(s,u),l=r.util.sizeFromShape(c);r.util.assert(u===l,()=>`The new shape (${c}) has ${l} elements and the old shape (${o.shape}) has ${u} elements. The new shape and old shape must have the same number of elements.`);const d=i.texData.get(o.dataId);return!d.isPacked||_(o.shape,c)||null!==d.texture&&_(d.shape,c)?(i.incRef(o.dataId),{dataId:o.dataId,shape:c,dtype:o.dtype}):function(e,t,n){const r=[$(e.shape),...S(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},o=[$(t),...S(t)],s=new tt(o,r),i=n.runWebGLProgram(s,[a],e.dtype,null,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}(o,c,i)}const Mt={kernelName:r.Reshape,backendName:"webgl",kernelFunc:Dt};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pt{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:o,outSize:s}=e;this.outputShape=[a,s];const i=4*Math.floor(n/4),u=n%4;let c="sumValue += dot(values, ones);";if(null!=t){const e=1/t;c=`sumValue += dot(values * ${r.util.isInt(e)?e.toPrecision(2):e}, ones);`}let l="";o%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${o}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${c}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===u}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${c}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${c}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${c}\n        }\n        setOutput(sumValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bt{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:o}=e;this.outputShape=[r,o];let s="0.0",i="";"prod"===t?s="1.0":"min"===t?(s="1.0 / 1e-20",i="min"):"max"===t&&(s="-1.0 / 1e-20",i="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const c=4*Math.floor(n/4),l=n%4;let d=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${i}(values, minMaxValue);\n      }\n    `,h="vec4";"all"===t?(s="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",h="bvec4"):"any"===t&&(s="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",h="bvec4");let p="";a%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${s};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${s});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${c}; i += 4) {\n          int inIdx = inOffset + i;\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${c};\n        if (${1===l}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${2===l}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${3===l}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${d}\n        }\n        setOutput(${u});\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lt(e,t,n,a){const o=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],a=r.backend_util.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:a,outSize:Math.ceil(n/a)})}return t}(e.shape);let s=e;for(let r=0;r<o.length;r++){const{inSize:i,windowSize:u,outSize:c}=o[r];let l,d;l="mean"===n?0===r?new Pt({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:c},i):new Pt({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:c}):new Bt({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:c},n),d=s,s=a.runWebGLProgram(l,[s],t),d.dataId!==e.dataId&&a.disposeIntermediateTensorInfo(d)}return s}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wt{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=xe(this.rank),a=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}class zt{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=xe(this.rank),a=Ze("rc",this.rank),o=new Array(this.rank);for(let e=0;e<t.length;e++)o[t[e]]=a[e];const s=`vec2(${o.slice(-2).join()})`,i=`++${a[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${o.join()}), ${s})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${i}) {\n        result[1] = ${u};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${i}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vt(e,t,n){const a=Object(r.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new zt(e.shape,t):new Wt(e.shape,t);return n.runWebGLProgram(a,[e],e.dtype)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ut(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{axis:s,keepDims:i}=a;return function(e,t,n,a){const o=t,s=e.shape.length,i=r.util.parseAxisParam(o,e.shape);let u=i;const c=r.backend_util.getAxesPermutation(u,s),l=null!=c;let d=e;l&&(d=Vt(e,c,a),u=r.backend_util.getInnerMostAxes(u.length,s)),r.backend_util.assertAxesAreInnerMostDims("sum",u,s);const[h,p]=r.backend_util.computeOutAndReduceShapes(d.shape,u);let f=h;n&&(f=r.backend_util.expandShapeToKeepDim(h,i));const m=r.util.sizeFromShape(p),b=Dt({inputs:{x:d},attrs:{shape:[r.util.sizeFromShape(e.shape)/m,m]},backend:a}),g=Lt(b,Object(r.sumOutType)(e.dtype),"sum",a),x=Dt({inputs:{x:g},attrs:{shape:f},backend:a});return a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(g),l&&a.disposeIntermediateTensorInfo(d),x}(o,s,i,n)}const Gt={kernelName:r.Sum,backendName:"webgl",kernelFunc:Ut};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ht(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:o}=r,s=n,i=a.shape.length,u=new Array(i);for(let e=0;e<u.length;e++)u[e]=a.shape[o[e]];let c;if(s.shouldExecuteOnCPU([a])){const e=s.texData.get(a.dataId).values,t=Ye(e,a.shape,a.dtype,o,u);c=s.makeTensorInfo(u,a.dtype);s.texData.get(c.dataId).values=t}else c=Vt(a,o,s);return c}const Kt={kernelName:r.Transpose,backendName:"webgl",kernelFunc:Ht};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qt({a:e,b:t,transposeA:n,transposeB:a,backend:o,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:u=0,activation:c=null}){const l=e.shape.length,d=t.shape.length,h=n?e.shape[l-2]:e.shape[l-1],p=a?t.shape[d-1]:t.shape[d-2],f=n?e.shape[l-1]:e.shape[l-2],m=a?t.shape[d-2]:t.shape[d-1],b=e.shape.slice(0,-2),g=t.shape.slice(0,-2),x=r.util.sizeFromShape(b),v=r.util.sizeFromShape(g),k=x===v||1===x||1===v;r.util.assert(l>=2&&d>=2&&k,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${b}) and (${g}).`);const y=(x>v?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([f,m]);r.util.assert(h===p,()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${a} must match.`);const w=n?[x,h,f]:[x,f,h],I=a?[v,m,p]:[v,p,m],O=Dt({inputs:{x:e},backend:o,attrs:{shape:w}}),C=Dt({inputs:{x:t},backend:o,attrs:{shape:I}}),T=[O,C],$=Math.max(x,v),S=n?O.shape[1]:O.shape[2],E=null!=s,N=null!=i,_="leakyrelu"===c,A=null!=c?St(c,!0):null;let R;if((1===f||1===m)&&S>1e3&&!1===(E||N||_||null!=A)){let e=O,t=C;n&&(e=Ht({inputs:{x:O},backend:o,attrs:{perm:[0,2,1]}}),T.push(e)),a&&(t=Ht({inputs:{x:C},backend:o,attrs:{perm:[0,2,1]}}),T.push(t));const r=1===m;let s=e;1!==m&&(s=Dt({inputs:{x:e},backend:o,attrs:{shape:[$,S,1]}}),T.push(s));const i=1===m?2:1;let u=t;r&&(u=Dt({inputs:{x:t},backend:o,attrs:{shape:[$,1,S]}}),T.push(u));const c=Ft({inputs:{a:s,b:u},backend:o});R=Ut({inputs:{x:c},backend:o,attrs:{axis:i,keepDims:!0}}),T.push(c)}else{const c=Object(r.upcastType)(e.dtype,t.dtype),l=new Et(w,I,[$,f,m],n,a,E,A,N,_),d=[O,C];if(null!=s&&d.push(s),N&&d.push(i),_){const e=o.makeTensorInfo([],"float32",r.util.createScalarValue(u,"float32"));d.push(e),T.push(e)}R=o.runWebGLProgram(l,d,c)}const F=Dt({inputs:{x:R},backend:o,attrs:{shape:y}});T.push(R);for(const e of T)o.disposeIntermediateTensorInfo(e);return F}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xt={kernelName:r._FusedMatMul,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:o,bias:s,preluActivationWeights:i}=t,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=r;return qt({a:a,b:o,transposeA:u,transposeB:c,backend:n,bias:s,preluActivationWeights:i,leakyreluAlpha:d,activation:l})}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yt={kernelName:r.Abs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){const e=n.texData.get(a.dataId),t=Ue(e.values);return n.makeTensorInfo(a.shape,a.dtype,t)}let o;return o=Object(r.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new ct(a.shape,"return abs(x);"):new st(a.shape,"return abs(x);"),n.runWebGLProgram(o,[a],a.dtype)}},Qt=Tt({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),Zt={kernelName:r.Acos,backendName:"webgl",kernelFunc:Qt},Jt=Tt({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),en={kernelName:r.Acosh,backendName:"webgl",kernelFunc:Jt},tn="return a + b;",nn=$t({opSnippet:tn,packedOpSnippet:tn,supportsComplex:!0,cpuKernelImpl:Ie}),rn={kernelName:r.Add,backendName:"webgl",kernelFunc:nn};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class an{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((e,t)=>"T"+t);const n=[];this.variableNames.forEach(e=>{n.push(`float v${e} = get${e}AtOutCoords();`)});const r=this.variableNames.map(e=>"v"+e).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class on{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((e,t)=>"T"+t);const n=[];this.variableNames.forEach(e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)});const r=this.variableNames.map(e=>"v"+e).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sn={kernelName:r.AddN,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,o=n;if(1===o.length)return bt({inputs:{x:o[0]},backend:a});if(o.length>Object(r.env)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(o.length/2),n=e({inputs:o.slice(0,t),backend:a}),r=e({inputs:o.slice(t),backend:a});return e({inputs:[n,r],backend:a})}const s=o.map(e=>e.dtype).reduce((e,t)=>Object(r.upcastType)(e,t)),i=o.map(e=>e.shape),u=Object(r.env)().getBool("WEBGL_PACK")?new on(o[0].shape,i):new an(o[0].shape,i);return a.runWebGLProgram(u,o,s)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const un={kernelName:r.All,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{axis:s,keepDims:i}=a,u=o.shape.length,c=r.util.parseAxisParam(s,o.shape);let l=c;const d=r.backend_util.getAxesPermutation(l,u);let h=o;null!=d&&(h=Ht({inputs:{x:o},backend:n,attrs:{perm:d}}),l=r.backend_util.getInnerMostAxes(l.length,u)),r.backend_util.assertAxesAreInnerMostDims("all",l,u);const[p,f]=r.backend_util.computeOutAndReduceShapes(h.shape,l),m=Dt({inputs:{x:h},backend:n,attrs:{shape:[-1,r.util.sizeFromShape(f)]}}),b=Lt(m,m.dtype,"all",n);let g;if(i){g=Dt({inputs:{x:b},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(p,c)}})}else g=Dt({inputs:{x:b},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),null!=d&&n.disposeIntermediateTensorInfo(h),g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cn={kernelName:r.Any,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{axis:s,keepDims:i}=a,u=o.shape.length,c=r.util.parseAxisParam(s,o.shape);let l=c;const d=r.backend_util.getAxesPermutation(l,u);let h=o;null!=d&&(h=Ht({inputs:{x:o},backend:n,attrs:{perm:d}}),l=r.backend_util.getInnerMostAxes(l.length,u)),r.backend_util.assertAxesAreInnerMostDims("any",l,u);const[p,f]=r.backend_util.computeOutAndReduceShapes(h.shape,l),m=Dt({inputs:{x:h},backend:n,attrs:{shape:[-1,r.util.sizeFromShape(f)]}}),b=Lt(m,m.dtype,"any",n);let g;if(i){g=Dt({inputs:{x:b},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(p,c)}})}else g=Dt({inputs:{x:b},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),null!=d&&n.disposeIntermediateTensorInfo(h),g}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ln{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:o}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,o];const s="max"===t?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${i};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${s} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dn{constructor(e,t,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,r.util.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);const o=e[e.length-1],s=Math.ceil(o/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),a||this.variableNames.push("bestIndicesA");const i=this.outputShape,u=i.length,c=xe(u),l=Je("coords",u);let d,h;if(1===s){h=u+1;const e=xe(h);d=`\n        ${e} sourceLocR = ${e}(${l.join()}, 0);\n        ++${l[u-1]};\n        ${e} sourceLocG = ${e}(${l.join()}, 0);\n        ++${l[u-2]};\n        ${e} sourceLocA = ${e}(${l.join()}, 0);\n        --${l[u-1]};\n        ${e} sourceLocB = ${e}(${l.join()}, 0);\n        --${l[u-2]};`}else h=u,d=`\n        ${c} sourceLocR = coords;\n        ++${l[u-1]};\n        ${c} sourceLocG = coords;\n        ++${l[u-2]};\n        ${c} sourceLocA = coords;\n        --${l[u-1]};\n        ${c} sourceLocB = coords;\n        --${l[u-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),f="."+p[h-1],m=p.map(e=>"int "+e),b=Je("sourceLocR",h-1).concat("inIdx.r"),g=Je("sourceLocG",h-1).concat("inIdx.g"),x=Je("sourceLocB",h-1).concat("inIdx.b"),v=Je("sourceLocA",h-1).concat("inIdx.a"),k="max"===n?"greaterThan":"lessThan",y=a?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${x.join()}),\n                             getBestIndicesAChannel(${v.join()})));`,w=`vec4(\n            getAChannel(${b.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${x.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${v.join()}) : 0.)`,I=a?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${I}\n      void main() {\n        ${c} coords = getOutputCoords();\n        bool hasNextCol = ${l[u-1]} < ${i[u-1]-1};\n        bool hasNextRow = ${l[u-2]} < ${i[u-2]-1};\n        ${d}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${w};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${y}\n          vec4 candidate = ${w};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${k}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hn(e,t,n,a){const o=[n];if(r.backend_util.assertAxesAreInnerMostDims("arg"+a.charAt(0).toUpperCase()+a.slice(1),o,t.shape.length),!Object(r.env)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],[s,i]=r.backend_util.computeOutAndReduceShapes(t.shape,o),u=r.util.sizeFromShape(i),c=Dt({inputs:{x:t},backend:e,attrs:{shape:[-1,u]}});n.push(c);const l=function e(t,n,a,o=null){let s=n.shape[0],i=n.shape[1];null!=o&&(s=o.shape[0],i=o.shape[1]);const u=r.backend_util.computeOptimalWindowSize(i),c={windowSize:u,inSize:i,batchSize:s,outSize:Math.ceil(i/u)},l=new ln(c,a,null==o),d=[n];null!=o&&d.push(o);const h=t.runWebGLProgram(l,d,"int32");if(1===h.shape[1])return h;const p=e(t,n,a,h);return t.disposeIntermediateTensorInfo(h),p}(e,c,a);n.push(l);const d=Dt({inputs:{x:l},backend:e,attrs:{shape:s}});return n.forEach(t=>e.disposeIntermediateTensorInfo(t)),d}return function e(t,n,a,o=null){const s=null!=o?o.shape:n.shape,i=s[s.length-1],u=r.backend_util.computeOptimalWindowSize(i),c=new dn(s,u,a,null==o),l=null==o?[n]:[n,o],d=t.runWebGLProgram(c,l,"int32");if(d.shape.length===n.shape.length){const r=e(t,n,a,d);return t.disposeIntermediateTensorInfo(d),r}return d}(e,t,a)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pn={kernelName:r.ArgMax,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{axis:s}=a;let i=r.util.parseAxisParam(s,o.shape);const u=r.backend_util.getAxesPermutation(i,o.shape.length);let c=o;const l=[];null!=u&&(c=Ht({inputs:{x:o},backend:n,attrs:{perm:u}}),l.push(c),i=r.backend_util.getInnerMostAxes(i.length,c.shape.length)),r.backend_util.assertAxesAreInnerMostDims("argMax",[i[0]],c.shape.length);const d=hn(n,c,i[0],"max");return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),d}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fn={kernelName:r.ArgMin,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{axis:s}=a;let i=r.util.parseAxisParam(s,o.shape);const u=r.backend_util.getAxesPermutation(i,o.shape.length);let c=o;const l=[];null!=u&&(c=Ht({inputs:{x:o},backend:n,attrs:{perm:u}}),l.push(c),i=r.backend_util.getInnerMostAxes(i.length,c.shape.length)),r.backend_util.assertAxesAreInnerMostDims("argMin",[i[0]],c.shape.length);const d=hn(n,c,i[0],"min");return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),d}},mn=Tt({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),bn={kernelName:r.Asin,backendName:"webgl",kernelFunc:mn},gn=Tt({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),xn={kernelName:r.Asinh,backendName:"webgl",kernelFunc:gn},vn=Tt({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),kn={kernelName:r.Atan,backendName:"webgl",kernelFunc:vn},yn=$t({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),wn={kernelName:r.Atan2,backendName:"webgl",kernelFunc:yn},In=Tt({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),On={kernelName:r.Atanh,backendName:"webgl",kernelFunc:In};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Cn{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const o=e.filterWidth,s=e.strideHeight,i=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,l=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,b=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let g="0.0";if(f||(g="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${s}, ${i});\n        const ivec2 pads = ivec2(${h}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${l};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d};\n                wC += ${c}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:b:`wR * ${d} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / count");const v=4*Math.floor(o/4),k=o%4,y=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${i});\n      const ivec2 pads = ivec2(${h}, ${p});\n      const float initializationValue = ${g};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${g});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${l};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${v}; wC += 4) {\n            int xC = xCCorner + wC * ${c};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              getValue(batch, xR, xC + 3 * ${c}, d)\n            );\n\n            ${y}\n          }\n\n          int xC = xCCorner + ${v};\n          if (${1===k}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${y}\n          } else if (${2===k}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${y}\n          } else if (${3===k}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              initializationValue\n            );\n\n            ${y}\n          }\n        }\n        setOutput(${x});\n      }\n    `}}class Tn{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const o=e.filterWidth,s=e.strideDepth,i=e.strideHeight,u=e.strideWidth,c=e.dilationDepth,l=e.dilationHeight,d=e.dilationWidth,h=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,b=e.padInfo.top,g=e.padInfo.left;this.outputShape=e.outShape;const x="avg"===t;let v="0.0";if(x||(v="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${s}, ${i}, ${u});\n        const ivec3 pads = ivec3(${m}, ${b}, ${g});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${h};\n              wD += ${c}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${l}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${d}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let k=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(k="avgValue / count");const y=4*Math.floor(o/4),w=o%4,I=`\n      if (${x}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${s}, ${i}, ${u});\n      const ivec3 pads = ivec3(${m}, ${b}, ${g});\n      const float initializationValue = ${v};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${v});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${h};\n            wD += ${c}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${y}; wC += 4) {\n              int xC = xCCorner + wC * ${d};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${d}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${y};\n            if (${1===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${k});\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $n={kernelName:r.AvgPool,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t;P(o,"avgPool");const{filterSize:s,strides:i,pad:u,dimRoundingMode:c}=a;r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(i,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const l=r.backend_util.computePool2DInfo(o.shape,s,i,1,u,c);if(1===l.filterWidth&&1===l.filterHeight&&r.util.arraysEqual(l.inShape,l.outShape))return bt({inputs:{x:o},backend:n});const d=new Cn(l,"avg",!1);return n.runWebGLProgram(d,[o],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sn={kernelName:r.AvgPool3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{filterSize:s,strides:i,pad:u,dimRoundingMode:c,dataFormat:l}=a,d=r.backend_util.computePool3DInfo(o.shape,s,i,[1,1,1],u,c,l),h=new Tn(d,"avg",!1);return n.runWebGLProgram(h,[o],"float32")}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class En{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,o=e.dilationHeight,s=e.dilationWidth,i=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=i-1-e.padInfo.top,l=u-1-e.padInfo.left,d=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${c}, ${l});\n      const float avgMultiplier = float(${d});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${i};\n            wR += ${o}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${s}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Nn{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,o=e.strideHeight,s=e.strideWidth,i=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,l=e.effectiveFilterDepth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=l-1-e.padInfo.front,f=d-1-e.padInfo.top,m=h-1-e.padInfo.left,b=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${b});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${l};\n            wD += ${i}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${d};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${o}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${h};\n                wC += ${c}) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _n={kernelName:r.AvgPool3DGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:o,input:s}=t,i=s,{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=a,h=r.backend_util.computePool3DInfo(i.shape,u,c,[1,1,1],l,d),p=new Nn(h);return n.runWebGLProgram(p,[o],i.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const An={kernelName:r.AvgPoolGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:o,input:s}=t,i=s;P([o,s],"avgPoolGrad");const{filterSize:u,strides:c,pad:l}=a,d=r.backend_util.computePool2DInfo(i.shape,u,c,1,l),h=new En(d);return n.runWebGLProgram(h,[o],i.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rn={kernelName:r.BatchMatMul,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:o}=t,{transposeA:s,transposeB:i}=r;return qt({a:a,b:o,transposeA:s,transposeB:i,backend:n})}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fn{constructor(e,t,n,a,o,s){this.outputShape=[],this.variableNames=["x","mean","variance"],r.backend_util.assertAndGetBroadcastShape(e,t),r.backend_util.assertAndGetBroadcastShape(e,n);let i="0.0";null!=a&&(r.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="1.0";null!=o&&(r.backend_util.assertAndGetBroadcastShape(e,o),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${u};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jn{constructor(e,t,n,a,o,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],r.backend_util.assertAndGetBroadcastShape(e,t),r.backend_util.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=a&&(r.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="vec4(1.0)";null!=o&&(r.backend_util.assertAndGetBroadcastShape(e,o),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${u};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dn={kernelName:r.FusedBatchNorm,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,mean:o,variance:s,offset:i,scale:u}=e;r.util.assert(o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),r.util.assert(null==i||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),r.util.assert(null==u||o.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:c}=n;null==c&&(c=.001);const l=[a,o,s];let d=null;null!=i&&(d=i.shape,l.push(i));let h=null;null!=u&&(h=u.shape,l.push(u));const p=Object(r.env)().getBool("WEBGL_PACK_NORMALIZATION")?new jn(a.shape,o.shape,s.shape,d,h,c):new Fn(a.shape,o.shape,s.shape,d,h,c);return t.runWebGLProgram(p,l,l[0].dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Mn{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=xe(this.rank),n=`uniform int start[${this.rank}];`,r=function(e){if(1===e)return"sourceLoc";if(e<=6)return Pn.slice(0,e).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(this.rank);let a;a=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map((e,t)=>`sourceLoc.${Pn[t]} = start[${t}] + coords.${Pn[t]};`).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${a}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}const Pn=["x","y","z","w","u","v"];class Bn{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;const t=xe(this.rank),n=Je("coords",this.rank),r=Je("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,o=`getChannel(getSource(${r.join()}), ${a})`,s=`\n      result.x = ${o};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${o};\n        --${r[this.rank-1]};\n      }\n    `,i=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${o};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${o};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map((e,t)=>`start[${t}]`).join()});`:e.map((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${s}\n        ${i}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ln(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{begin:s,size:i}=a,[u,c]=r.slice_util.parseSliceParams(o,s,i);if(r.slice_util.assertParamsValid(o,u,c),0===r.util.sizeFromShape(c))return n.makeTensorInfo(c,o.dtype,[]);if(n.shouldExecuteOnCPU([o])||"string"===o.dtype){const e=n.texData.get(o.dataId),t=Ge(e.values,u,c,o.shape,o.dtype);return n.makeTensorInfo(c,o.dtype,t)}const{isPacked:l}=n.texData.get(o.dataId),d=r.slice_util.isSliceContinous(o.shape,u,c);if(l||!d){const e=Object(r.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Bn(c):new Mn(c),t=e.getCustomSetupFunc(u);return n.runWebGLProgram(e,[o],o.dtype,t)}return n.uploadToGPU(o.dataId),function(e,t,n,a){const o=a.texData.get(e.dataId),s=a.makeTensorInfo(n,e.dtype),i=a.texData.get(s.dataId);Object.assign(i,o),i.refCount=1,i.shape=n,i.dtype=e.dtype;let u=r.slice_util.computeFlatOffset(t,r.util.computeStrides(e.shape));o.slice&&(u+=o.slice.flatOffset),i.slice={flatOffset:u,origDataId:o.slice&&o.slice.origDataId||e.dataId};const c=a.dataRefCount.get(i.slice.origDataId)||1;return a.dataRefCount.set(i.slice.origDataId,c+1),s}(o,u,c,n)}const Wn={kernelName:r.Slice,backendName:"webgl",kernelFunc:Ln},zn={kernelName:r.BatchToSpaceND,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{blockShape:s,crops:i}=a;r.util.assert(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const u=s.reduce((e,t)=>e*t),c=r.backend_util.getReshaped(o.shape,s,u),l=r.backend_util.getPermuted(c.length,s.length),d=r.backend_util.getReshapedPermuted(o.shape,s,u),h=r.backend_util.getSliceBeginCoords(i,s.length),p=r.backend_util.getSliceSize(d,i,s.length),f=[],m=Dt({inputs:{x:o},backend:n,attrs:{shape:c}}),b=Ht({inputs:{x:m},backend:n,attrs:{perm:l}}),g=Dt({inputs:{x:b},backend:n,attrs:{shape:d}}),x=Ln({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return f.push(m),f.push(b),f.push(g),f.forEach(e=>n.disposeIntermediateTensorInfo(e)),x}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vn={kernelName:r.Bincount,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:o}=t,{size:s}=r,i=n.readSync(a.dataId),u=n.readSync(o.dataId),c=Oe(i,u,o.dtype,o.shape,s);return n.makeTensorInfo([s],o.dtype,c)}},Un=$t({opSnippet:"return float(a != b);",dtype:"bool"}),Gn={kernelName:r.NotEqual,backendName:"webgl",kernelFunc:Un};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Hn(e){const{inputs:t,backend:n}=e,{input:r}=t;return bt({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const Kn={kernelName:r.Real,backendName:"webgl",kernelFunc:Hn};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qn={kernelName:r.Cast,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function e(t){const{inputs:n,backend:a,attrs:o}=t,{x:s}=n,{dtype:i}=o;if("complex64"===i){if("complex64"===s.dtype)return bt({inputs:{x:s},backend:a});const t=r.zeros(s.shape),n=e({inputs:{x:s},backend:a,attrs:{dtype:"float32"}}),o=xt({inputs:{real:n,imag:t},backend:a});return t.dispose(),a.disposeIntermediateTensorInfo(n),o}if("complex64"===s.dtype){const t=Hn({inputs:{input:s},backend:a}),n=e({inputs:{x:t},backend:a,attrs:{dtype:i}});return a.disposeIntermediateTensorInfo(t),n}if(!r.util.hasEncodingLoss(s.dtype,i)){const e=bt({inputs:{x:s},backend:a});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){const n=new st(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,a);if("bool"===i){const e=a.makeTensorInfo([],"bool",r.util.getTypedArrayFromDType("bool",1)),t=Un({inputs:{a:s,b:e},backend:a});return a.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}},Xn="return ceil(x);",Yn=Tt({opSnippet:Xn,packedOpSnippet:Xn,cpuKernelImpl:Te}),Qn={kernelName:r.Ceil,backendName:"webgl",kernelFunc:Yn};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Zn{constructor(e){this.variableNames=["A"],this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jn{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const er={kernelName:r.ClipByValue,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{clipValueMin:s,clipValueMax:i}=a;let u;u=Object(r.env)().getBool("WEBGL_PACK_CLIP")?new Jn(o.shape):new Zn(o.shape);const c=u.getCustomSetupFunc(s,i);return n.runWebGLProgram(u,[o],o.dtype,c)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tr{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nr(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const rr={kernelName:r.ComplexAbs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),o=new tr(r.shape),s=[nr(r,a.complexTensorInfos.real),nr(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(o,s,s[0].dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ar{constructor(e){this.outputShape=[],this.outputShape=r.backend_util.computeOutShape(e,1),this.variableNames=e.map((e,t)=>"T"+t);const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const a=t.length,o=t[t.length-1];n.push(`else setOutput(getT${a}(yR, yC-${o}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class or{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=r.backend_util.computeOutShape(e,t);const n=this.outputShape,a=n.length,o=xe(a),s=Je("coords",a),i=["x","y","z","w","u","v"].slice(0,a);this.variableNames=e.map((e,t)=>"T"+t);const u=new Array(e.length-1);u[0]=e[0][t];for(let n=1;n<u.length;n++)u[n]=u[n-1]+e[n][t];const c=i[t],l=i.slice(-2),d=i.join();let h=`if (${c} < ${u[0]}) {\n        return getChannel(\n            getT0(${d}), vec2(${l.join()}));\n        }`;for(let e=1;e<u.length;e++){const t=u[e-1];h+=`\n        if (${c} < ${u[e]}  && ${c} >= ${u[e-1]}) {\n          return getChannel(\n            getT${e}(${sr(i,c,t)}),\n            vec2(${sr(l,c,t)}));\n        }`}const p=u.length,f=u[u.length-1];h+=`\n        return getChannel(\n          getT${p}(${sr(i,c,f)}),\n          vec2(${sr(l,c,f)}));`,this.userCode=`\n      float getValue(${i.map(e=>"int "+e)}) {\n        ${h}\n      }\n\n      void main() {\n        ${o} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[a-1]} = ${s[a-1]} + 1;\n        if (${s[a-1]} < ${n[a-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[a-2]} = ${s[a-2]} + 1;\n        if (${s[a-2]} < ${n[a-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[a-1]} = ${s[a-1]} - 1;\n        if (${s[a-2]} < ${n[a-2]} &&\n            ${s[a-1]} < ${n[a-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}}function sr(e,t,n){const r=e.indexOf(t);return e.map((e,t)=>t===r?`${e} - ${n}`:e).join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ir(e){const{inputs:t,backend:n}=e,{input:r}=t;return bt({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const ur={kernelName:r.Imag,backendName:"webgl",kernelFunc:ir};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cr(e,t,n){const a=r.backend_util.computeOutShape(e.map(e=>e.shape),t);return{tensors2D:e.map(e=>Dt({inputs:{x:e},attrs:{shape:[-1,r.util.sizeFromShape(e.shape.slice(t))]},backend:n})),outShape:a}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lr(e){const{inputs:t,backend:n,attrs:a}=e,{axis:o}=a,s=r.util.parseAxisParam(o,t[0].shape)[0],i=r.backend_util.computeOutShape(t.map(e=>e.shape),s);if(0===r.util.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const u=t.filter(e=>r.util.sizeFromShape(e.shape)>0);if(1===u.length)return bt({inputs:{x:u[0]},backend:n});const c=u.map(e=>e.shape);return r.backend_util.assertParamsConsistent(c,s),function e(t,n,a){const o=t[0].dtype;if("complex64"===o){const r=t.map(e=>Hn({inputs:{input:e},backend:a})),o=t.map(e=>ir({inputs:{input:e},backend:a})),s=e(r,n,a),i=e(o,n,a),u=xt({inputs:{real:s,imag:i},backend:a});return r.forEach(e=>a.disposeIntermediateTensorInfo(e)),o.forEach(e=>a.disposeIntermediateTensorInfo(e)),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),u}if("string"===o){const{tensors2D:e,outShape:s}=cr(t,n,a),i=e.map(e=>({vals:a.readSync(e.dataId),shape:e.shape})),u=1===e[0].shape[0],c=$e(i,s,o,u),l=r.backend_util.computeOutShape(t.map(e=>e.shape),n),d=a.makeTensorInfo(l,o,c);return e.forEach(e=>a.disposeIntermediateTensorInfo(e)),d}if(t.length>Object(r.env)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(t.length/2),o=e(t.slice(0,r),n,a),s=e(t.slice(r),n,a),i=e([o,s],n,a);return a.disposeIntermediateTensorInfo(o),a.disposeIntermediateTensorInfo(s),i}if(Object(r.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&t[0].shape.length>1){const e=new or(t.map(e=>e.shape),n);return a.runWebGLProgram(e,t,o)}const{tensors2D:s,outShape:i}=cr(t,n,a),u=new ar(s.map(e=>e.shape)),c=a.runWebGLProgram(u,s,o);s.forEach(e=>a.disposeIntermediateTensorInfo(e));const l=Dt({inputs:{x:c},attrs:{shape:i},backend:a});return a.disposeIntermediateTensorInfo(c),l}(u,s,n)}const dr={kernelName:r.Concat,backendName:"webgl",kernelFunc:lr};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hr{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const o=e.padInfo.top,s=e.padInfo.left,i=e.strideHeight,u=e.strideWidth,c=e.dilationHeight,l=e.dilationWidth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,b=m?1:2,g=m?2:3,x=m?3:1;let v="",k="";n&&(v=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,k="result = activation(result);");const y=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${v}\n\n      const ivec2 strides = ivec2(${i}, ${u});\n      const ivec2 pads = ivec2(${o}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${x}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${b}], coords[${g}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${c};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${h}; wC++) {\n            int xC = xCCorner + wC * ${l};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${y}\n        ${k}\n        setOutput(result);\n      }\n    `}}class pr{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,o=e.strideHeight,s=e.strideWidth,i=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,l=e.filterDepth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${o}, ${s});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${l}; wF++) {\n          int xF = xFCorner + wF * ${i};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h}; wC++) {\n              int xC = xCCorner + wC * ${c};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fr{constructor(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const{filterWidth:r,inChannels:a,strideWidth:o,strideHeight:s,padInfo:i,outWidth:u,dilationWidth:c,dilationHeight:l,dataFormat:d}=n,{left:h,top:p}=i,f=a*r,m=L(),b="channelsLast"===d,g=b?0:1,x=b?1:2;let v="";for(let n=0;n<=1;n++)for(let r=0;r<=1;r++)v+=`\n          blockIndex = rc.y + ${r};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${e[1]} && pos < ${e[0]}) {\n            offsetY = int(blockIndex / (${u})) * ${s} - ${p};\n            d0 = offsetY + ${l} * (pos / ${f});\n\n            if(d0 < ${t[g]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${u}.) * ${o}. - ${h}.);\n              d1 = offsetX + ${c} * (int(mod(float(pos), ${f}.) / ${a}.));\n\n              if(d1 < ${t[x]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${a}.));\n\n                if (${b}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+r}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+r}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${v}\n\n        ${m.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mr({x:e,filter:t,convInfo:n,backend:a,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:u=null}){const c=e.shape,l=a.texData.get(e.dataId),d=n.inChannels,h=c[0]*c[1]*c[2],p=n.outChannels,f="channelsLast"===n.dataFormat;let m;const b=[],g=(1===h||1===p)&&d>1e3,x=c[2]%2!=0&&!!l.isPacked;if(!g&&Object(r.env)().getBool("WEBGL_LAZILY_UNPACK")&&Object(r.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&x){const d=f?c[0]*c[1]*(c[2]+1):c[0]*c[2]*(c[3]+1),h={dataId:e.dataId,shape:[1,d,n.inChannels],dtype:e.dtype},p=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,r.util.assert(_(l.shape,h.shape),()=>`packed reshape ${l.shape} to ${h.shape} isn't free`);const g=Dt({inputs:{x:t},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}});b.push(g);const x=qt({a:h,b:g,backend:a,transposeA:!1,transposeB:!1,bias:o,activation:u,preluActivationWeights:s,leakyreluAlpha:i}),v=a.texData.get(x.dataId);r.util.assert(v.isPacked,()=>"batchMatMul result is expected to be packed"),l.shape=p,v.shape=n.outShape,m=bt({inputs:{x:x},backend:a}),m.shape=n.outShape,b.push(x)}else{const r=Dt({inputs:{x:e},backend:a,attrs:{shape:[1,f?c[0]*c[1]*c[2]:c[0]*c[2]*c[3],n.inChannels]}}),l=Dt({inputs:{x:t},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}}),d=qt({a:r,b:l,transposeA:!1,transposeB:!1,backend:a,bias:o,activation:u,preluActivationWeights:s,leakyreluAlpha:i});m=Dt({inputs:{x:d},backend:a,attrs:{shape:n.outShape}}),b.push(r),b.push(l),b.push(d)}for(const e of b)a.disposeIntermediateTensorInfo(e);return m}function br({x:e,filter:t,convInfo:n,backend:a,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:u=null}){const{filterWidth:c,filterHeight:l,inChannels:d,outWidth:h,outHeight:p,dataFormat:f}=n,m="channelsLast"===f,b=c*l*d,g=p*h,x=[b,g],v=[],k=Dt({inputs:{x:e},backend:a,attrs:{shape:e.shape.slice(1)}}),y=Dt({inputs:{x:t},backend:a,attrs:{shape:[1,b,r.util.sizeFromShape(t.shape)/b]}});v.push(k),v.push(y);const w=new fr(x,k.shape,n),I=a.runWebGLProgram(w,[k],"float32"),O=Dt({inputs:{x:I},backend:a,attrs:{shape:[1,x[0],x[1]]}});v.push(I),v.push(O);const C=null!=o,T=null!=s,$="leakyrelu"===u,S=u?St(u,!0):null,E=new Et(O.shape,y.shape,[1,g,n.outChannels],!0,!1,C,S,T,$),N=[O,y];if(o&&N.push(o),T&&N.push(s),$){const e=a.makeTensorInfo([],"float32",r.util.createScalarValue(i,"float32"));N.push(e),v.push(e)}const _=a.runWebGLProgram(E,N,"float32"),A=Dt({inputs:{x:_},backend:a,attrs:{shape:m?[1,p,h,n.outChannels]:[1,n.outChannels,p,h]}});v.push(_);for(const e of v)a.disposeIntermediateTensorInfo(e);return A}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gr={kernelName:r.Conv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o,filter:s}=t,{strides:i,pad:u,dataFormat:c,dilations:l,dimRoundingMode:d}=a,h=r.backend_util.convertConv2DDataFormat(c),p=r.backend_util.computeConv2DInfo(o.shape,s.shape,i,l,u,d,!1,h);let f;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(Object(r.env)().getBool("WEBGL_CONV_IM2COL")&&1===o.shape[0])f=br({x:o,filter:s,convInfo:p,backend:n});else{const e=new hr(p);f=n.runWebGLProgram(e,[o,s],"float32")}else f=mr({x:o,filter:s,convInfo:p,backend:n});const m=Dt({inputs:{x:f},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(f),m}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xr{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,o="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${o}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class vr{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,o="channelsLast"===e.dataFormat,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,u=o?1:2,c=o?2:3,l=o?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${l}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${c}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${o}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class kr{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,o=e.padInfo.top,s=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${o};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${s};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class yr{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,o=e.strideHeight,s=e.strideWidth,i=t-1-e.padInfo.front,u=n-1-e.padInfo.top,c=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${i}, ${u}, ${c});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${o}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wr={kernelName:r.Conv2DBackpropFilter,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o,dy:s}=t,{strides:i,pad:u,dataFormat:c,dimRoundingMode:l,filterShape:d}=a,h=r.backend_util.convertConv2DDataFormat(c),p=r.backend_util.computeConv2DInfo(o.shape,d,i,1,u,l,!1,h),f=new xr(p);return n.runWebGLProgram(f,[o,s],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ir={kernelName:r.Conv2DBackpropInput,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:o,filter:s}=t,{inputShape:i,strides:u,pad:c,dataFormat:l,dimRoundingMode:d}=a,h=r.backend_util.convertConv2DDataFormat(l),p=r.backend_util.computeConv2DInfo(i,s.shape,u,1,c,d,!1,h),f=new vr(p);return n.runWebGLProgram(f,[o,s],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Or={kernelName:r.Conv3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o,filter:s}=t,{strides:i,pad:u,dilations:c}=a,l=r.backend_util.computeConv3DInfo(o.shape,s.shape,i,c,u),d=new pr(l);return n.runWebGLProgram(d,[o,s],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cr={kernelName:r.Conv3DBackpropFilterV2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o,dy:s}=t,{strides:i,pad:u,filterShape:c}=a,l=r.backend_util.computeConv3DInfo(o.shape,c,i,1,u),d=new kr(l);return n.runWebGLProgram(d,[o,s],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tr={kernelName:r.Conv3DBackpropInputV2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:o,filter:s}=t,{pad:i,strides:u,inputShape:c}=a,l=r.backend_util.computeConv3DInfo(c,s.shape,u,1,i),d=new yr(l);return n.runWebGLProgram(d,[o,s],"float32")}},$r=Tt({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),Sr={kernelName:r.Cos,backendName:"webgl",kernelFunc:$r},Er=Tt({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),Nr={kernelName:r.Cosh,backendName:"webgl",kernelFunc:Er};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class _r{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[o,s,i,u]=e,[c]=t,[l,d]=n;this.outputShape=[c,l,d,u];const h="bilinear"===r?1:0,[p,f]=[s-1+".0",i-1+".0"],[m,b,g]=l>1?[""+(s-1)/(l-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0","0.5 * (y1+y2) * "+p],[x,v,k]=d>1?[""+(i-1)/(d-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0","0.5 * (x1+x2) * "+f];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${x});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${o}) {\n          return;\n        }\n\n        float height_scale = ${b};\n        float width_scale = ${v};\n\n        float in_y = ${g};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${k};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${h} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ar={kernelName:r.CropAndResize,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:o,boxInd:s}=t,{cropSize:i,method:u,extrapolationValue:c}=r,l=new _r(a.shape,o.shape,i,u,c);return n.runWebGLProgram(l,[a,o,s],"float32")}};class Rr{constructor(e,t,n){this.variableNames=["x"],this.outputShape=e;const r=e.length,a=t?"0.0":`getX(${Fr(r,"coords")})`,o=e[e.length-1];let s="",i="";t?(s=n?"end != "+(o-1):"end != 0",i=n?"end + 1":"end - 1"):(s=n?"end + pow2 < "+o:"end >= pow2",i=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${xe(r)} coords = getOutputCoords();\n        int end = ${jr(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${s}) {\n          int idx = ${i};\n          ${jr(r,"coords")} = idx;\n          val += getX(${Fr(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.index&&(this.index=t.getUniformLocation(n,"index")),t.gl.uniform1f(this.index,e)}}}function Fr(e,t){if(1===e)return""+t;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function jr(e,t){if(1===e)return""+t;if(2===e)return t+".y";if(3===e)return t+".z";if(4===e)return t+".w";throw Error(`Cumulative sum for rank ${e} is not yet supported`)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dr={kernelName:r.Cumsum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{axis:s,exclusive:i,reverse:u}=a,c=o.shape.length,l=r.backend_util.getAxesPermutation([s],c);let d=o;null!=l&&(d=Ht({inputs:{x:o},backend:n,attrs:{perm:l}}));const h=r.backend_util.getInnerMostAxes(1,c)[0];if(h!==c-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${o.shape.length-1} but got axis=`+s);const p=d.shape[h];let f=bt({inputs:{x:d},backend:n});for(let e=0;e<=Math.ceil(Math.log2(p))-1;e++){const t=new Rr(d.shape,!1,u),r=t.getCustomSetupFunc(e),a=f;f=n.runWebGLProgram(t,[f],f.dtype,r),n.disposeIntermediateTensorInfo(a)}if(i){const e=new Rr(d.shape,i,u),t=f;f=n.runWebGLProgram(e,[f],f.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=l){const e=Ht({inputs:{x:f},backend:n,attrs:{perm:r.backend_util.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(d),e}return f}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mr={kernelName:r.DenseBincount,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:o}=t,{size:s,binaryOutput:i}=r;if(1===a.shape.length){const e=n.readSync(a.dataId),t=n.readSync(o.dataId),r=Oe(e,t,o.dtype,o.shape,s);return n.makeTensorInfo([s],o.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(o),r=Ce(e,t,s,i);return n.makeTensorInfo(r.shape,o.dtype,r.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+a.shape.length+".")}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pr{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Br={kernelName:r.DepthToSpace,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{blockSize:s,dataFormat:i}=a;r.util.assert(s>1,()=>"blockSize should be > 1 for depthToSpace, but was: "+s);const u=o.shape[0],c="NHWC"===i?o.shape[1]:o.shape[2],l="NHWC"===i?o.shape[2]:o.shape[3],d="NHWC"===i?o.shape[3]:o.shape[1],h=c*s,p=l*s,f=d/(s*s),m=new Pr("NHWC"===i?[u,h,p,f]:[u,f,h,p],s,i);return n.runWebGLProgram(m,[o],o.dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lr{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const o=e.inHeight,s=e.inWidth,i=e.padInfo.top,u=e.padInfo.left,c=e.strideHeight,l=e.strideWidth,d=e.dilationHeight,h=e.dilationWidth,p=e.filterHeight,f=e.filterWidth,m=e.outChannels/e.inChannels;let b="",g="";n&&(b=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,g="result = activation(result);");const x=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${c}, ${l});\n      const ivec2 pads = ivec2(${i}, ${u});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${m};\n        int q = d2 - d1 * ${m};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${d};\n\n          if (xR < 0 || xR >= ${o}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${f}; wC++) {\n            int xC = xCCorner + wC * ${h};\n\n            if (xC < 0 || xC >= ${s}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${x}\n        ${g}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wr{constructor(e,t=!1,n=null,a=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;const s=e.inHeight,i=e.inWidth,u=e.padInfo.top,c=e.padInfo.left,l=e.strideHeight,d=e.strideWidth,h=e.dilationHeight,p=e.dilationWidth,f=e.filterHeight,m=e.filterWidth,b=m;let g="int xR; int xC; int xCOffset;";for(let e=0;e<f;e++)for(let t=0;t<m;t++)g+=`\n          vec4 xTexelR${e}C${2*t} = vec4(0.);\n          vec4 wR${e}C${t} = vec4(0.);\n          vec4 xR${e}C${t} = vec4(0.);`;for(let e=0;e<f;e++)for(let t=0;t<b;t++){const n=2*t;if(g+=`\n          xR = xRCorner + ${e*h};\n          xC = xCCorner + ${n*p};\n        `,1===d){if(n<m&&(g+=c%2==1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    xTexelR${e}C${n}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${i}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${e}C${n} = vec4(previous.zw, xTexelR${e}C${n}.xy);\n                } else {\n                  xR${e}C${n} = vec4(0, 0, xTexelR${e}C${n}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${s} && xC >= 0 && xC < ${i}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xR${e}C${n} = xTexelR${e}C${n};\n              `,n+1<m)){const t=c%2==0?r.util.nearestLargerEven(p):p;p%2==0&&c%2==1||p%2!=0&&c%2!=1?(g+=`\n                  xCOffset = xC + ${c%2} + ${t};\n\n                  if(xR >= 0 && xR < ${s} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,p>1&&(g+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${s} &&\n                      xCOffset >= 0 && xCOffset < ${i}) {\n                      xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${e}C${n} = vec4(0.);\n                    }\n                  `),g+=`\n                  xR${e}C${n+1} = vec4(\n                    xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.xy);\n                `):g+=`\n                  xCOffset = xC + ${t};\n\n                  if(xR >= 0 && xR < ${s} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${e}C${n+1} = xTexelR${e}C${n+2};\n                `}}else n<m&&(g+=`\n              if(xR >= 0 && xR < ${s}) {\n            `,c%2==1?(g+=`\n                xCOffset = xC + 1 - ${d};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${i}) {\n                  xTexelR${e}C${n+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${e}C${n+2} = vec4(0.);\n                }\n\n                xR${e}C${n} = vec4(\n                  xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.zw);\n              `,n+1<m&&(g+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${d};\n                  if(xCOffset >= 0 && xCOffset < ${i}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${e}C${n+1} = vec4(xTexelR${e}C${n+2}.xy, final.xy);\n                `)):(g+=`\n                if(xC >= 0 && xC < ${i}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + ${d};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${e}C${n+2} = vec4(0.);\n                }\n\n                xR${e}C${n} = vec4(\n                  xTexelR${e}C${n}.xy, xTexelR${e}C${n+2}.xy);\n              `,n+1<m&&(g+=`\n                  xR${e}C${n+1} = vec4(\n                    xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.zw);\n                `)),g+="}");n<m&&(g+=`\n            vec4 wTexelR${e}C${n} = getW(${e}, ${n}, d1, q);\n            wR${e}C${n} = vec4(wTexelR${e}C${n}.xz, wTexelR${e}C${n}.xz);\n          `,n+1<m&&(g+=`\n              vec4 wTexelR${e}C${n+1} = getW(${e}, ${n+1}, d1, q);\n              wR${e}C${n+1} =\n                vec4(wTexelR${e}C${n+1}.xz, wTexelR${e}C${n+1}.xz);`))}for(let e=0;e<f;e++)for(let t=0;t<m;t++)g+=`dotProd += xR${e}C${t} * wR${e}C${t};`;let x="",v="";n&&(x=a?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:o?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,v="result = activation(result);");const k=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${l}, ${d});\n      const ivec2 pads = ivec2(${u}, ${c});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${g}\n\n        vec4 result = dotProd;\n        ${k}\n        ${v}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zr={kernelName:r.DepthwiseConv2dNative,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o,filter:s}=t,{strides:i,pad:u,dilations:c,dimRoundingMode:l}=a;let d=c;null==d&&(d=[1,1]),r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(i,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);const h=r.backend_util.computeConv2DInfo(o.shape,s.shape,i,d,u,l,!0);let p;return p=Object(r.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new Wr(h):new Lr(h),n.runWebGLProgram(p,[o,s],"float32")}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vr{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${o} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Ur{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,o=t-1-e.padInfo.top,s=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${i}; dm++) {\n              int d2 = d1 * ${i} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gr={kernelName:r.DepthwiseConv2dNativeBackpropFilter,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o,dy:s}=t,{strides:i,dilations:u,pad:c,dimRoundingMode:l,filterShape:d}=a,h=r.backend_util.computeConv2DInfo(o.shape,d,i,u,c,l,!0),p=new Vr(h);return n.runWebGLProgram(p,[o,s],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hr={kernelName:r.DepthwiseConv2dNativeBackpropInput,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:o,filter:s}=t,{strides:i,dilations:u,pad:c,dimRoundingMode:l,inputShape:d}=a,h=r.backend_util.computeConv2DInfo(d,s.shape,i,u,c,l,!0),p=new Ur(h);return n.runWebGLProgram(p,[o,s],"float32")}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kr{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qr={kernelName:r.Diag,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,o=[...a.shape,...a.shape],s=r.util.sizeFromShape(a.shape),i=Dt({inputs:{x:a},backend:n,attrs:{shape:[s]}}),u=new Kr(s),c=n.runWebGLProgram(u,[i],i.dtype),l=Dt({inputs:{x:c},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),l}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xr{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:o,filterHeight:s,filterWidth:i,dilationHeight:u,dilationWidth:c}=e,{top:l,left:d}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${o});\n      const ivec2 pads = ivec2(${l}, ${d});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${s}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${i}; w++) {\n              int wIn = wBeg + w * ${c};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yr={kernelName:r.Dilation2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o,filter:s}=t,{strides:i,pad:u,dilations:c}=a,l=r.backend_util.computeDilation2DInfo(o.shape,s.shape,i,u,"NHWC",c);let d;const h=new Xr(l);d=n.runWebGLProgram(h,[o,s],"float32");const p=Dt({inputs:{x:d},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(d),p}},Qr=Tt({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),Zr={kernelName:r.Elu,backendName:"webgl",kernelFunc:Qr},Jr={kernelName:r.EluGrad,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:a,y:o}=t,s=Object(r.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new mt("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",a.shape,o.shape):new ft("return (b >= 1.0) ? a : a * (b + 1.0);",a.shape,o.shape);return n.runWebGLProgram(s,[a,o],a.dtype)}},ea=$t({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool"}),ta={kernelName:r.Equal,backendName:"webgl",kernelFunc:ea},na=Tt({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${r.backend_util.ERF_P};\n  float a1 = ${r.backend_util.ERF_A1};\n  float a2 = ${r.backend_util.ERF_A2};\n  float a3 = ${r.backend_util.ERF_A3};\n  float a4 = ${r.backend_util.ERF_A4};\n  float a5 = ${r.backend_util.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),ra={kernelName:r.Erf,backendName:"webgl",kernelFunc:na},aa="return exp(x);",oa=Tt({opSnippet:aa,packedOpSnippet:aa,cpuKernelImpl:Se}),sa={kernelName:r.Exp,backendName:"webgl",kernelFunc:oa};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ia(e){const{inputs:t,attrs:n,backend:a}=e,{dim:o}=n,{input:s}=t,i=s.shape.length,u=s.shape.slice();let c=o;return o<0&&(r.util.assert(-(i+1)<=o,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),c=i+o+1),u.splice(c,0,1),Dt({inputs:{x:s},backend:a,attrs:{shape:u}})}const ua={kernelName:r.ExpandDims,backendName:"webgl",kernelFunc:ia},ca="return exp(x) - 1.0;",la=Tt({opSnippet:ca,packedOpSnippet:ca,cpuKernelImpl:Ee}),da={kernelName:r.Expm1,backendName:"webgl",kernelFunc:la};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class ha{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=n?"2.0 * "+Math.PI:"-2.0 * "+Math.PI,o=n?r+".0":"1.0";let s;if("real"===e)s="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);s="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${s}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${o};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pa(e,t,n){const a=n.texData.get(e.dataId),o=r.util.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=Dt({inputs:{x:e},backend:n,attrs:{shape:[o/s,s]}}),u=i.shape,c=new ha("real",u,t),l=new ha("imag",u,t),d=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:u},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:u}],h=n.runWebGLProgram(c,d,"float32"),p=n.runWebGLProgram(l,d,"float32"),f=xt({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);const m=Dt({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(f),m}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fa={kernelName:r.FFT,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return pa(r,!1,n)}};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ma{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ba(e){const{backend:t,attrs:n}=e,{shape:a,value:o}=n;let{dtype:s}=n;if(s=s||r.util.inferDtype(o),"string"===s){const e=r.util.getArrayFromDType(s,r.util.sizeFromShape(a));return e.fill(o),t.makeTensorInfo(a,s,e)}{const e=new ma(a,o),n=e.getCustomSetupFunc(o);return t.runWebGLProgram(e,[],s,n)}}const ga={kernelName:r.Fill,backendName:"webgl",kernelFunc:ba};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xa{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const va={kernelName:r.FlipLeftRight,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,a=new xa(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},ka="return floor(x);",ya=Tt({opSnippet:ka,packedOpSnippet:ka,cpuKernelImpl:Ne}),wa={kernelName:r.Floor,backendName:"webgl",kernelFunc:ya},Ia=$t({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),Oa={kernelName:r.FloorDiv,backendName:"webgl",kernelFunc:Ia};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Ca{constructor(e){this.variableNames=["A"];const t=L(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ta{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=L(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $a={kernelName:r.FromPixels,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e;let{pixels:o}=t;const{numChannels:s}=a,i="undefined"!=typeof HTMLVideoElement&&o instanceof HTMLVideoElement,c="undefined"!=typeof HTMLImageElement&&o instanceof HTMLImageElement,[l,d]=i?[o.videoWidth,o.videoHeight]:[o.width,o.height],h=[d,l],p=[d,l,s];(c||i)&&(null==Sa&&(Sa=document.createElement("canvas").getContext("2d")),Sa.canvas.width=l,Sa.canvas.height=d,Sa.drawImage(o,0,0,l,d),o=Sa.canvas);const f=n.makeTensorInfo(h,"int32");n.texData.get(f.dataId).usage=u.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(f.dataId),o);const m=Object(r.env)().getBool("WEBGL_PACK")?new Ta(p):new Ca(p),b=n.runWebGLProgram(m,[f],"int32");return n.disposeData(f.dataId),b}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */};let Sa;const Ea={kernelName:r.FusedConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o,filter:s,bias:i,preluActivationWeights:u}=t,{strides:c,pad:l,dataFormat:d,dilations:h,dimRoundingMode:p,activation:f,leakyreluAlpha:m}=a,b=r.backend_util.convertConv2DDataFormat(d),g=r.backend_util.computeConv2DInfo(o.shape,s.shape,c,h,l,p,!1,b);let x;const v=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(Object(r.env)().getBool("WEBGL_CONV_IM2COL")&&1===o.shape[0])x=br({x:o,filter:s,convInfo:g,backend:n,bias:i,activation:f,preluActivationWeights:u,leakyreluAlpha:m});else{const e=null!=i,t=null!=u,a="leakyrelu"===f,c=f?St(f,!1):null,l=new hr(g,e,c,t,a),d=[o,s];if(i&&d.push(i),u&&d.push(u),a){const e=n.makeTensorInfo([],"float32",r.util.createScalarValue(m,"float32"));d.push(e),v.push(e)}x=n.runWebGLProgram(l,d,"float32")}else x=mr({x:o,filter:s,convInfo:g,backend:n,bias:i,activation:f,preluActivationWeights:u,leakyreluAlpha:m});const k=Dt({inputs:{x:x},backend:n,attrs:{shape:g.outShape}});return v.push(x),v.forEach(e=>n.disposeIntermediateTensorInfo(e)),k}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Na={kernelName:r.FusedDepthwiseConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o,filter:s,bias:i,preluActivationWeights:u}=t,{strides:c,pad:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=a,m=[];let b=d;null==b&&(b=[1,1]),r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(c,b),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${c} and dilations '${b}'`);const g=r.backend_util.computeConv2DInfo(o.shape,s.shape,c,b,l,h,!0),x=Object(r.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,v=p?St(p,x):null,k=[o,s],y=null!=i,w=null!=u,I="leakyrelu"===p;if(y&&k.push(i),w&&k.push(u),I){const e=n.makeTensorInfo([],"float32",r.util.createScalarValue(f,"float32"));k.push(e),m.push(e)}let O;O=x?new Wr(g,y,v,w,I):new Lr(g,y,v,w,I);const C=n.runWebGLProgram(O,k,"float32");return m.forEach(e=>n.disposeIntermediateTensorInfo(e)),C}};class _a{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=xe(t.length),a=xe(n.length),o=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${o};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aa={kernelName:r.GatherNd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:o}=t,s=o.shape,i=s[s.length-1],[u,c,l,d]=r.backend_util.prepareAndValidate(a,o),h=Dt({inputs:{x:o},backend:n,attrs:{shape:[c,i]}}),p=Dt({inputs:{x:a},backend:n,attrs:{shape:[r.util.sizeFromShape(a.shape)/l,l]}}),f=new _a(i,d,[c,l]),m=n.runWebGLProgram(f,[p,h],p.dtype),b=Dt({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),b}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ra{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=xe(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("int(getIndices(resRC.x, resRC.z))"):r.push(""+n[t]);return r.join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}const Fa={kernelName:r.GatherV2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o,indices:s}=t,{axis:i,batchDims:u}=a,c=r.util.parseAxisParam(i,o.shape)[0],l=r.backend_util.segment_util.collectGatherOpShapeInfo(o,s,c,u),d=r.util.sizeFromShape(s.shape),h=[],p=Dt({inputs:{x:o},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),f=Dt({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,d/l.batchSize]}});h.push(p),h.push(f);const m=[l.batchSize,l.outerSize,d/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([o,s])||"string"===o.dtype){const e=n.bufferSync(f),t=n.bufferSync(p),r=_e(t,e,m);return h.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const b=new Ra(p.shape,m),g=n.runWebGLProgram(b,[p,f],p.dtype);h.push(g);const x=Dt({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return h.forEach(e=>n.disposeIntermediateTensorInfo(e)),x}},ja=$t({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:Ae,dtype:"bool"}),Da={kernelName:r.Greater,backendName:"webgl",kernelFunc:ja},Ma=$t({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool"}),Pa={kernelName:r.GreaterEqual,backendName:"webgl",kernelFunc:Ma};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ba={kernelName:r.IFFT,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n}=e,{input:r}=t;return pa(r,!0,n)}},La=Tt({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),Wa={kernelName:r.IsFinite,backendName:"webgl",kernelFunc:La},za=Tt({opSnippet:"return float(isinf(x));",dtype:"bool"}),Va={kernelName:r.IsInf,backendName:"webgl",kernelFunc:za},Ua=Tt({opSnippet:"return float(isnan(x));",dtype:"bool"}),Ga={kernelName:r.IsNan,backendName:"webgl",kernelFunc:Ua},Ha=$t({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:Re,dtype:"bool"}),Ka={kernelName:r.Less,backendName:"webgl",kernelFunc:Ha},qa=$t({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",dtype:"bool"}),Xa={kernelName:r.LessEqual,backendName:"webgl",kernelFunc:qa};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ya={kernelName:r.LinSpace,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:o}=n,s=Fe(r,a,o);return t.makeTensorInfo([s.length],"float32",s)}},Qa=Tt({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:je}),Za={kernelName:r.Log,backendName:"webgl",kernelFunc:Qa},Ja=Tt({opSnippet:"return log(1.0 + x);"}),eo={kernelName:r.Log1p,backendName:"webgl",kernelFunc:Ja},to=$t({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),no={kernelName:r.LogicalAnd,backendName:"webgl",kernelFunc:to},ro=Tt({opSnippet:"return float(!(x >= 1.0));"}),ao={kernelName:r.LogicalNot,backendName:"webgl",kernelFunc:ro},oo=$t({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),so={kernelName:r.LogicalOr,backendName:"webgl",kernelFunc:oo};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class io{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];const o=t,s=e[3]-1;let i;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;i=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${o}; j <= ${o}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${s}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${i};\n        setOutput(val);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uo{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const o=t,s=e[3]-1;let i;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;i=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${o};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${o}; j <= ${o}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${s}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${i};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const co={kernelName:r.LRN,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{depthRadius:s,bias:i,alpha:u,beta:c}=a,l=Object(r.env)().getBool("WEBGL_PACK_NORMALIZATION")?new uo(o.shape,s,i,u,c):new io(o.shape,s,i,u,c);return n.runWebGLProgram(l,[o],o.dtype)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class lo{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ho={kernelName:r.LRNGrad,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a,y:o,dy:s}=t,{depthRadius:i,bias:u,alpha:c,beta:l}=r,d=new lo(a.shape,i,u,c,l);return n.runWebGLProgram(d,[a,o,s],a.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function po(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{reductionIndices:s,keepDims:i}=a,u=o.shape.length,c=r.util.parseAxisParam(s,o.shape);let l=c;const d=r.backend_util.getAxesPermutation(l,u),h=null!=d,p=n.shouldExecuteOnCPU([o]);let f=o;if(h){if(p){const e=n.texData.get(f.dataId).values,t=new Array(u);for(let e=0;e<t.length;e++)t[e]=o.shape[d[e]];const r=Ye(e,o.shape,o.dtype,d,t);f=n.makeTensorInfo(t,o.dtype);n.texData.get(f.dataId).values=r}else f=Vt(o,d,n);l=r.backend_util.getInnerMostAxes(l.length,u)}r.backend_util.assertAxesAreInnerMostDims("max",l,u);const[m,b]=r.backend_util.computeOutAndReduceShapes(f.shape,l);let g,x=m;if(i&&(x=r.backend_util.expandShapeToKeepDim(m,c)),p){const e=n.texData.get(f.dataId).values,t=De(e,r.util.sizeFromShape(b),x,o.dtype);g=n.makeTensorInfo(x,o.dtype);n.texData.get(g.dataId).values=t}else g=
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e,t,n,a){const o=r.util.sizeFromShape(t),s=Dt({inputs:{x:e},attrs:{shape:[r.util.sizeFromShape(e.shape)/o,o]},backend:a}),i=Lt(s,e.dtype,"max",a),u=Dt({inputs:{x:i},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),u}(f,b,x,n);return h&&n.disposeIntermediateTensorInfo(f),g}const fo={kernelName:r.Max,backendName:"webgl",kernelFunc:po},mo=$t({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Me}),bo={kernelName:r.Maximum,backendName:"webgl",kernelFunc:mo};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const go={kernelName:r.MaxPool,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t;P(o,"maxPool");const{filterSize:s,strides:i,pad:u,dimRoundingMode:c}=a;r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(i,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const l=r.backend_util.computePool2DInfo(o.shape,s,i,1,u,c);if(1===l.filterWidth&&1===l.filterHeight&&r.util.arraysEqual(l.inShape,l.outShape))return bt({inputs:{x:o},backend:n});const d=new Cn(l,"max",!1);return n.runWebGLProgram(d,[o],o.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xo={kernelName:r.MaxPool3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{filterSize:s,strides:i,pad:u,dataFormat:c,dimRoundingMode:l}=a,d=r.backend_util.computePool3DInfo(o.shape,s,i,[1,1,1],u,l,c),h=new Tn(d,"max",!1);return n.runWebGLProgram(h,[o],o.dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vo{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,o=e.effectiveFilterWidth,s=a-1-e.padInfo.top,i=o-1-e.padInfo.left,u=a*o-1;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${o}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${o} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ko{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,o=e.dilationHeight,s=e.dilationWidth,i=e.effectiveFilterDepth,u=e.effectiveFilterHeight,c=e.effectiveFilterWidth,l=i-1-e.padInfo.front,d=u-1-e.padInfo.top,h=c-1-e.padInfo.left,p=i*u*c-1;this.userCode=`\n      const ivec3 pads = ivec3(${l}, ${d}, ${h});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${i};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${o}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${c};\n                wC += ${s}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${c} +\n                  wR * ${c} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yo={kernelName:r.MaxPool3DGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:o,input:s}=t,i=s,{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=a,h=r.backend_util.computePool3DInfo(i.shape,u,c,[1,1,1],l,d),p=new Tn(h,"max",!0),f=n.runWebGLProgram(p,[i],i.dtype),m=new ko(h),b=n.runWebGLProgram(m,[o,f],i.dtype);return n.disposeIntermediateTensorInfo(f),b}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wo={kernelName:r.MaxPoolGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:o,input:s,output:i}=t,u=s;P([s,i],"maxPoolGrad");const{filterSize:c,strides:l,pad:d,dimRoundingMode:h}=a,p=r.backend_util.computePool2DInfo(u.shape,c,l,1,d,h),f=new Cn(p,"max",!0),m=n.runWebGLProgram(f,[u],u.dtype),b=new vo(p),g=n.runWebGLProgram(b,[o,m],u.dtype);return n.disposeIntermediateTensorInfo(m),g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Io={kernelName:r.MaxPoolWithArgmax,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:a}=e,{filterSize:o,strides:s,pad:i,includeBatchInIndex:u}=t,c=n;r.util.assert(4===a.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${a.shape.length}.`);const l=[1,1];r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(s,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${l}'`);const d=r.backend_util.computePool2DInfo(a.shape,o,s,l,i),[h,p]=function(e,t,n,r){let a=new Cn(n,"max",!1);const o=r.runWebGLProgram(a,[e],"float32");return a=new Cn(n,"max",!0,!0,t),[o,r.runWebGLProgram(a,[e],"float32")]}(a,u,d,c);return[h,p]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Oo={kernelName:r.Mean,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:a}=e,{keepDims:o,axis:s}=t,i=n,u=a.shape.length,c=r.util.parseAxisParam(s,a.shape);let l=c;const d=r.backend_util.getAxesPermutation(l,u),h=null!=d,p=i.shouldExecuteOnCPU([a]),f=[];let m=a;if(h){if(p){const e=i.texData.get(m.dataId).values,t=new Array(u);for(let e=0;e<t.length;e++)t[e]=a.shape[d[e]];const n=Ye(e,a.shape,a.dtype,d,t);m=i.makeTensorInfo(t,a.dtype);i.texData.get(m.dataId).values=n}else m=Vt(a,d,i);f.push(m),l=r.backend_util.getInnerMostAxes(l.length,u)}r.backend_util.assertAxesAreInnerMostDims("sum",l,u);const[b,g]=r.backend_util.computeOutAndReduceShapes(m.shape,l);let x=b;o&&(x=r.backend_util.expandShapeToKeepDim(b,c));const v=function(e,t,n,a){const o=r.util.sizeFromShape(t),s=Dt({inputs:{x:e},attrs:{shape:[r.util.sizeFromShape(e.shape)/o,o]},backend:a}),i=Lt(s,"float32","mean",a),u=Dt({inputs:{x:i},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),u}(m,g,x,i);for(const e of f)i.disposeIntermediateTensorInfo(e);return v}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Co={kernelName:r.Min,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{axis:s,keepDims:i}=a,u=o.shape.length,c=r.util.parseAxisParam(s,o.shape);let l=c;const d=r.backend_util.getAxesPermutation(l,u);let h=o;null!=d&&(h=Ht({inputs:{x:o},backend:n,attrs:{perm:d}}),l=r.backend_util.getInnerMostAxes(l.length,o.shape.length)),r.backend_util.assertAxesAreInnerMostDims("min",l,u);const[p,f]=r.backend_util.computeOutAndReduceShapes(h.shape,l),m=Dt({inputs:{x:h},backend:n,attrs:{shape:[-1,r.util.sizeFromShape(f)]}}),b=Lt(m,m.dtype,"min",n);let g;if(i){g=Dt({inputs:{x:b},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(p,c)}})}else g=Dt({inputs:{x:b},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),null!=d&&n.disposeIntermediateTensorInfo(h),g}},To=$t({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Pe}),$o={kernelName:r.Minimum,backendName:"webgl",kernelFunc:To};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class So{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=xe(r),o=t.map(e=>e[0]).join(","),s=t.map((t,n)=>t[0]+e[n]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${o});\n      ${a} end = ${a}(${s});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${i}));\n      }\n    `:`\n        int start = ${o};\n        int end = ${s};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Eo{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=xe(r),o=t.map(e=>e[0]).join(","),s=t.map((t,n)=>t[0]+e[n]).join(","),i=Je("rc",r),u=Je("source",r),c=`${i[r-1]} < ${this.outputShape[r-1]}`,l=1===r?"source":`vec2(${u.slice(-2).join()})`,d="reflect"===n?0:1;let h="";if(1===r){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${d};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${d};\n        }\n        source -= start;\n      `;h=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${l});\n        ${i[r-1]} += 1;\n        if(${c}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${l});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${d}) +\n                gte * ((end - 1) * 2 - source + ${d});\n        source -= start;\n      `;h=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${l});\n        ${i[r-1]} += 1;\n        if(${c}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${l});\n        }\n        rc = outputLoc;\n        ${i[r-2]} += 1;\n        if(${i[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${l});\n          ${i[r-1]} += 1;\n          if(${c}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${l});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${o});\n      const ${a} end = ${a}(${s});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const No={kernelName:r.MirrorPad,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a}=e,{paddings:o,mode:s}=n,i=Object(r.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Eo(a.shape,o,s):new So(a.shape,o,s);return t.runWebGLProgram(i,[a],a.dtype)}},_o=$t({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Ao={kernelName:r.Mod,backendName:"webgl",kernelFunc:_o};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Ro{constructor(e,t,n){this.variableNames=["probs"],this.outputShape=[e,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.seedLoc&&(this.seedLoc=t.getUniformLocation(n,"seed")),t.gl.uniform1f(this.seedLoc,e)}}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fo=$t({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),jo={kernelName:r.RealDiv,backendName:"webgl",kernelFunc:Fo},Do="return a - b;",Mo=$t({opSnippet:Do,packedOpSnippet:Do,supportsComplex:!0,cpuKernelImpl:Ke}),Po={kernelName:r.Sub,backendName:"webgl",kernelFunc:Mo};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Bo(e){const{inputs:t,backend:n,attrs:a}=e,{logits:o}=t,{dim:s}=a,i=r.util.parseAxisParam([s],o.shape),u=po({inputs:{x:o},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),c=r.backend_util.expandShapeToKeepDim(u.shape,i),l=Dt({inputs:{x:u},backend:n,attrs:{shape:c}}),d=Mo({inputs:{a:o,b:l},backend:n}),h=oa({inputs:{x:d},backend:n}),p=Ut({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),f=Dt({inputs:{x:p},backend:n,attrs:{shape:c}}),m=Fo({inputs:{a:h,b:f},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}const Lo={kernelName:r.Softmax,backendName:"webgl",kernelFunc:Bo};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wo={kernelName:r.Multinomial,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:o,seed:s,normalized:i}=r,u=i?a:Bo({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),c=u.shape[0],l=u.shape[1],d=new Ro(c,l,o),h=d.getCustomSetupFunc(s),p=n.runWebGLProgram(d,[u],"int32",h);return i||n.disposeIntermediateTensorInfo(u),p}},zo="return -x;";
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vo={kernelName:r.Neg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])){const e=n.texData.get(a.dataId),[t,r]=Le(e.values,a.shape,a.dtype);return n.makeTensorInfo(r,a.dtype,t)}let o;return o=Object(r.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new ct(a.shape,zo):new st(a.shape,zo),n.runWebGLProgram(o,[a],a.dtype)}},Uo=r.kernel_impls.nonMaxSuppressionV3Impl;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Go={kernelName:r.NonMaxSuppressionV3,backendName:"webgl",kernelFunc:function(e){r.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:o,scores:s}=t,{maxOutputSize:i,iouThreshold:u,scoreThreshold:c}=a,l=n.readSync(o.dataId),d=n.readSync(s.dataId),{selectedIndices:h}=Uo(l,d,i,u,c);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},Ho=r.kernel_impls.nonMaxSuppressionV4Impl;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ko={kernelName:r.NonMaxSuppressionV4,backendName:"webgl",kernelFunc:function(e){r.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:o,scores:s}=t,{maxOutputSize:i,iouThreshold:u,scoreThreshold:c,padToMaxOutputSize:l}=a,d=n.readSync(o.dataId),h=n.readSync(s.dataId),{selectedIndices:p,validOutputs:f}=Ho(d,h,i,u,c,l);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},qo=r.kernel_impls.nonMaxSuppressionV5Impl;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xo={kernelName:r.NonMaxSuppressionV5,backendName:"webgl",kernelFunc:function(e){r.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:o,scores:s}=t,{maxOutputSize:i,iouThreshold:u,scoreThreshold:c,softNmsSigma:l}=a,d=n.readSync(o.dataId),h=n.readSync(s.dataId),p=i,f=u,m=c,b=l,{selectedIndices:g,selectedScores:x}=qo(d,h,p,f,m,b);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([x.length],"float32",new Float32Array(x))]}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yo{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qo={kernelName:r.OneHot,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{indices:o}=t,{depth:s,onValue:i,offValue:u}=a,c=r.util.sizeFromShape(o.shape),l=new Yo(c,s,i,u),d=Dt({inputs:{x:o},backend:n,attrs:{shape:[c]}}),h=n.runWebGLProgram(l,[d],o.dtype);n.disposeIntermediateTensorInfo(d);const p=Dt({inputs:{x:h},backend:n,attrs:{shape:[...o.shape,s]}});return n.disposeIntermediateTensorInfo(h),p}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Zo(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=Hn({inputs:{input:r},backend:n}),t=Zo({inputs:{x:e},backend:n}),a=ir({inputs:{input:r},backend:n}),o=Zo({inputs:{x:a},backend:n}),s=xt({inputs:{real:t,imag:o},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),s}return ba({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const Jo={kernelName:r.ZerosLike,backendName:"webgl",kernelFunc:Zo};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const es={kernelName:r.OnesLike,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const t=Hn({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),o=ir({inputs:{input:a},backend:r}),s=Zo({inputs:{x:o},backend:r}),i=xt({inputs:{real:n,imag:s},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(s),i}return ba({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ts={kernelName:r.Pack,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{axis:o}=a;if(1===t.length)return ia({inputs:{input:t[0]},backend:n,attrs:{dim:o}});const s=t[0].shape,i=t[0].dtype;t.forEach(e=>{r.util.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),r.util.assert(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const u=[],c=lr({inputs:t.map(e=>{const t=ia({inputs:{input:e},backend:n,attrs:{dim:o}});return u.push(t),t}),backend:n,attrs:{axis:o}});return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),c}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ns{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=xe(r),o=t.map(e=>e[0]).join(","),s=t.map((t,n)=>t[0]+e[n]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${o});\n      ${a} end = ${a}(${s});\n      uniform float value;\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${i}));\n        }\n      }\n    `:`\n        int start = ${o};\n        int end = ${s};\n        uniform float value;\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rs{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=xe(r),o=t.map(e=>e[0]).join(","),s=t.map((t,n)=>t[0]+e[n]).join(","),i=Je("rc",r),u=Je("source",r),c=`${i[r-1]} < ${this.outputShape[r-1]}`,l=1===r?"source":`vec2(${u.slice(-2).join()})`,d=[a+" rc = outputLoc;",`${i[r-1]} += 1;\n       if(${c}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${i[r-2]} += 1;\n       if(${i[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${i[r-1]} += 1;\n         if(${c}) {`],h=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let e=0,t=1===r?2:4;e<t;e++)p+=`\n        ${d[e]}\n        if (${h}) {\n          result[${e}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${e}] = getChannel(getX(${u.join()}), ${l});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${o});\n      const ${a} end = ${a}(${s});\n      uniform float value;\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const as=e=>{const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{paddings:s,constantValue:i}=a,u=Object(r.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new rs(o.shape,s,i):new ns(o.shape,s,i),c=u.getCustomSetupFunc(i);return n.runWebGLProgram(u,[o],o.dtype,c)},os={kernelName:r.PadV2,backendName:"webgl",kernelFunc:as},ss=$t({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),is={kernelName:r.Pow,backendName:"webgl",kernelFunc:ss};const us={kernelName:r.Prod,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{axis:s,keepDims:i}=a,u=o.shape.length,c=[],l=r.util.parseAxisParam(s,o.shape);let d=l;const h=r.backend_util.getAxesPermutation(d,u);let p,f=o;if(null!=h&&(f=Ht({inputs:{x:o},backend:n,attrs:{perm:h}}),d=r.backend_util.getInnerMostAxes(d.length,u),c.push(f)),r.backend_util.assertAxesAreInnerMostDims("prod",d,u),n.shouldExecuteOnCPU([f])){const e=n.texData.get(f.dataId).values,{outVals:t,outShape:r,outDtype:a}=We(f.shape,f.dtype,e,d);p=n.makeTensorInfo(r,a,t)}else{const[e,t]=r.backend_util.computeOutAndReduceShapes(f.shape,d),a=r.util.sizeFromShape(t),s=Dt({inputs:{x:f},backend:n,attrs:{shape:[-1,a]}}),i=Lt(s,Object(r.sumOutType)(o.dtype),"prod",n);p=Dt({inputs:{x:i},backend:n,attrs:{shape:e}}),c.push(s),c.push(i)}if(i){c.push(p);const e=r.backend_util.expandShapeToKeepDim(p.shape,l);p=Dt({inputs:{x:p},backend:n,attrs:{shape:e}})}return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),p}},cs=e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:o,dtype:s}=n,i=ze(r,a,o,s);return t.makeTensorInfo([i.length],s,i)},ls={kernelName:r.Range,backendName:"webgl",kernelFunc:cs},ds=Tt({opSnippet:"return 1.0 / x;"}),hs={kernelName:r.Reciprocal,backendName:"webgl",kernelFunc:ds},ps=Tt({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),fs={kernelName:r.Relu,backendName:"webgl",kernelFunc:ps},ms=Tt({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),bs={kernelName:r.Relu6,backendName:"webgl",kernelFunc:ms};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class gs{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[o,s,i,u]=e;this.outputShape=[o,t,n,u];const c=[r&&t>1?s-1:s,r&&n>1?i-1:i],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${s}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xs{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,s,i,u]=e;this.outputShape=[o,t,n,u];const c=[r&&t>1?s-1:s,r&&n>1?i-1:i],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]},\n          ${c[1]/l[1]});\n      const vec3 inputShapeRC = vec3(${s}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vs={kernelName:r.ResizeBilinear,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:o}=t,{alignCorners:s,halfPixelCenters:i,size:u}=a,[c,l]=u,d=Object(r.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new xs(o.shape,c,l,s,i):new gs(o.shape,c,l,s,i);return n.runWebGLProgram(d,[o],"float32")}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ks{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,o,s]=e,i=[n&&o>1?r-1:r,n&&s>1?a-1:a],u=[n&&o>1?o-1:o,n&&s>1?s-1:s],c=i[0]/u[0],l=i[1]/u[1],d=1/c,h=1/l,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${l});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${o}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${s}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ys={kernelName:r.ResizeBilinearGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:o}=t,{alignCorners:s}=r,i=new ks(o.shape,a.shape,s);return n.runWebGLProgram(i,[o],o.dtype)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ws{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[o,s,i,u]=e;this.outputShape=[o,t,n,u];const c=[r&&t>1?s-1:s,r&&n>1?i-1:i],l=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";let h;h=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${s}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Is={kernelName:r.ResizeNearestNeighbor,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:o,halfPixelCenters:s,size:i}=r,[u,c]=i,l=new ws(a.shape,u,c,o,s);return n.runWebGLProgram(l,[a],a.dtype)}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Os{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,o,s]=e,i=[n&&o>1?r-1:r,n&&s>1?a-1:a],u=[n&&o>1?o-1:o,n&&s>1?s-1:s],c=i[0]/u[0],l=i[1]/u[1],d=1/c,h=1/l,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${l});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${o}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${s}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${i[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${i[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cs={kernelName:r.ResizeNearestNeighborGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:o}=t,{alignCorners:s}=r,i=new Os(o.shape,a.shape,s);return n.runWebGLProgram(i,[o],o.dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ts{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r)).join(","),a=xe(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $s{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=Je("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,o=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,s=xe(n);function i(n){const r=e.map((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:""+r[n]}(a,n));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${s} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return i(e)}(r.slice())};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",i(e)}(r.slice())};\n          }\n          if(${o}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",i(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",i(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ss={kernelName:r.Reverse,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{dims:s}=a,i=o.shape.length,u=r.util.parseAxisParam(s,o.shape);if(0===i)return bt({inputs:{x:o},backend:n});const c=Object(r.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new $s(o.shape,u):new Ts(o.shape,u);return n.runWebGLProgram(c,[o],o.dtype)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Es{constructor(e,t){this.variableNames=["Image"],this.outputShape=[];const n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        uniform vec4 params;\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}getCustomSetupFunc(e,t,n,r){return(a,o)=>{null==this.paramsLoc&&(this.paramsLoc=a.getUniformLocationNoThrow(o,"params")),a.gl.uniform4f(this.paramsLoc,e,t,n,r)}}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ns={kernelName:r.RotateWithOffset,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:a}=e,{radians:o,fillValue:s,center:i}=t,u=n,c=new Es(a.shape,s),[l,d]=r.backend_util.getImageCenter(i,a.shape[1],a.shape[2]),h=c.getCustomSetupFunc(l,d,Math.sin(o),Math.cos(o));return u.runWebGLProgram(c,[a],a.dtype,h)}},_s=Tt({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),As={kernelName:r.Round,backendName:"webgl",kernelFunc:_s},Rs=Tt({opSnippet:"return inversesqrt(x);",cpuKernelImpl:Ve}),Fs={kernelName:r.Rsqrt,backendName:"webgl",kernelFunc:Rs};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class js{constructor(e,t,n,r,a,o,s=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=o;const i=xe(a.length),u=xe(o.length);let c="";1===n?c="i":2===n&&(c="i, j");const l=`getIndices(${c})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const h=`getUpdates(${d})`,p=t>1?"strides[j]":"strides";this.userCode=`\n        ${i} strides = ${i}(${a});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${l});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${h};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ds={kernelName:r.ScatterNd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:o,updates:s}=t,{shape:i}=a,{sliceRank:u,numUpdates:c,sliceSize:l,strides:d,outputSize:h}=r.backend_util.calculateShapes(s,o,i),p=[h/l,l];if(0===h)return n.makeTensorInfo(i,o.dtype);const f=Dt({inputs:{x:o},backend:n,attrs:{shape:[c,u]}}),m=Dt({inputs:{x:s},backend:n,attrs:{shape:[c,l]}}),b=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new js(c,u,f.shape.length,m.shape.length,d,p),x=n.runWebGLProgram(g,[m,f,b],m.dtype),v=Dt({inputs:{x:x},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(b),v}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ms{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[],s=[];for(let r=0;r<t.length;r++)s.push(""+n[r]),r<e&&o.push(""+n[r]);r=o.join(),a=s.join()}const o=xe(n);this.userCode=`\n      void main() {\n        ${o} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ps={kernelName:r.Select,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:o,e:s}=t,i=new Ms(a.shape.length,o.shape,o.shape.length);return n.runWebGLProgram(i,[a,o,s],Object(r.upcastType)(o.dtype,s.dtype))}},Bs=Tt({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${r.backend_util.SELU_SCALEALPHA};\n  float scale = ${r.backend_util.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),Ls={kernelName:r.Selu,backendName:"webgl",kernelFunc:Bs},Ws=Tt({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),zs={kernelName:r.Sigmoid,backendName:"webgl",kernelFunc:Ws},Vs=Tt({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),Us={kernelName:r.Sign,backendName:"webgl",kernelFunc:Vs},Gs=Tt({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),Hs={kernelName:r.Sin,backendName:"webgl",kernelFunc:Gs},Ks=Tt({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),qs={kernelName:r.Sinh,backendName:"webgl",kernelFunc:Ks},Xs=Tt({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),Ys={kernelName:r.Softplus,backendName:"webgl",kernelFunc:Xs},Qs={kernelName:r.SpaceToBatchND,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{blockShape:s,paddings:i}=a;r.util.assert(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const u=s.reduce((e,t)=>e*t),c=[[0,0]];c.push(...i);for(let e=1+s.length;e<o.shape.length;++e)c.push([0,0]);const l=[],d=as({inputs:{x:o},backend:n,attrs:{paddings:c,constantValue:0}}),h=r.backend_util.getReshaped(d.shape,s,u,!1),p=r.backend_util.getPermuted(h.length,s.length,!1),f=r.backend_util.getReshapedPermuted(d.shape,s,u,!1),m=Dt({inputs:{x:d},backend:n,attrs:{shape:h}}),b=Ht({inputs:{x:m},backend:n,attrs:{perm:p}}),g=Dt({inputs:{x:b},backend:n,attrs:{shape:f}});return l.push(d),l.push(m),l.push(b),l.forEach(e=>n.disposeIntermediateTensorInfo(e)),g}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zs={kernelName:r.SparseToDense,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:o,sparseValues:s,defaultValue:i}=t,{outputShape:u}=a,{sliceRank:c,numUpdates:l,strides:d,outputSize:h}=r.backend_util.calculateShapes(s,o,u),p=new js(l,c,o.shape.length,s.shape.length,d,[h,1],!1),f=n.runWebGLProgram(p,[s,o,i],s.dtype),m=Dt({inputs:{x:f},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(f),m}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Js={kernelName:r.SplitV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{numOrSizeSplits:s,axis:i}=a,u=r.util.parseAxisParam(i,o.shape)[0],c=r.backend_util.prepareSplitSize(o,s,u),l=o.shape.length,d=new Array(l).fill(0),h=o.shape.slice();return c.map(e=>{const t=[...h];t[u]=e;const r=Ln({inputs:{x:o},backend:n,attrs:{begin:d,size:t}});return d[u]+=e,r})}},ei=Tt({opSnippet:"return sqrt(x);"}),ti={kernelName:r.Sqrt,backendName:"webgl",kernelFunc:ei},ni=Tt({opSnippet:"return x * x;"}),ri={kernelName:r.Square,backendName:"webgl",kernelFunc:ni},ai=$t({opSnippet:"return (a - b) * (a - b);",packedOpSnippet:"return (a - b) * (a - b);"}),oi={kernelName:r.SquaredDifference,backendName:"webgl",kernelFunc:ai};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const si={kernelName:r.Step,backendName:"webgl",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function({inputs:e,attrs:t,backend:n}){const{x:r}=e,a=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,o=new st(r.shape,a);return n.runWebGLProgram(o,[r],r.dtype)}};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ii{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=xe(n.length),o=xe(n.length);let s="";if(1===r)s="coords * strides + begin";else{let e=0;s=n.map((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`)).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${o} coords = getOutputCoords();\n        setOutput(getX(${s}));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ui={kernelName:r.StridedSlice,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{begin:s,end:i,strides:u,beginMask:c,endMask:l,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:p}=a,{nonStrided:f,$begin:m,$strides:b,size:g,newShape:x,outShape:v}=r.slice_util.sliceInfo(o.shape,s,i,u,c,l,d,h,p),k=Dt({inputs:{x:o},backend:n,attrs:{shape:x}});let y;if(f){const e=Ln({inputs:{x:k},backend:n,attrs:{begin:m,size:g}});y=Dt({inputs:{x:e},backend:n,attrs:{shape:v}}),n.disposeIntermediateTensorInfo(e)}else if(v.some(e=>0===e))y=n.makeTensorInfo(v,o.dtype,[]);else{if(n.shouldExecuteOnCPU([k])){const e=n.texData.get(k.dataId).values,t=Object(r.buffer)(k.shape,k.dtype,e),a=He(v,t,b,m);y=n.makeTensorInfo(v,k.dtype,a.values)}else{const e=new ii(m,b,v);y=n.runWebGLProgram(e,[k],k.dtype)}}const w=Dt({inputs:{x:y},backend:n,attrs:{shape:v}});return n.disposeIntermediateTensorInfo(k),n.disposeIntermediateTensorInfo(y),w}},ci=Tt({opSnippet:"return tan(x);"}),li={kernelName:r.Tan,backendName:"webgl",kernelFunc:ci},di=Tt({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),hi={kernelName:r.Tanh,backendName:"webgl",kernelFunc:di};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class pi{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=xe(this.rank),a=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}function fi(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{reps:s}=a;if("string"===o.dtype){const e=n.readSync(o.dataId).map(e=>r.util.decodeString(e)),t=Object(r.buffer)(o.shape,o.dtype,e),a=qe(t,s);return n.makeTensorInfo(a.shape,a.dtype,a.values)}const i=new pi(o.shape,s);return n.runWebGLProgram(i,[o],o.dtype)}const mi={kernelName:r.Tile,backendName:"webgl",kernelFunc:fi};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bi={kernelName:r.TopK,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:o,sorted:s}=r,i=n.readSync(a.dataId),[u,c]=Xe(i,a.shape,a.dtype,o,s);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(c.shape,c.dtype,c.values)]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gi{constructor(e,t,n,r,a,o){this.variableNames=["Image","Transforms"],this.outputShape=o;const s="nearest"===n?1:2;let i;switch(r){case"constant":i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4;break;default:i=1}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${i} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${s} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xi={kernelName:r.Transform,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:o}=t,{interpolation:s,fillMode:i,fillValue:u,outputShape:c}=r,[l,d,h,p]=a.shape,[f,m]=null!=c?c:[d,h],b=new gi(d,h,s,i,u,[l,f,m,p]);return n.runWebGLProgram(b,[a,o],"float32")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vi={kernelName:r.Unique,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:o}=t;P(o,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const s=r.readSync(o.dataId),{outputValues:i,outputShape:u,indices:c}=Qe(s,a,o.shape,o.dtype);return[r.makeTensorInfo(u,o.dtype,i),r.makeTensorInfo([c.length],"int32",c)]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ki={kernelName:r.Unpack,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:o}=r;o<0&&(o+=a.shape.length);const s=a,i=s.shape.length,u=a.shape[o],c=new Array(i-1);let l=0;for(let e=0;e<i;e++)e!==o&&(c[l++]=s.shape[e]);const d=[],h=new Array(i).fill(0),p=s.shape.slice();p[o]=1;const f=new Array(u);for(let e=0;e<f.length;e++){h[o]=e;const t=Ln({inputs:{x:s},backend:n,attrs:{begin:h,size:p}}),r=Dt({inputs:{x:t},backend:n,attrs:{shape:c}});f[e]=r,d.push(t)}return d.forEach(e=>n.disposeIntermediateTensorInfo(e)),f}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yi{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,a=e.inSize,o=e.numSegments,s=o*Math.ceil(a/n);this.outputShape=[r,s];const i=4*Math.floor(n/4),u=n%4,c="\n        sumValue += dot(values, segFilter);\n    ";let l="";a%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let d="";a%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${d}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${o})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${o})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${c}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${c}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${c}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${c}\n        }\n        setOutput(sumValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wi=[co,ho,Xt,Yt,Zt,en,rn,sn,un,cn,pn,fn,bn,xn,wn,kn,On,Sn,$n,_n,An,Rn,Dn,zn,Vn,qn,Qn,er,rr,vt,dr,wr,Ir,gr,Cr,Tr,Or,Sr,Nr,Ar,Dr,Mr,Br,Gr,Hr,zr,qr,Yr,Zr,Jr,ta,ra,sa,ua,da,fa,ga,va,wa,Oa,$a,Ea,Na,Aa,Fa,Da,Pa,gt,Ba,ur,Wa,Va,Ga,wt,Ka,Xa,Ya,eo,Za,no,ao,so,fo,xo,go,yo,wo,Io,bo,Oo,Co,$o,No,Ao,Wo,jt,Vo,Go,Ko,Xo,Gn,Qo,es,ts,os,is,Ct,us,ls,Kn,jo,hs,bs,fs,Mt,vs,ys,Is,Cs,Ss,Ns,As,Fs,Ds,Ps,Ls,zs,Us,Hs,qs,Wn,Lo,Ys,Qs,Zs,Js,ti,ri,oi,si,ui,Po,Gt,li,hi,mi,bi,xi,Kt,vi,ki,{kernelName:r.UnsortedSegmentSum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o,segmentIds:s}=t,{numSegments:i}=a,u=o.shape.length,c=[];let l=0;const d=r.backend_util.getAxesPermutation([l],u);let h=o;null!=d&&(h=Ht({inputs:{x:o},backend:n,attrs:{perm:d}}),c.push(h),l=r.backend_util.getInnerMostAxes(1,u)[0]);const p=r.backend_util.segment_util.computeOutShape(h.shape,l,i),f=r.util.sizeFromShape([h.shape[l]]),m=Dt({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}});c.push(m);const b=Object(r.sumOutType)(o.dtype),g=(e,t,a,o,s)=>{const i=e.shape[0],u=e.shape[1],l=r.backend_util.segment_util.segOpComputeOptimalWindowSize(u,s),d=new yi({windowSize:l,inSize:u,batchSize:i,numSegments:s},t),h=n.compileAndRun(d,[e,a],o);if(c.push(h),h.shape[1]===s)return h;const p=cs({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),f=fi({inputs:{x:p},backend:n,attrs:{reps:[u/l]}});c.push(p),c.push(f);return g(h,t,f,o,s)},x=Dt({inputs:{x:g(m,"unsortedSegmentSum",s,b,i)},backend:n,attrs:{shape:p}});let v=x;if(null!=d){c.push(x);const e=r.backend_util.getUndoAxesPermutation(d);v=Ht({inputs:{x:v},backend:n,attrs:{perm:e}})}return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),v}},Jo];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */for(const e of wi)Object(r.registerKernel)(e);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */},function(e,t,n){"use strict";var r=n(0),a=n(7);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=r.kernel_impls.whereImpl;class s extends r.KernelBackend{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new r.DataStorage(this,Object(r.engine)())}nextDataId(){return s.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Object(r.env)().get("IS_NODE")&&r.backend_util.warn("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const a={id:this.nextDataId()};return this.data.set(a,{values:e,dtype:n,refCount:1}),a}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&r.util.isString(n[0])){const o=n.map(e=>r.util.encodeString(e));a=this.write(o,e,t)}else a=this.write(n,e,t);return{dataId:a,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return r.backend_util.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map(e=>r.util.decodeString(e))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Object(r.buffer)(e.shape,e.dtype,n)}makeOutput(e,t,n){const a=this.write(e,t,n);return Object(r.engine)().makeTensorFromDataId(a,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=r.util.now();e();return{kernelMs:r.util.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Object(a.a)([e],"where");const t=this.readSync(e.dataId);return o(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}s.nextDataId=0,
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Object(r.registerBackend)("cpu",()=>new s,1);var i=n(8);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u=Object(i.a)(r.Elu,e=>e>=0?e:Math.exp(e)-1),c={kernelName:r.Elu,backendName:"cpu",kernelFunc:u};var l=n(19);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d(e){const{inputs:t,backend:n,attrs:o}=e,{x:s}=t,{alpha:i}=o;Object(a.a)([s],"leakyRelu");const u=r.util.sizeFromShape(s.shape),c=n.data.get(s.dataId).values,l=r.util.getTypedArrayFromDType("float32",u);for(let e=0;e<c.length;e++)l[e]=c[e]<0?i*c[e]:c[e];return n.makeTensorInfo(s.shape,"float32",l)}const h={kernelName:r.LeakyRelu,backendName:"cpu",kernelFunc:d};var p=n(11);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f=Object(p.a)((e,t)=>e<0?t*e:e);function m(e){const{inputs:t,backend:n}=e,{x:r,alpha:o}=t;Object(a.a)([r,o],"prelu");const s=n.data.get(r.dataId).values,i=n.data.get(o.dataId).values,[u,c]=f(r.shape,o.shape,s,i,r.dtype);return n.makeTensorInfo(c,r.dtype,u)}const b={kernelName:r.Prelu,backendName:"cpu",kernelFunc:m},g=Object(i.a)(r.Relu,e=>Math.max(0,e)),x={kernelName:r.Relu,backendName:"cpu",kernelFunc:g},v=Object(i.a)(r.Relu6,e=>Math.min(Math.max(0,e),6)),k={kernelName:r.Relu6,backendName:"cpu",kernelFunc:v};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function y(e,t,n,r,a){if("linear"===n)return Object(l.a)({inputs:{x:t},backend:e});if("relu"===n)return g({inputs:{x:t},backend:e});if("elu"===n)return u({inputs:{x:t},backend:e});if("relu6"===n)return v({inputs:{x:t},backend:e});if("prelu"===n)return m({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return d({inputs:{x:t},backend:e,attrs:{alpha:a}});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}var w=n(25);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{shape:s}=a,i=r.util.sizeFromShape(o.shape),u=r.util.inferFromImplicitShape(s,i),c=r.util.sizeFromShape(u);r.util.assert(i===c,()=>`The new shape (${u}) has ${c} elements and the old shape (${o.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),n.incRef(o.dataId);const l=n.data.get(o.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=u,t.shape=u}return{dataId:o.dataId,shape:u,dtype:o.dtype}}const O={kernelName:r.Reshape,backendName:"cpu",kernelFunc:I};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C(e){const{inputs:t,backend:n,attrs:o}=e,{a:s,b:i}=t,{transposeA:u,transposeB:c}=o;Object(a.a)([s,i],"matMul");const l=s.shape.length,d=i.shape.length,h=u?s.shape[l-2]:s.shape[l-1],p=c?i.shape[d-1]:i.shape[d-2],f=u?s.shape[l-1]:s.shape[l-2],m=c?i.shape[d-2]:i.shape[d-1],b=s.shape.slice(0,-2),g=i.shape.slice(0,-2),x=r.util.sizeFromShape(b),v=r.util.sizeFromShape(g),k=x===v||1===x||1===v;r.util.assert(l>=2&&d>=2&&k,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${b}) and (${g}).`);const y=(x>v?s.shape.slice(0,-2):i.shape.slice(0,-2)).concat([f,m]);r.util.assert(h===p,()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${s.shape} and ${i.shape} and transposeA=${u} and transposeB=${c} must match.`);const w=c?[v,m,p]:[v,p,m],O=I({inputs:{x:s},backend:n,attrs:{shape:u?[x,h,f]:[x,f,h]}}),C=I({inputs:{x:i},backend:n,attrs:{shape:w}}),T=u?O.shape[1]:O.shape[2],$=u?O.shape[2]:O.shape[1],S=c?C.shape[1]:C.shape[2],E=Math.max(x,v),N=n.data.get(O.dataId).values,_=n.data.get(C.dataId).values,A=r.util.computeStrides(O.shape),R=r.util.computeStrides(C.shape),[F,j,D]=u?[A[0],1,A[1]]:[A[0],A[1],1],[M,P,B]=c?[1,R[1],R[0]]:[R[1],1,R[0]],L=$*S,W=Object(r.buffer)([E,$,S],O.dtype),z=W.values,V=n.blockSize;for(let e=0;e<E;e++)for(let t=0;t<$;t+=V)for(let n=0;n<S;n+=V)for(let r=0;r<T;r+=V){const a=Math.min(t+V,$),o=Math.min(n+V,S),s=Math.min(r+V,T);for(let i=t;i<a;i++)for(let t=n;t<o;t++){let n=0;for(let a=r;a<s;a++){const r=Math.min(e,x-1)*F,o=Math.min(e,v-1)*B;n+=N[r+i*j+a*D]*_[a*M+t*P+o]}z[e*L+(i*S+t)]+=n}}return n.disposeIntermediateTensorInfo(O),n.disposeIntermediateTensorInfo(C),n.makeTensorInfo(y,W.dtype,W.values)}const T={kernelName:r.BatchMatMul,backendName:"cpu",kernelFunc:C};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $={kernelName:r._FusedMatMul,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:o,bias:s,preluActivationWeights:i}=t,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=r;let h,p,f;const m=[];h=C({inputs:{a:a,b:o},attrs:{transposeA:u,transposeB:c},backend:n}),s&&(p=Object(w.a)({inputs:{a:h,b:s},backend:n}),m.push(h),h=p),l&&(f=y(n,h,l,i,d),m.push(h),h=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return h}};var S=n(48);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E=Object(i.a)(r.Acos,e=>Math.acos(e)),N={kernelName:r.Acos,backendName:"cpu",kernelFunc:E},_=Object(i.a)(r.Acosh,e=>Math.acosh(e)),A={kernelName:r.Acosh,backendName:"cpu",kernelFunc:_};const R={kernelName:r.AddN,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n}=e,o=t;Object(a.a)(t,"addN");const s=o.map(e=>n.data.get(e.dataId).values),i=Object(r.buffer)(o[0].shape,o[0].dtype),u=i.values;for(let e=0;e<o.length;e++){const t=s[e];for(let e=0;e<u.length;e++)u[e]+=t[e]}return n.makeTensorInfo(i.shape,i.dtype,i.values)}};var F=n(16);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j={kernelName:r.All,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{x:s}=t,{axis:i,keepDims:u}=o;Object(a.a)(s,"all");const c=r.util.parseAxisParam(i,s.shape);let l=c;const d=r.backend_util.getAxesPermutation(l,s.shape.length);let h=s;null!=d&&(h=Object(F.a)({inputs:{x:s},backend:n,attrs:{perm:d}}),l=r.backend_util.getInnerMostAxes(l.length,s.shape.length)),r.backend_util.assertAxesAreInnerMostDims("all",l,h.shape.length);const[p,f]=r.backend_util.computeOutAndReduceShapes(h.shape,l),m=r.util.sizeFromShape(f),b=r.util.makeZerosTypedArray(r.util.sizeFromShape(p),h.dtype),g=n.data.get(h.dataId).values;for(let e=0;e<b.length;++e){const t=e*m;let n=g[t];for(let e=0;e<m;++e){const r=g[t+e];n=n&&r}b[e]=n}null!=d&&n.disposeIntermediateTensorInfo(h);const x=n.makeTensorInfo(p,h.dtype,b);if(u){const e=I({inputs:{x:x},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(p,c)}});return n.disposeIntermediateTensorInfo(x),e}return x}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D={kernelName:r.Any,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{x:s}=t,{axis:i,keepDims:u}=o;Object(a.a)(s,"any");const c=r.util.parseAxisParam(i,s.shape);let l=c;const d=r.backend_util.getAxesPermutation(l,s.shape.length);let h=s;null!=d&&(h=Object(F.a)({inputs:{x:s},backend:n,attrs:{perm:d}}),l=r.backend_util.getInnerMostAxes(l.length,s.shape.length)),r.backend_util.assertAxesAreInnerMostDims("any",l,h.shape.length);const[p,f]=r.backend_util.computeOutAndReduceShapes(h.shape,l),m=r.util.sizeFromShape(f),b=r.util.makeZerosTypedArray(r.util.sizeFromShape(p),h.dtype),g=n.data.get(h.dataId).values;for(let e=0;e<b.length;++e){const t=e*m;let n=g[t];for(let e=0;e<m;++e){const r=g[t+e];n=n||r}b[e]=n}null!=d&&n.disposeIntermediateTensorInfo(h);const x=n.makeTensorInfo(p,h.dtype,b);if(u){const e=I({inputs:{x:x},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(p,c)}});return n.disposeIntermediateTensorInfo(x),e}return x}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M={kernelName:r.ArgMax,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{x:s}=t,{axis:i}=o;Object(a.a)(s,"argMax");let u=r.util.parseAxisParam(i,s.shape);const c=r.backend_util.getAxesPermutation(u,s.shape.length);let l=s;const d=[];null!=c&&(l=Object(F.a)({inputs:{x:s},backend:n,attrs:{perm:c}}),d.push(l),u=r.backend_util.getInnerMostAxes(u.length,l.shape.length)),u=[u[0]],r.backend_util.assertAxesAreInnerMostDims("argMax",u,l.shape.length);const[h,p]=r.backend_util.computeOutAndReduceShapes(l.shape,u),f=r.util.sizeFromShape(h),m=r.util.makeZerosTypedArray(f,"int32"),b=r.util.sizeFromShape(p),g=n.data.get(l.dataId).values;for(let e=0;e<m.length;++e){const t=e*b;let n=g[t],r=0;for(let e=0;e<b;++e){const a=g[t+e];a>n&&(n=a,r=e)}m[e]=r}return d.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(h,"int32",m)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P={kernelName:r.ArgMin,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{x:s}=t,{axis:i}=o;Object(a.a)(s,"argMin");let u=r.util.parseAxisParam(i,s.shape);const c=r.backend_util.getAxesPermutation(u,s.shape.length);let l=s;const d=[];null!=c&&(l=Object(F.a)({inputs:{x:s},backend:n,attrs:{perm:c}}),d.push(l),u=r.backend_util.getInnerMostAxes(u.length,l.shape.length)),u=[u[0]],r.backend_util.assertAxesAreInnerMostDims("argMin",u,l.shape.length);const[h,p]=r.backend_util.computeOutAndReduceShapes(l.shape,u),f=r.util.sizeFromShape(h),m=r.util.makeZerosTypedArray(f,"int32"),b=r.util.sizeFromShape(p),g=n.data.get(l.dataId).values;for(let e=0;e<m.length;++e){const t=e*b;let n=g[t],r=0;for(let e=0;e<b;++e){const a=g[t+e];a<n&&(n=a,r=e)}m[e]=r}return d.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(h,"int32",m)}},B=Object(i.a)(r.Asin,e=>Math.asin(e)),L={kernelName:r.Asin,backendName:"cpu",kernelFunc:B},W=Object(i.a)(r.Asinh,e=>Math.asinh(e)),z={kernelName:r.Asinh,backendName:"cpu",kernelFunc:W},V=Object(i.a)(r.Atan,e=>Math.atan(e)),U={kernelName:r.Atan,backendName:"cpu",kernelFunc:V};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var G=n(12);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H=Object(p.a)((e,t)=>Math.atan2(e,t)),K=Object(G.a)(r.Atan2,H),q={kernelName:r.Atan2,backendName:"cpu",kernelFunc:K},X=Object(i.a)(r.Atanh,e=>Math.atanh(e)),Y={kernelName:r.Atanh,backendName:"cpu",kernelFunc:X};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Q(e,t,n,a,o,s){const i=o.strideHeight,u=o.strideWidth,c=o.dilationHeight,l=o.dilationWidth,d=o.effectiveFilterHeight,h=o.effectiveFilterWidth,p=o.padInfo.top,f=o.padInfo.left,m="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,b=Object(r.buffer)(o.outShape,n),g=b.values,x=o.outShape[1]*o.outShape[2]*o.outShape[3],v=o.outShape[2]*o.outShape[3],k=o.outShape[3];for(let t=0;t<o.batchSize;++t){const n=t*x,r=t*a[0];for(let t=0;t<o.inChannels;++t)for(let b=0;b<o.outHeight;++b){const x=b*i-p,y=Math.max(0,x),w=Math.min(o.inHeight,d+x),I=n+b*v;for(let n=0;n<o.outWidth;++n){const i=n*u-f,d=Math.max(0,i),p=Math.min(o.inWidth,h+i);let b=m,x=0,v=0;for(let n=y;n<w;n+=c){const o=r+n*a[1];for(let n=d;n<p;n+=l){const r=e[o+n*a[2]+t];"max"===s&&r>b?b=r:"avg"===s&&(x+=r,v++)}if(isNaN(b))break}g[I+n*k+t]="avg"===s?x/v:b}}}return b}function Z(e,t,n,a,o=!1,s=!1){const i=Object(r.buffer)(a.outShape,"int32"),u=a.strideHeight,c=a.strideWidth,l=a.dilationHeight,d=a.dilationWidth,h=a.effectiveFilterHeight,p=a.effectiveFilterWidth,f=a.padInfo.top,m=a.padInfo.left,b=Object(r.buffer)(t,n,e);for(let e=0;e<a.batchSize;++e)for(let t=0;t<a.inChannels;++t)for(let n=0;n<a.outHeight;++n){const r=n*u-f;let g=r;for(;g<0;)g+=l;const x=Math.min(a.inHeight,h+r);for(let u=0;u<a.outWidth;++u){const h=u*c-m;let f=h;for(;f<0;)f+=d;const v=Math.min(a.inWidth,p+h);let k=Number.NEGATIVE_INFINITY,y=-1;for(let n=g;n<x;n+=l){const i=n-r;for(let r=f;r<v;r+=d){const u=r-h,c=b.get(e,n,r,t);c>k&&(k=c,y=o?s?((e*a.inHeight+n)*a.inWidth+r)*a.inChannels+t:(n*a.inWidth+r)*a.inChannels+t:i*p+u)}}i.set(y,e,n,u,t)}}return i}function J(e,t,n,a,o,s){const i=o.strideDepth,u=o.strideHeight,c=o.strideWidth,l=o.dilationDepth,d=o.dilationHeight,h=o.dilationWidth,p=o.effectiveFilterDepth,f=o.effectiveFilterHeight,m=o.effectiveFilterWidth,b=o.padInfo.front,g=o.padInfo.top,x=o.padInfo.left,v="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,k=Object(r.buffer)(o.outShape,n),y=k.values,w=o.outShape[1]*o.outShape[2]*o.outShape[3]*o.outShape[4],I=o.outShape[2]*o.outShape[3]*o.outShape[4],O=o.outShape[3]*o.outShape[4],C=o.outShape[4];for(let t=0;t<o.batchSize;++t){const n=t*w,r=t*a[0];for(let t=0;t<o.inChannels;++t)for(let k=0;k<o.outDepth;++k){const w=k*i-b;let T=w;for(;T<0;)T+=l;const $=Math.min(o.inDepth,p+w),S=n+k*I;for(let n=0;n<o.outHeight;++n){const i=n*u-g;let p=i;for(;p<0;)p+=d;const b=Math.min(o.inHeight,f+i),k=S+n*O;for(let n=0;n<o.outWidth;++n){const i=n*c-x;let u=i;for(;u<0;)u+=h;const f=Math.min(o.inWidth,m+i),g=k+n*C;let w=v,I=0,O=0;for(let n=T;n<$;n+=l){const o=r+n*a[1];for(let n=p;n<b;n+=d){const r=o+n*a[2];for(let n=u;n<f;n+=h){const o=e[r+n*a[3]+t];if("max"===s&&o>w?w=o:"avg"===s&&(I+=o,O++),isNaN(w))break}if(isNaN(w))break}if(isNaN(w))break}y[g+t]="avg"===s?I/O:w}}}}return k}const ee={kernelName:r.AvgPool,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:o}=e,{x:s}=t;Object(a.a)(s,"avgPool");const{filterSize:i,strides:u,pad:c,dimRoundingMode:d}=o;r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(u,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${u} and dilations '1'`);const h=r.backend_util.computePool2DInfo(s.shape,i,u,1,c,d);let p;if(1===h.filterWidth&&1===h.filterHeight&&r.util.arraysEqual(h.inShape,h.outShape))p=Object(l.a)({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=r.util.computeStrides(s.shape),a=Q(e,s.shape,s.dtype,t,h,"avg");p=n.makeTensorInfo(h.outShape,s.dtype,a.values)}return p}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const te={kernelName:r.AvgPool3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{x:s}=t,{filterSize:i,strides:u,pad:c,dimRoundingMode:l,dataFormat:d}=o;Object(a.a)(s,"avgPool3d");const h=r.backend_util.computePool3DInfo(s.shape,i,u,1,c,l,d),p=J(n.data.get(s.dataId).values,s.shape,s.dtype,r.util.computeStrides(s.shape),h,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ne={kernelName:r.AvgPool3DGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{dy:s,input:i}=t,{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=o;Object(a.a)([s,i],"avgPool3DGrad");const h=r.backend_util.computePool3DInfo(i.shape,u,c,1,l,d),p=h.strideDepth,f=h.strideHeight,m=h.strideWidth,b=h.filterDepth,g=h.filterHeight,x=h.filterWidth,v=h.dilationDepth,k=h.dilationHeight,y=h.dilationWidth,w=h.effectiveFilterDepth,I=h.effectiveFilterHeight,O=h.effectiveFilterWidth,C=w-1-h.padInfo.front,T=O-1-h.padInfo.left,$=I-1-h.padInfo.top,S=Object(r.buffer)(i.shape,"float32"),E=1/(b*g*x),N=n.bufferSync(s);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inDepth;++n)for(let r=0;r<h.inHeight;++r)for(let a=0;a<h.inWidth;++a){const o=n-C,s=r-$,i=a-T;let u=0;for(let n=0;n<w;n+=v){const r=(o+n)/p;if(!(r<0||r>=h.outDepth||Math.floor(r)!==r))for(let n=0;n<I;n+=k){const a=(s+n)/f;if(!(a<0||a>=h.outHeight||Math.floor(a)!==a))for(let n=0;n<O;n+=y){const o=(i+n)/m;if(o<0||o>=h.outWidth||Math.floor(o)!==o)continue;u+=N.get(e,r,a,o,t)}}}S.set(u*E,e,n,r,a,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const re={kernelName:r.AvgPoolGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{dy:s,input:i}=t,u=i;Object(a.a)([s,i],"avgPoolGrad");const{filterSize:c,strides:l,pad:d}=o,h=r.backend_util.computePool2DInfo(u.shape,c,l,1,d),p=h.strideHeight,f=h.strideWidth,m=h.filterHeight,b=h.filterWidth,g=h.dilationHeight,x=h.dilationWidth,v=h.effectiveFilterHeight,k=h.effectiveFilterWidth,y=k-1-h.padInfo.left,w=v-1-h.padInfo.top,I=Object(r.buffer)(u.shape,"float32"),O=1/(m*b),C=n.data.get(s.dataId).values,T=Object(r.buffer)(s.shape,"float32",C);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inHeight;++n)for(let r=0;r<h.inWidth;++r){const a=n-w,o=r-y;let s=0;for(let n=0;n<v;n+=g){const r=(a+n)/p;if(!(r<0||r>=h.outHeight||Math.floor(r)!==r))for(let n=0;n<k;n+=x){const a=(o+n)/f;if(a<0||a>=h.outWidth||Math.floor(a)!==a)continue;s+=T.get(e,r,a,t)}}I.set(s*O,e,n,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ae={kernelName:r.FusedBatchNorm,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{x:s,scale:i,offset:u,mean:c,variance:l}=t;r.util.assert(c.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),r.util.assert(null==u||c.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),r.util.assert(null==i||c.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Object(a.a)([s,c,l,i,u],"batchNorm");let{varianceEpsilon:d}=o;null==d&&(d=.001);const h=n.data.get(s.dataId).values,p=n.data.get(c.dataId).values,f=n.data.get(l.dataId).values,m=i?n.data.get(i.dataId).values:new Float32Array([1]),b=u?n.data.get(u.dataId).values:new Float32Array([0]),g=new Float32Array(h.length),x=b.length,v=m.length,k=f.length,y=p.length;let w=0,I=0,O=0,C=0;for(let e=0;e<h.length;++e)g[e]=b[w++]+(h[e]-p[I++])*m[O++]/Math.sqrt(f[C++]+d),w>=x&&(w=0),I>=y&&(I=0),O>=v&&(O=0),C>=k&&(C=0);return n.makeTensorInfo(s.shape,s.dtype,g)}};var oe=n(21);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const se={kernelName:r.BatchToSpaceND,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{x:s}=t,{blockShape:i,crops:u}=o;Object(a.a)([s],"batchToSpaceND");const c=i.reduce((e,t)=>e*t),l=r.backend_util.getReshaped(s.shape,i,c),d=r.backend_util.getPermuted(l.length,i.length),h=r.backend_util.getReshapedPermuted(s.shape,i,c),p=r.backend_util.getSliceBeginCoords(u,i.length),f=r.backend_util.getSliceSize(h,u,i.length),m=I({inputs:{x:s},backend:n,attrs:{shape:l}}),b=Object(F.a)({inputs:{x:m},backend:n,attrs:{perm:d}}),g=I({inputs:{x:b},backend:n,attrs:{shape:h}}),x=Object(oe.a)({inputs:{x:g},backend:n,attrs:{begin:p,size:f}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),x}};var ie=n(31);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ue={kernelName:r.Bincount,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:o}=t,{size:s}=r,i=n.data.get(a.dataId).values,u=n.data.get(o.dataId).values,c=Object(ie.a)(i,u,o.dtype,o.shape,s);return n.makeTensorInfo([s],o.dtype,c)}};var ce=n(27),le=n(49);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const de=Object(i.a)(r.ClipByValue,(e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}),he={kernelName:r.ClipByValue,backendName:"cpu",kernelFunc:de};var pe=n(17);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fe={kernelName:r.ComplexAbs,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,a=new Float32Array(r.util.sizeFromShape(t.shape)),o=n.data.get(t.dataId),s=o.complexTensorInfos.real,i=o.complexTensorInfos.imag,u=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values;for(let e=0;e<u.length;e++){const t=u[e],n=c[e];a[e]=Math.hypot(t,n)}return n.makeOutput(a,t.shape,"float32")}};var me=n(50);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function be(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,o=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,o)}const ge={kernelName:r.Imag,backendName:"cpu",kernelFunc:be};var xe=n(23);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ve(e){const{inputs:t,backend:n,attrs:a}=e,{axis:o}=a,s=r.util.parseAxisParam(o,t[0].shape)[0];let i=r.backend_util.computeOutShape(t.map(e=>e.shape),s);if(0===r.util.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const u=t.filter(e=>r.util.sizeFromShape(e.shape)>0);if(1===u.length)return Object(l.a)({inputs:{x:u[0]},backend:n});const c=u.map(e=>e.shape);if(r.backend_util.assertParamsConsistent(c,s),"complex64"===u[0].dtype){const e=u.map(e=>Object(xe.a)({inputs:{input:e},backend:n})),t=u.map(e=>be({inputs:{input:e},backend:n})),r=ve({inputs:e,backend:n,attrs:{axis:s}}),a=ve({inputs:t,backend:n,attrs:{axis:s}}),o=Object(pe.a)({inputs:{real:r,imag:a},backend:n});return e.forEach(e=>n.disposeIntermediateTensorInfo(e)),t.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),o}const d=u.map(e=>{const t=r.util.sizeFromShape(e.shape.slice(s));return I({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})}),h=d.map(e=>({vals:n.data.get(e.dataId).values,shape:e.shape}));i=r.backend_util.computeOutShape(d.map(e=>e.shape),1);const p=1===d[0].shape[0],f=Object(me.a)(h,i,t[0].dtype,p),m=r.backend_util.computeOutShape(u.map(e=>e.shape),s),b=n.makeTensorInfo(m,t[0].dtype,f);return d.forEach(e=>n.disposeIntermediateTensorInfo(e)),b}const ke={kernelName:r.Concat,backendName:"cpu",kernelFunc:ve};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ye(e){const{inputs:t,backend:n,attrs:o}=e,{x:s,filter:i}=t,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h}=o;Object(a.a)([s,i],"conv2d");const p=r.backend_util.convertConv2DDataFormat(l),f=r.backend_util.computeConv2DInfo(s.shape,i.shape,u,d,c,h,!1,p),m=f.filterHeight,b=f.filterWidth,g=f.dilationHeight,x=f.dilationWidth,v=f.padInfo.left,k=f.padInfo.top,y="channelsLast"===f.dataFormat,w=new r.TensorBuffer(f.outShape,s.dtype),I=r.util.computeStrides(s.shape),O=r.util.computeStrides(i.shape),C=I[0],T=y?I[1]:I[2],$=y?I[2]:1,S=y?1:I[1],E=w.strides[0],N=y?w.strides[1]:w.strides[2],_=y?w.strides[2]:1,A=y?1:w.strides[1],R=n.data.get(s.dataId).values,F=n.data.get(i.dataId).values,j=w.values;for(let e=0;e<f.batchSize;++e){const t=e*C,n=e*E;for(let e=0;e<f.outHeight;++e){const r=n+e*N,a=e*f.strideHeight-k;for(let e=0;e<m;++e){const n=a+e*g;if(n<0||n>=f.inHeight)continue;const o=e*O[0],s=t+n*T;for(let e=0;e<f.outWidth;++e){const t=r+e*_,n=e*f.strideWidth-v;for(let e=0;e<b;++e){const r=n+e*x;if(r<0||r>=f.inWidth)continue;const a=s+r*$;let i=o+e*O[1];for(let e=0;e<f.inChannels;++e){const n=R[a+e*S];for(let e=0;e<f.outChannels;++e)j[t+e*A]+=n*F[i+e];i+=f.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,j)}const we={kernelName:r.Conv2D,backendName:"cpu",kernelFunc:ye};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ie={kernelName:r.Conv2DBackpropFilter,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{x:s,dy:i}=t,{strides:u,pad:c,dataFormat:l,dimRoundingMode:d,filterShape:h}=o;Object(a.a)([s,i],"conv2dBackpropFilter");const p=r.backend_util.convertConv2DDataFormat(l),f=r.backend_util.computeConv2DInfo(s.shape,h,u,1,c,d,!1,p),{strideHeight:m,strideWidth:b,filterHeight:g,filterWidth:x}=f,v="channelsLast"===f.dataFormat,k=new r.TensorBuffer(f.filterShape,"float32"),y=f.padInfo.left,w=f.padInfo.top,I=n.data.get(s.dataId).values,O=n.data.get(i.dataId).values,C=new r.TensorBuffer(s.shape,s.dtype,I),T=new r.TensorBuffer(i.shape,i.dtype,O);for(let e=0;e<g;++e){const t=Math.max(0,Math.ceil((w-e)/m)),n=Math.min(f.outHeight,(f.inHeight+w-e)/m);for(let r=0;r<x;++r){const a=Math.max(0,Math.ceil((y-r)/b)),o=Math.min(f.outWidth,(f.inWidth+y-r)/b);for(let s=0;s<f.inChannels;++s)for(let i=0;i<f.outChannels;++i){let u=0;for(let c=0;c<f.batchSize;++c)for(let l=t;l<n;++l){const t=e+l*m-w;for(let e=a;e<o;++e){const n=r+e*b-y;u+=v?C.get(c,t,n,s)*T.get(c,l,e,i):C.get(c,s,t,n)*T.get(c,i,l,e)}}k.set(u,e,r,s,i)}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oe={kernelName:r.Conv2DBackpropInput,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{dy:s,filter:i}=t,{inputShape:u,strides:c,pad:l,dataFormat:d,dimRoundingMode:h}=o;Object(a.a)([s,i],"conv2dBackpropInput");const p=r.util.computeStrides(i.shape),f=r.util.computeStrides(s.shape);let m=r.backend_util.convertConv2DDataFormat(d);const b=r.backend_util.computeConv2DInfo(u,i.shape,c,1,l,h,!1,m),g=new r.TensorBuffer(b.inShape,"float32"),x=g.values,v=n.data.get(s.dataId).values,k=n.data.get(i.dataId).values,[y,w,I]=p,{batchSize:O,filterHeight:C,filterWidth:T,inChannels:$,inHeight:S,inWidth:E,outChannels:N,outHeight:_,outWidth:A,strideHeight:R,strideWidth:F}=b;m=b.dataFormat;const j=C-1-b.padInfo.top,D=T-1-b.padInfo.left,M="channelsLast"===m,P=g.strides[0],B=M?g.strides[1]:g.strides[2],L=M?g.strides[2]:1,W=M?1:g.strides[1],z=f[0],V=M?f[1]:f[2],U=M?f[2]:1,G=M?1:f[1];for(let e=0;e<O;++e)for(let t=0;t<$;++t)for(let n=0;n<S;++n){const r=n-j,a=Math.max(0,Math.ceil(r/R)),o=Math.min(_,(C+r)/R);for(let s=0;s<E;++s){const i=s-D,u=Math.max(0,Math.ceil(i/F)),c=Math.min(A,(T+i)/F);let l=0;for(let n=a;n<o;++n){const a=n*R-r;for(let r=u;r<c;++r){const o=z*e+V*n+U*r,s=y*(C-1-a)+w*(T-1-(r*F-i))+I*t;for(let e=0;e<N;++e){l+=v[o+G*e]*k[s+e]}}}x[P*e+B*n+L*s+W*t]=l}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ce={kernelName:r.Conv3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{x:s,filter:i}=t,{strides:u,pad:c,dilations:l}=o;Object(a.a)([s,i],"conv3d");const d=r.backend_util.computeConv3DInfo(s.shape,i.shape,u,l,c),{filterDepth:h,filterHeight:p,filterWidth:f,dilationDepth:m,dilationHeight:b,dilationWidth:g,padInfo:x}=d,v=x.front,k=x.left,y=x.top,w=new r.TensorBuffer(d.outShape,s.dtype),I=n.data.get(s.dataId).values,O=n.data.get(i.dataId).values,C=w.values,T=r.util.computeStrides(s.shape),$=r.util.computeStrides(i.shape);for(let e=0;e<d.batchSize;++e){const t=e*T[0],n=e*w.strides[0];for(let e=0;e<d.outDepth;++e){const r=n+e*w.strides[1],a=e*d.strideDepth-v;for(let e=0;e<h;++e){const n=a+e*m;if(n<0||n>=d.inDepth)continue;const o=e*$[0],s=t+n*T[1];for(let e=0;e<d.outHeight;++e){const t=r+e*w.strides[2],n=e*d.strideHeight-y;for(let e=0;e<p;++e){const r=n+e*b;if(r<0||r>=d.inHeight)continue;const a=o+e*$[1],i=s+r*T[2];for(let e=0;e<d.outWidth;++e){const n=t+e*d.outChannels,r=e*d.strideWidth-k;for(let e=0;e<f;++e){const t=r+e*g;if(t<0||t>=d.inWidth)continue;const o=a+e*$[2],s=i+t*d.inChannels;let u=o;for(let e=0;e<d.inChannels;++e){const t=I[s+e];for(let e=0;e<d.outChannels;++e)C[n+e]+=t*O[u+e];u+=d.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Te={kernelName:r.Conv3DBackpropFilterV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{x:s,dy:i}=t,{strides:u,pad:c,filterShape:l}=o;Object(a.a)([s,i],"conv3dBackpropFilterV2");const d=r.util.computeStrides(s.shape),h=r.util.computeStrides(i.shape),p=r.backend_util.computeConv3DInfo(s.shape,l,u,1,c),f=p.strideDepth,m=p.strideHeight,b=p.strideWidth,g=p.filterDepth,x=p.filterHeight,v=p.filterWidth,k=new r.TensorBuffer(p.filterShape,"float32"),y=k.values,[w,I,O,C]=k.strides,T=n.data.get(i.dataId).values,[$,S,E,N]=h,_=n.data.get(s.dataId).values,[A,R,F,j]=d,D=p.padInfo.front,M=p.padInfo.left,P=p.padInfo.top;for(let e=0;e<g;++e){const t=Math.max(0,Math.ceil((D-e)/f)),n=Math.min(p.outDepth,(p.inDepth+D-e)/f),r=e*w;for(let a=0;a<x;++a){const o=Math.max(0,Math.ceil((P-a)/m)),s=Math.min(p.outHeight,(p.inHeight+P-a)/m),i=a*I+r;for(let r=0;r<v;++r){const u=Math.max(0,Math.ceil((M-r)/b)),c=Math.min(p.outWidth,(p.inWidth+M-r)/b),l=r*O+i;for(let i=0;i<p.inChannels;++i){const d=i*C+l;for(let l=0;l<p.outChannels;++l){let h=0;for(let d=0;d<p.batchSize;++d){const p=d*A,g=d*$;for(let d=t;d<n;++d){const t=(e+d*f-D)*R+p,n=d*S+g;for(let e=o;e<s;++e){const o=(a+e*m-P)*F+t,s=e*E+n;for(let e=u;e<c;++e){const t=e*N+s;h+=_[(r+e*b-M)*j+o+i]*T[t+l]}}}}y[d+l]=h}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $e={kernelName:r.Conv3DBackpropInputV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{dy:s,filter:i}=t,{pad:u,strides:c,inputShape:l}=o;Object(a.a)([s],"conv3dBackpropInputV2");const d=r.util.computeStrides(s.shape),h=r.util.computeStrides(i.shape),p=r.backend_util.computeConv3DInfo(l,i.shape,c,1,u),f=new r.TensorBuffer(p.inShape,"float32"),m=f.values,[b,g,x,v]=f.strides,k=n.data.get(s.dataId).values,[y,w,I,O]=d,C=n.data.get(i.dataId).values,[T,$,S,E]=h,{batchSize:N,filterDepth:_,filterHeight:A,filterWidth:R,inChannels:F,inDepth:j,inHeight:D,inWidth:M,outChannels:P,outDepth:B,outHeight:L,outWidth:W,strideDepth:z,strideHeight:V,strideWidth:U}=p,G=_-1-p.padInfo.front,H=A-1-p.padInfo.top,K=R-1-p.padInfo.left;for(let e=0;e<N;++e)for(let t=0;t<F;++t)for(let n=0;n<j;++n){const r=n-G,a=Math.max(0,Math.ceil(r/z)),o=Math.min(B,(_+r)/z);for(let s=0;s<D;++s){const i=s-H,u=Math.max(0,Math.ceil(i/V)),c=Math.min(L,(A+i)/V);for(let l=0;l<M;++l){const d=l-K,h=Math.max(0,Math.ceil(d/U)),p=Math.min(W,(R+d)/U);let f=0;for(let n=a;n<o;++n){const a=n*z-r;for(let r=u;r<c;++r){const o=r*V-i;for(let s=h;s<p;++s){const i=y*e+w*n+I*r+O*s,u=T*(_-1-a)+$*(A-1-o)+S*(R-1-(s*U-d))+E*t;for(let e=0;e<P;++e){f+=k[i+e]*C[u+e]}}}}m[b*e+g*n+x*s+v*l+t]=f}}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},Se=Object(i.a)(r.Cos,e=>Math.cos(e)),Ee={kernelName:r.Cos,backendName:"cpu",kernelFunc:Se},Ne=Object(i.a)(r.Cosh,e=>Math.cosh(e)),_e={kernelName:r.Cosh,backendName:"cpu",kernelFunc:Ne};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ae={kernelName:r.CropAndResize,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:a}=e,{image:o,boxes:s,boxInd:i}=t,{cropSize:u,method:c,extrapolationValue:l}=a,[d,h,p,f]=o.shape,m=s.shape[0],[b,g]=u,x=Object(r.buffer)([m,b,g,f],"float32"),v=n.data.get(s.dataId).values,k=n.data.get(i.dataId).values,y=n.data.get(o.dataId).values,w=r.util.computeStrides(o.shape),I=r.util.computeStrides(x.shape);for(let e=0;e<m;e++){const t=4*e,n=v[t],r=v[t+1],a=v[t+2],o=v[t+3],s=k[e];if(s>=d)continue;const i=b>1?(a-n)*(h-1)/(b-1):0,u=g>1?(o-r)*(p-1)/(g-1):0;for(let t=0;t<b;t++){const d=b>1?n*(h-1)+t*i:.5*(n+a)*(h-1);if(d<0||d>h-1)for(let n=0;n<g;n++)for(let r=0;r<f;r++){const a=r+n*I[2]+t*I[1]+e*I[0];x.values[a]=l}else if("bilinear"===c){const n=Math.floor(d),a=Math.ceil(d),i=d-n;for(let c=0;c<g;c++){const d=g>1?r*(p-1)+c*u:.5*(r+o)*(p-1);if(d<0||d>p-1){for(let n=0;n<f;n++){const r=n+c*I[2]+t*I[1]+e*I[0];x.values[r]=l}continue}const h=Math.floor(d),m=Math.ceil(d),b=d-h;for(let r=0;r<f;r++){let o=r+h*w[2]+n*w[1]+s*w[0];const u=y[o];o=r+m*w[2]+n*w[1]+s*w[0];const l=y[o];o=r+h*w[2]+a*w[1]+s*w[0];const d=y[o];o=r+m*w[2]+a*w[1]+s*w[0];const p=u+(l-u)*b,f=d+(y[o]-d)*b;o=r+c*I[2]+t*I[1]+e*I[0],x.values[o]=p+(f-p)*i}}}else for(let n=0;n<g;++n){const a=g>1?r*(p-1)+n*u:.5*(r+o)*(p-1);if(a<0||a>p-1){for(let r=0;r<f;r++){const a=r+n*I[2]+t*I[1]+e*I[0];x.values[a]=l}continue}const i=Math.round(a),c=Math.round(d);for(let r=0;r<f;r++){const a=r+i*w[2]+c*w[1]+s*w[0],o=r+n*I[2]+t*I[1]+e*I[0];x.values[o]=y[a]}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Re={kernelName:r.Cumsum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{x:s}=t,{axis:i,exclusive:u,reverse:c}=o;Object(a.a)(s,"cumsum");const l=r.backend_util.getAxesPermutation([i],s.shape.length);let d=s;null!=l&&(d=Object(F.a)({inputs:{x:s},backend:n,attrs:{perm:l}}));const h=r.backend_util.getInnerMostAxes(1,s.shape.length)[0];if(h!==d.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${d.shape.length-1} but got axis=${h}`);const p=Object(r.upcastType)(d.dtype,"int32"),f=r.util.makeZerosTypedArray(r.util.sizeFromShape(d.shape),p),m=n.data.get(d.dataId).values,b=d.shape[d.shape.length-1],g=c?(e,t)=>e+b-t-1:(e,t)=>e+t;for(let e=0;e<m.length;e+=b)for(let t=0;t<b;t++){const n=g(e,t);if(0===t)f[n]=u?0:m[n];else{const r=g(e,t-1);f[n]=u?m[r]+f[r]:m[n]+f[r]}}const x=n.makeTensorInfo(d.shape,p,f);if(null!=l){const e=r.backend_util.getUndoAxesPermutation(l),t=Object(F.a)({inputs:{x:x},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(d),t}return x}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fe={kernelName:r.DenseBincount,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:o}=t,{size:s,binaryOutput:i}=r;if(1===a.shape.length){const e=n.data.get(a.dataId).values,t=n.data.get(o.dataId).values,r=Object(ie.a)(e,t,o.dtype,o.shape,s);return n.makeTensorInfo([s],o.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(o),r=Object(ie.b)(e,t,s,i);return n.makeTensorInfo(r.shape,o.dtype,r.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+a.shape.length+".")}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const je={kernelName:r.DepthToSpace,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{blockSize:s,dataFormat:i}=a;r.util.assert("NHWC"===i,()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got "+i),r.util.assert(s>1,()=>"blockSize should be > 1 for depthToSpace, but was: "+s);const u=o.shape[0],c=o.shape[1],l=o.shape[2],d=o.shape[3],h=c*s,p=l*s,f=d/(s*s),m=n.data.get(o.dataId).values,b=new Float32Array(u*h*p*f);let g=0;for(let e=0;e<u;++e)for(let t=0;t<h;++t){const n=Math.floor(t/s),r=t%s;for(let t=0;t<p;++t){const a=Math.floor(t/s),o=(r*s+t%s)*f;for(let t=0;t<f;++t){const r=t+o+d*(a+l*(n+c*e));b[g++]=m[r]}}}return n.makeTensorInfo([u,h,p,f],o.dtype,b)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function De(e){const{inputs:t,backend:n,attrs:o}=e,{x:s,filter:i}=t,{strides:u,pad:c,dilations:l,dimRoundingMode:d}=o;Object(a.a)([s,i],"depthwiseConv2DNative");const h=r.util.computeStrides(s.shape),p=r.util.computeStrides(i.shape);let f=l;null==f&&(f=[1,1]),r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(u,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${f}'`);const m=r.backend_util.computeConv2DInfo(s.shape,i.shape,u,f,c,d,!0),{filterHeight:b,filterWidth:g,dilationHeight:x,dilationWidth:v,padInfo:k}=m,y=k.left,w=k.top,I=m.outChannels/m.inChannels,O=new r.TensorBuffer(m.outShape,s.dtype),C=n.data.get(s.dataId).values,T=n.data.get(i.dataId).values,$=O.values;for(let e=0;e<m.batchSize;++e){const t=e*h[0],n=e*O.strides[0];for(let e=0;e<m.outHeight;++e){const r=n+e*O.strides[1],a=e*m.strideHeight-y;for(let e=0;e<b;++e){const n=a+e*x;if(n<0||n>=m.inHeight)continue;const o=e*p[0],s=t+n*h[1];for(let e=0;e<m.outWidth;++e){const t=r+e*O.strides[2],n=e*m.strideWidth-w;for(let e=0;e<g;++e){const r=n+e*v;if(r<0||r>=m.inWidth)continue;const a=o+e*p[1],i=s+r*m.inChannels;let u=t,c=a;for(let e=0;e<m.inChannels;++e){const t=C[i+e];for(let e=0;e<I;++e)$[u+e]+=t*T[c+e];u+=I,c+=I}}}}}}return n.makeTensorInfo(O.shape,O.dtype,O.values)}const Me={kernelName:r.DepthwiseConv2dNative,backendName:"cpu",kernelFunc:De};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pe={kernelName:r.DepthwiseConv2dNativeBackpropFilter,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{x:s,dy:i}=t,{strides:u,dilations:c,pad:l,dimRoundingMode:d,filterShape:h}=o;Object(a.a)([s,i],"depthwiseConv2dNativeBackpropFilter");const p=r.backend_util.computeConv2DInfo(s.shape,h,u,c,l,d,!0),{strideHeight:f,strideWidth:m,filterHeight:b,filterWidth:g}=p,x=new r.TensorBuffer(p.filterShape,"float32"),v=p.padInfo.left,k=p.padInfo.top,y=p.outChannels/p.inChannels,w=n.data.get(s.dataId).values,I=new r.TensorBuffer(s.shape,s.dtype,w),O=n.data.get(i.dataId).values,C=new r.TensorBuffer(i.shape,i.dtype,O);for(let e=0;e<b;++e){const t=Math.max(0,Math.ceil((k-e)/f)),n=Math.min(p.outHeight,(p.inHeight+k-e)/f);for(let r=0;r<g;++r){const a=Math.max(0,Math.ceil((v-r)/m)),o=Math.min(p.outWidth,(p.inWidth+v-r)/m);for(let s=0;s<p.outChannels;++s){const i=Math.trunc(s/y),u=s%y;let c=0;for(let u=0;u<p.batchSize;++u)for(let l=t;l<n;++l){const t=e+l*f-k;for(let e=a;e<o;++e){const n=r+e*m-v;c+=I.get(u,t,n,i)*C.get(u,l,e,s)}}x.set(c,e,r,i,u)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Be={kernelName:r.DepthwiseConv2dNativeBackpropInput,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{dy:s,filter:i}=t,{strides:u,dilations:c,pad:l,dimRoundingMode:d,inputShape:h}=o;Object(a.a)([s,i],"depthwiseConv2DNativeBackpropInput");const p=r.util.computeStrides(s.shape),f=r.util.computeStrides(i.shape),m=r.backend_util.computeConv2DInfo(h,i.shape,u,c,l,d,!0),b=new r.TensorBuffer(m.inShape,"float32"),g=b.values,[x,v,k]=b.strides,y=n.data.get(s.dataId).values,[w,I,O]=p,C=n.data.get(i.dataId).values,[T,$,S]=f,{batchSize:E,filterHeight:N,filterWidth:_,inChannels:A,inHeight:R,inWidth:F,outChannels:j,outHeight:D,outWidth:M,strideHeight:P,strideWidth:B}=m,L=N-1-m.padInfo.top,W=_-1-m.padInfo.left,z=j/A;for(let e=0;e<E;++e)for(let t=0;t<A;++t)for(let n=0;n<R;++n){const r=n-L,a=Math.max(0,Math.ceil(r/P)),o=Math.min(D,(N+r)/P);for(let s=0;s<F;++s){const i=s-W,u=Math.max(0,Math.ceil(i/B)),c=Math.min(M,(_+i)/B);let l=0;for(let n=a;n<o;++n){const a=n*P-r;for(let r=u;r<c;++r){const o=w*e+I*n+O*r,s=T*(N-1-a)+$*(_-1-(r*B-i))+S*t;for(let e=0;e<z;++e){l+=y[o+(t*z+e)]*C[s+e]}}}g[x*e+v*n+k*s+t]=l}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Le={kernelName:r.Diag,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,o=r.util.sizeFromShape(a.shape),s=n.data.get(a.dataId).values,i=Object(r.buffer)([o,o],a.dtype),u=i.values;for(let e=0;e<s.length;e++)u[e*o+e]=s[e];const c=[...a.shape,...a.shape];return n.makeTensorInfo(c,i.dtype,i.values)}},We={kernelName:r.Dilation2D,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:o}=e,{strides:s,pad:i,dilations:u}=n,c=t,l=c.data.get(a.dataId).values,d=a.shape.length,h=c.data.get(o.dataId).values,p=o.shape.length,{batchSize:f,inHeight:m,inWidth:b,inChannels:g,outHeight:x,outWidth:v,padInfo:k,strideHeight:y,strideWidth:w,filterHeight:I,filterWidth:O,dilationHeight:C,dilationWidth:T,outShape:$}=r.backend_util.computeDilation2DInfo(a.shape,o.shape,s,i,"NHWC",u),S=r.util.sizeFromShape($),E=$.length,N=r.util.getArrayFromDType(a.dtype,S);for(let e=0;e<f;++e)for(let t=0;t<x;++t){const n=t*y-k.top;for(let s=0;s<v;++s){const i=s*w-k.left;for(let u=0;u<g;++u){let c=Number.MIN_SAFE_INTEGER;for(let t=0;t<I;++t){const s=n+t*C;if(s>=0&&s<m)for(let n=0;n<O;++n){const f=i+n*T;if(f>=0&&f<b){const i=r.util.locToIndex([e,s,f,u],d,r.util.computeStrides(a.shape)),m=r.util.locToIndex([t,n,u],p,r.util.computeStrides(o.shape)),b=l[i]+h[m];b>c&&(c=b)}}}N[r.util.locToIndex([e,t,s,u],E,r.util.computeStrides($))]=c}}}return{dataId:c.write(r.util.toTypedArray(N,a.dtype),$,a.dtype),shape:$,dtype:a.dtype}}},ze={kernelName:r.Dilation2DBackpropFilter,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:o,dy:s}=e,{strides:i,pad:u,dilations:c}=n,l=t,d=r.util.toNestedArray(a.shape,l.data.get(a.dataId).values),h=r.util.toNestedArray(o.shape,l.data.get(o.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:b,outHeight:g,outWidth:x,padInfo:v,strideHeight:k,strideWidth:y,filterHeight:w,filterWidth:I,dilationHeight:O,dilationWidth:C,outShape:T}=r.backend_util.computeDilation2DInfo(a.shape,o.shape,i,u,"NHWC",c);r.util.assert(s.rank===T.length,()=>`Error in ${r.Dilation2DBackpropFilter}, dy must have the same rank as output ${T.length}, but got `+s.rank);const $=r.util.toNestedArray(T,l.data.get(s.dataId).values),S=r.util.makeZerosNestedTypedArray(o.shape,o.dtype);for(let e=0;e<p;++e)for(let t=0;t<g;++t){const n=t*k-v.top;for(let r=0;r<x;++r){const a=r*y-v.left;for(let o=0;o<b;++o){let s=Number.MIN_SAFE_INTEGER,i=0,u=0;for(let t=0;t<w;++t){const r=n+t*O;if(r>=0&&r<f)for(let n=0;n<I;++n){const c=a+n*C;if(c>=0&&c<m){const a=d[e][r][c][o]+h[t][n][o];a>s&&(s=a,i=t,u=n)}}}S[i][u][o]+=$[e][t][r][o]}}}return{dataId:l.write(r.util.toTypedArray(S,a.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}},Ve={kernelName:r.Dilation2DBackpropInput,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:o,dy:s}=e,{strides:i,pad:u,dilations:c}=n,l=t,d=r.util.toNestedArray(a.shape,l.data.get(a.dataId).values),h=r.util.toNestedArray(o.shape,l.data.get(o.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:b,outHeight:g,outWidth:x,padInfo:v,strideHeight:k,strideWidth:y,filterHeight:w,filterWidth:I,dilationHeight:O,dilationWidth:C,outShape:T}=r.backend_util.computeDilation2DInfo(a.shape,o.shape,i,u,"NHWC",c);r.util.assert(s.rank===T.length,()=>`Error in ${r.Dilation2DBackpropInput}, dy must have the same rank as output ${T.length}, but got `+s.rank);const $=r.util.toNestedArray(T,l.data.get(s.dataId).values),S=r.util.makeZerosNestedTypedArray(a.shape,a.dtype);for(let e=0;e<p;++e)for(let t=0;t<g;++t){const n=t*k-v.top;for(let r=0;r<x;++r){const a=r*y-v.left;for(let o=0;o<b;++o){let s=Number.MIN_SAFE_INTEGER,i=n<0?0:n,u=a<0?0:a;for(let t=0;t<w;++t){const r=n+t*O;if(r>=0&&r<f)for(let n=0;n<I;++n){const c=a+n*C;if(c>=0&&c<m){const a=d[e][r][c][o]+h[t][n][o];a>s&&(s=a,i=r,u=c)}}}S[e][i][u][o]+=$[e][t][r][o]}}}return{dataId:l.write(r.util.toTypedArray(S,a.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ue={kernelName:r.EluGrad,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n}=e,{dy:o,y:s}=t;Object(a.a)([o,s],"eluGrad");const i=new Float32Array(r.util.sizeFromShape(s.shape)),u=n.data.get(s.dataId).values,c=n.data.get(o.dataId).values;for(let e=0;e<u.length;++e){const t=u[e];i[e]=t>=1?c[e]:c[e]*(t+1)}return n.makeTensorInfo(s.shape,"float32",i)}},Ge=Object(p.a)((e,t)=>e===t?1:0),He=Object(G.a)(r.Equal,Ge,null,"bool"),Ke={kernelName:r.Equal,backendName:"cpu",kernelFunc:He},qe=r.backend_util.ERF_P,Xe=r.backend_util.ERF_A1,Ye=r.backend_util.ERF_A2,Qe=r.backend_util.ERF_A3,Ze=r.backend_util.ERF_A4,Je=r.backend_util.ERF_A5,et=Object(i.a)(r.Erf,e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+qe*n);return t*(1-((((Je*r+Ze)*r+Qe)*r+Ye)*r+Xe)*r*Math.exp(-n*n))}),tt={kernelName:r.Erf,backendName:"cpu",kernelFunc:et};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var nt=n(37);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rt(e){const{inputs:t,backend:n,attrs:a}=e,{input:o}=t,{dim:s}=a,i=o.shape.length,u=o.shape.slice();let c=s;return s<0&&(r.util.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),c=i+s+1),u.splice(c,0,1),I({inputs:{x:o},backend:n,attrs:{shape:u}})}const at={kernelName:r.ExpandDims,backendName:"cpu",kernelFunc:rt};var ot=n(51),st=n(29);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const it=Object(p.a)((e,t)=>e/t),ut=Object(G.a)(r.RealDiv,it),ct={kernelName:r.RealDiv,backendName:"cpu",kernelFunc:ut};var lt=n(32);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dt(e,t,n){const a=e.shape,o=a[0],s=a[1],i=n.data.get(e.dataId),u=i.complexTensorInfos.real,c=i.complexTensorInfos.imag,l=[o,s],d=r.util.sizeFromShape(l),h=r.util.getTypedArrayFromDType("float32",d),p=r.util.getTypedArrayFromDType("float32",d);for(let e=0;e<o;e++){const a=Object(oe.a)({inputs:{x:u},backend:n,attrs:{begin:[e,0],size:[1,s]}}),o=Object(oe.a)({inputs:{x:c},backend:n,attrs:{begin:[e,0],size:[1,s]}}),i=Object(pe.a)({inputs:{real:a,imag:o},backend:n}),{real:l,imag:d}=ht(i,t,n),f=r.backend_util.mergeRealAndImagArrays(l,d);for(let t=0;t<s;t++){const n=r.backend_util.getComplexWithIndex(f,t);h[e*s+t]=n.real,p[e*s+t]=n.imag}n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i)}const f=n.makeTensorInfo(l,"float32",h),m=n.makeTensorInfo(l,"float32",p),b=Object(pe.a)({inputs:{real:f,imag:m},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),b}function ht(e,t,n){const a=r.util.sizeFromShape(e.shape),o=n.data.get(e.dataId),s=n.data.get(o.complexTensorInfos.real.dataId).values,i=n.data.get(o.complexTensorInfos.imag.dataId).values;if(0==((u=a)&u-1)){const o=function e(t,n,a,o,s){if(1===a)return{real:t,imag:n};const i=r.backend_util.mergeRealAndImagArrays(t,n),u=a/2,c=r.backend_util.complexWithEvenIndex(i),l=c.real,d=c.imag,h=[l.length],p=s.makeTensorInfo(h,"float32",l),f=s.makeTensorInfo(h,"float32",d),m=Object(pe.a)({inputs:{real:p,imag:f},backend:s}),b=r.backend_util.complexWithOddIndex(i),g=b.real,x=b.imag,v=[g.length],k=s.makeTensorInfo(v,"float32",g),y=s.makeTensorInfo(v,"float32",x),I=Object(pe.a)({inputs:{real:k,imag:y},backend:s}),O=e(l,d,u,o,s),C=O.real,T=O.imag,$=[C.length],S=s.makeTensorInfo($,"float32",C),E=s.makeTensorInfo($,"float32",T),N=Object(pe.a)({inputs:{real:S,imag:E},backend:s}),_=e(g,x,u,o,s),A=_.real,R=_.imag,F=[A.length],j=s.makeTensorInfo(F,"float32",A),D=s.makeTensorInfo(F,"float32",R),M=Object(pe.a)({inputs:{real:j,imag:D},backend:s}),P=r.backend_util.exponents(a,o),B=[P.real.length],L=s.makeTensorInfo(B,"float32",P.real),W=s.makeTensorInfo(B,"float32",P.imag),z=Object(pe.a)({inputs:{real:L,imag:W},backend:s}),V=Object(st.a)({inputs:{a:z,b:M},backend:s}),U=Object(w.a)({inputs:{a:N,b:V},backend:s}),G=Object(lt.a)({inputs:{a:N,b:V},backend:s}),H=Object(xe.a)({inputs:{input:U},backend:s}),K=Object(xe.a)({inputs:{input:G},backend:s}),q=be({inputs:{input:U},backend:s}),X=be({inputs:{input:G},backend:s}),Y=ve({inputs:[H,K],backend:s,attrs:{axis:0}}),Q=ve({inputs:[q,X],backend:s,attrs:{axis:0}}),Z=s.data.get(Y.dataId).values,J=s.data.get(Q.dataId).values;return s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(f),s.disposeIntermediateTensorInfo(m),s.disposeIntermediateTensorInfo(k),s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(I),s.disposeIntermediateTensorInfo(S),s.disposeIntermediateTensorInfo(E),s.disposeIntermediateTensorInfo(N),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(M),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(K),s.disposeIntermediateTensorInfo(X),s.disposeIntermediateTensorInfo(Y),s.disposeIntermediateTensorInfo(Q),{real:Z,imag:J}}(s,i,a,t,n),u=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(u,"float32",o.real),t=n.makeTensorInfo(u,"float32",o.imag),s=n.makeTensorInfo([],"float32",r.util.createScalarValue(a,"float32")),i=Object(l.a)({inputs:{x:s},backend:n}),c=ct.kernelFunc({inputs:{a:e,b:s},backend:n}),d=ct.kernelFunc({inputs:{a:t,b:i},backend:n}),h=n.data.get(c.dataId).values,p=n.data.get(d.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),{real:h,imag:p}}return o}{const e=function(e,t,n){const a=new Float32Array(2*t);for(let o=0;o<t;o++){let s=0,i=0;for(let a=0;a<t;a++){const u=r.backend_util.exponent(o*a,t,n),c=r.backend_util.getComplexWithIndex(e,a);s+=c.real*u.real-c.imag*u.imag,i+=c.real*u.imag+c.imag*u.real}n&&(s/=t,i/=t),r.backend_util.assignToTypedArray(a,s,i,o)}return a}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(r.backend_util.mergeRealAndImagArrays(s,i),a,t);return r.backend_util.splitRealAndImagArrays(e)}var u}const pt={kernelName:r.FFT,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,o=r.util.sizeFromShape(a.shape),s=a.shape[a.shape.length-1],i=I({inputs:{x:a},backend:n,attrs:{shape:[o/s,s]}}),u=dt(i,!1,n),c=I({inputs:{x:u},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),c}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ft(e){const{backend:t,attrs:n}=e,{shape:a,value:o,dtype:s}=n,i=s||r.util.inferDtype(o),u=r.util.getArrayFromDType(i,r.util.sizeFromShape(a));return function(e,t,n){e.fill(t)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(u,o),t.makeTensorInfo(a,i,u)}const mt={kernelName:r.Fill,backendName:"cpu",kernelFunc:ft};const bt={kernelName:r.FlipLeftRight,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:a}=e,o=n,s=r.util.getTypedArrayFromDType(a.dtype,r.util.sizeFromShape(a.shape)),[i,u,c,l]=a.shape,d=o.data.get(a.dataId).values;for(let e=0;e<i;e++){const t=e*c*u*l;for(let e=0;e<u;e++){const n=e*(c*l);for(let r=0;r<c;r++){const a=r*l;for(let o=0;o<l;o++){const u=[i,e,r,o][2],h=Math.round(c-u),p=t+n+a+o;let f=d[p];if(h>=0&&h<c){f=d[t+n+h*l+o]}s[p]=f}}}}return{dataId:o.write(s,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}};var gt=n(52);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xt=Object(p.a)((e,t)=>Math.floor(e/t)),vt=Object(G.a)(r.FloorDiv,xt,null,"int32"),kt={kernelName:r.FloorDiv,backendName:"cpu",kernelFunc:vt};const yt={kernelName:r.FusedConv2D,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:o,bias:s,preluActivationWeights:i}=t,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r;let m=ye({inputs:{x:a,filter:o},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h}});if(s){const e=m;m=Object(w.a)({inputs:{a:m,b:s},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=y(n,m,p,i,f),n.disposeIntermediateTensorInfo(e)}return m}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wt={kernelName:r.FusedDepthwiseConv2D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:o,bias:s,preluActivationWeights:i}=t,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r;let m=De({inputs:{x:a,filter:o},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h}});if(s){const e=m;m=Object(w.a)({inputs:{a:m,b:s},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=y(n,m,p,i,f),n.disposeIntermediateTensorInfo(e)}return m}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const It={kernelName:r.GatherNd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:o}=t,s=r.util.sizeFromShape(a.shape),i=o.shape,u=i[i.length-1],[c,l,d,h]=r.backend_util.prepareAndValidate(a,o);if(0===l)return n.makeTensorInfo(c,a.dtype,[]);const p=Object(r.buffer)([l,d],a.dtype),f=n.data.get(o.dataId).values,m=n.data.get(a.dataId).values;for(let e=0;e<l;e++){const t=[];let n=0;for(let r=0;r<u;r++){const a=f[e*u+r];n+=a*h[r],t.push(a)}if(n<0||n>=s/d)throw new Error(`Invalid indices: ${t} does not index into ${a.shape}`);for(let t=0;t<d;t++)p.values[e*d+t]=m[n*d+t]}return n.makeTensorInfo(c,p.dtype,p.values)}};var Ot=n(53);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ct={kernelName:r.GatherV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{x:s,indices:i}=t,{axis:u,batchDims:c}=o;Object(a.a)([s,i],"gatherV2");let l=c;null==c&&(l=0);const d=r.util.sizeFromShape(i.shape),h=r.util.parseAxisParam(u,s.shape)[0],p=r.backend_util.segment_util.collectGatherOpShapeInfo(s,i,h,l),f=I({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=I({inputs:{x:i},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),b=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],g=n.bufferSync(m),x=n.bufferSync(f),v=Object(Ot.a)(x,g,b);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,v.dtype,v.values)}};var Tt=n(54);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $t=Object(p.a)((e,t)=>e>=t?1:0),St=Object(G.a)(r.GreaterEqual,$t,null,"bool"),Et={kernelName:r.GreaterEqual,backendName:"cpu",kernelFunc:St};const Nt={kernelName:r.IFFT,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n}=e,{input:a}=t,o=r.util.sizeFromShape(a.shape),s=a.shape[a.shape.length-1],i=I({inputs:{x:a},backend:n,attrs:{shape:[o/s,s]}}),u=dt(i,!0,n),c=I({inputs:{x:u},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),c}},_t=Object(i.a)(r.IsFinite,e=>Number.isFinite(e)?1:0,"bool"),At={kernelName:r.IsFinite,backendName:"cpu",kernelFunc:_t},Rt=Object(i.a)(r.IsInf,e=>Math.abs(e)===1/0?1:0,"bool"),Ft={kernelName:r.IsInf,backendName:"cpu",kernelFunc:Rt},jt=Object(i.a)(r.IsNan,e=>Number.isNaN(e)?1:0,"bool"),Dt={kernelName:r.IsNan,backendName:"cpu",kernelFunc:jt};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Mt=n(55);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pt=Object(p.a)((e,t)=>e<=t?1:0),Bt=Object(G.a)(r.LessEqual,Pt,null,"bool"),Lt={kernelName:r.LessEqual,backendName:"cpu",kernelFunc:Bt};var Wt=n(56);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zt={kernelName:r.LinSpace,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:o}=n,s=Object(Wt.a)(r,a,o);return t.makeTensorInfo([s.length],"float32",s)}};var Vt=n(57);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ut=Object(i.a)(r.Log1p,e=>Math.log1p(e)),Gt={kernelName:r.Log1p,backendName:"cpu",kernelFunc:Ut},Ht=Object(p.a)((e,t)=>e&&t),Kt=Object(G.a)(r.LogicalAnd,Ht,null,"bool"),qt={kernelName:r.LogicalAnd,backendName:"cpu",kernelFunc:Kt},Xt=Object(i.a)(r.LogicalNot,e=>e?0:1,"bool"),Yt={kernelName:r.LogicalNot,backendName:"cpu",kernelFunc:Xt},Qt=Object(p.a)((e,t)=>e||t),Zt=Object(G.a)(r.LogicalOr,Qt,null,"bool"),Jt={kernelName:r.LogicalOr,backendName:"cpu",kernelFunc:Zt};const en={kernelName:r.LRN,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:o}=e,{x:s}=t,{depthRadius:i,bias:u,alpha:c,beta:l}=o;Object(a.a)(s,"LRN");const d=s.shape[3],h=d-1,p=n.data.get(s.dataId).values,f=r.util.sizeFromShape(s.shape),m=new Float32Array(f);function b(e){const t=e%d;let n=e-t+Math.max(0,t-i);const r=e-t+Math.min(t+i,h);let a=0;for(;n<=r;n++){const e=p[n];a+=e*e}return a}for(let e=0;e<f;e++){const t=b(e),n=p[e]*Math.pow(u+c*t,-l);m[e]=n}return n.makeTensorInfo(s.shape,s.dtype,m)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tn={kernelName:r.LRNGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{x:s,y:i,dy:u}=t,{depthRadius:c,bias:l,alpha:d,beta:h}=o;Object(a.a)(u,"LRNGrad");const p=r.util.sizeFromShape(u.shape),f=u.shape[3],m=n.data.get(u.dataId).values,b=n.data.get(s.dataId).values,g=n.data.get(i.dataId).values,x=new Float32Array(p),v=p;for(let e=0;e<v;e++){const t=e%f,n=e-t+Math.max(0,t-c),r=e-t+Math.min(f,t+c+1);let a=0;for(let e=n;e<r;e++)a+=Math.pow(b[e],2);a=d*a+l;for(let t=n;t<r;t++){let n=-2*d*h*b[t]*g[e]/a;e===t&&(n+=Math.pow(a,-h)),n*=m[e],x[t]+=n}}return n.makeTensorInfo(u.shape,s.dtype,x)}};var nn=n(58),rn=n(38);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function an(e){const{inputs:t,backend:n,attrs:o}=e,{x:s}=t,{reductionIndices:i,keepDims:u}=o,c=n;let l=s.shape;const d=l.length,h=r.util.parseAxisParam(i,l);let p=h;const f=r.backend_util.getAxesPermutation(p,d);let m=c.data.get(s.dataId).values;if(null!=f){const e=new Array(d);for(let t=0;t<e.length;t++)e[t]=l[f[t]];m=Object(rn.a)(m,l,s.dtype,f,e),p=r.backend_util.getInnerMostAxes(p.length,d),l=e}Object(a.a)(s,"max"),r.backend_util.assertAxesAreInnerMostDims("max",p,d);const[b,g]=r.backend_util.computeOutAndReduceShapes(l,p),x=r.util.sizeFromShape(g),v=Object(nn.a)(m,x,b,s.dtype),k=c.write(v,b,s.dtype);let y=b;if(u){y=r.backend_util.expandShapeToKeepDim(b,h)}return{dataId:k,shape:y,dtype:s.dtype}}const on={kernelName:r.Max,backendName:"cpu",kernelFunc:an};var sn=n(59);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const un={kernelName:r.MaxPool,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{x:s}=t;Object(a.a)(s,"maxPool");const{filterSize:i,strides:u,pad:c,dimRoundingMode:d}=o;r.util.assert(r.backend_util.eitherStridesOrDilationsAreOne(u,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${u} and dilations '1'`);const h=r.backend_util.computePool2DInfo(s.shape,i,u,1,c,d);let p;if(1===h.filterWidth&&1===h.filterHeight&&r.util.arraysEqual(h.inShape,h.outShape))p=Object(l.a)({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=r.util.computeStrides(s.shape),a=Q(e,s.shape,s.dtype,t,h,"max");p=n.makeTensorInfo(h.outShape,s.dtype,a.values)}return p}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cn={kernelName:r.MaxPool3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{x:s}=t,{filterSize:i,strides:u,pad:c,dimRoundingMode:l,dataFormat:d}=o;Object(a.a)(s,"maxPool3d");const h=r.backend_util.computePool3DInfo(s.shape,i,u,1,c,l,d),p=J(n.data.get(s.dataId).values,s.shape,s.dtype,r.util.computeStrides(s.shape),h,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ln={kernelName:r.MaxPool3DGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{dy:s,input:i}=t,{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=o;Object(a.a)([s,i],"maxPool3DGrad");const h=r.backend_util.computePool3DInfo(i.shape,u,c,1,l,d),p=function(e,t){const n=Object(r.buffer)(t.outShape,"int32"),a=t.strideDepth,o=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,u=t.dilationHeight,c=t.dilationWidth,l=t.effectiveFilterDepth,d=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.front,f=t.padInfo.top,m=t.padInfo.left;for(let r=0;r<t.batchSize;++r)for(let b=0;b<t.inChannels;++b)for(let g=0;g<t.outDepth;++g){const x=g*a-p;let v=x;for(;v<0;)v+=i;const k=Math.min(t.inDepth,l+x);for(let a=0;a<t.outHeight;++a){const l=a*o-f;let p=l;for(;p<0;)p+=u;const y=Math.min(t.inHeight,d+l);for(let o=0;o<t.outWidth;++o){const f=o*s-m;let w=f;for(;w<0;)w+=c;const I=Math.min(t.inWidth,h+f);let O=Number.NEGATIVE_INFINITY,C=-1;for(let t=v;t<k;t+=i){const n=t-x;for(let a=p;a<y;a+=u){const o=a-l;for(let s=w;s<I;s+=c){const i=s-f,u=e.get(r,t,a,s,b);u>=O&&(O=u,C=n*d*h+o*d+i)}}}n.set(C,r,g,a,o,b)}}}return n}(n.bufferSync(i),h),f=h.strideDepth,m=h.strideHeight,b=h.strideWidth,g=h.dilationDepth,x=h.dilationHeight,v=h.dilationWidth,k=h.effectiveFilterDepth,y=h.effectiveFilterHeight,w=h.effectiveFilterWidth,I=k-1-h.padInfo.front,O=w-1-h.padInfo.left,C=y-1-h.padInfo.top,T=Object(r.buffer)(i.shape,"float32"),$=n.bufferSync(s);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inDepth;++n)for(let r=0;r<h.inHeight;++r)for(let a=0;a<h.inWidth;++a){const o=n-I,s=r-C,i=a-O;let u=0;for(let n=0;n<k;n+=g){const r=(o+n)/f;if(!(r<0||r>=h.outDepth||Math.floor(r)!==r))for(let a=0;a<y;a+=x){const o=(s+a)/m;if(!(o<0||o>=h.outHeight||Math.floor(o)!==o))for(let s=0;s<w;s+=v){const c=(i+s)/b;if(c<0||c>=h.outWidth||Math.floor(c)!==c)continue;const l=k*y*w-1-p.get(e,r,o,c,t)===n*y*w+a*w+s?1:0;if(0===l)continue;u+=$.get(e,r,o,c,t)*l}}}T.set(u,e,n,r,a,t)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dn={kernelName:r.MaxPoolGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{dy:s,input:i,output:u}=t,c=i;Object(a.a)([i,u],"maxPoolGrad");const{filterSize:l,strides:d,pad:h,dimRoundingMode:p}=o,f=r.backend_util.computePool2DInfo(c.shape,l,d,1,h,p),m=n.data.get(c.dataId).values,b=Object(r.buffer)(f.outShape,c.dtype,Z(m,c.shape,c.dtype,f).values),g=f.strideHeight,x=f.strideWidth,v=f.dilationHeight,k=f.dilationWidth,y=f.effectiveFilterHeight,w=f.effectiveFilterWidth,I=w-1-f.padInfo.left,O=y-1-f.padInfo.top,C=Object(r.buffer)(c.shape,"float32"),T=n.data.get(s.dataId).values,$=Object(r.buffer)(s.shape,"float32",T);for(let e=0;e<f.batchSize;++e)for(let t=0;t<f.inChannels;++t)for(let n=0;n<f.inHeight;++n)for(let r=0;r<f.inWidth;++r){const a=n-O,o=r-I;let s=0;for(let n=0;n<y;n+=v){const r=(a+n)/g;if(!(r<0||r>=f.outHeight||Math.floor(r)!==r))for(let a=0;a<w;a+=k){const i=(o+a)/x;if(i<0||i>=f.outWidth||Math.floor(i)!==i)continue;const u=y*w-1-b.get(e,r,i,t)===n*w+a?1:0;if(0===u)continue;s+=$.get(e,r,i,t)*u}}C.set(s,e,n,r,t)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const hn={kernelName:r.MaxPoolWithArgmax,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:o}=e,{filterSize:s,strides:i,pad:u,includeBatchInIndex:c}=t,l=n;Object(a.a)(o,"MaxPoolWithArgmax");const d=l.data.get(o.dataId).values,h=r.backend_util.computePool2DInfo(o.shape,s,i,[1,1],u),[p,f]=function(e,t,n,a,o){const s=Q(e,0,n,r.util.computeStrides(t),o,"max"),i=Z(e,t,n,o,!0,a);return[s.values,i.values]}(d,o.shape,o.dtype,c,h),m=l.write(p,h.outShape,o.dtype),b=l.write(f,h.outShape,o.dtype);return[{dataId:m,shape:h.outShape,dtype:o.dtype},{dataId:b,shape:h.outShape,dtype:"int32"}]}};var pn=n(72);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fn(e){const{inputs:t,backend:n,attrs:o}=e,{x:s}=t,{axis:i,keepDims:u}=o;let c;Object(a.a)(s,"sum"),c="bool"===s.dtype?Object(ce.a)({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):Object(l.a)({inputs:{x:s},backend:n});const d=c.shape.length,h=r.util.parseAxisParam(i,c.shape),p=r.backend_util.getAxesPermutation(h,d);let f=h,m=c;null!=p&&(m=Object(F.a)({inputs:{x:c},backend:n,attrs:{perm:p}}),f=r.backend_util.getInnerMostAxes(f.length,d)),r.backend_util.assertAxesAreInnerMostDims("sum",f,m.shape.length);const[b,g]=r.backend_util.computeOutAndReduceShapes(m.shape,f),x=r.backend_util.upcastType(m.dtype,"int32");let v=Object(pn.a)(n,b,x);const k=r.util.sizeFromShape(g),y=n.data.get(v.dataId).values,w=n.data.get(m.dataId).values;for(let e=0;e<y.length;++e){const t=e*k;let n=0;for(let e=0;e<k;++e)n+=w[t+e];y[e]=n}if(u){const e=v;v=I({inputs:{x:v},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(v.shape,h)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(c),null!=p&&n.disposeIntermediateTensorInfo(m),v}const mn={kernelName:r.Sum,backendName:"cpu",kernelFunc:fn};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bn={kernelName:r.Mean,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{axis:s,keepDims:i}=a,u=r.util.parseAxisParam(s,o.shape),c=r.backend_util.computeOutAndReduceShapes(o.shape,u)[1],l=r.util.sizeFromShape(c),d=[],h=n.makeTensorInfo([],"float32",new Float32Array([l]));d.push(h);const p=Object(ce.a)({inputs:{x:o},backend:n,attrs:{dtype:"float32"}});d.push(p);const f=ut({inputs:{a:p,b:h},backend:n});d.push(f);const m=fn({inputs:{x:f},backend:n,attrs:{axis:s,keepDims:i}});return d.forEach(e=>n.disposeIntermediateTensorInfo(e)),m}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gn={kernelName:r.Min,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{x:s}=t,{axis:i,keepDims:u}=o;Object(a.a)(s,"min");const c=r.util.parseAxisParam(i,s.shape);let l=c;const d=r.backend_util.getAxesPermutation(l,s.shape.length);let h=s;null!=d&&(h=Object(F.a)({inputs:{x:s},backend:n,attrs:{perm:d}}),l=r.backend_util.getInnerMostAxes(l.length,s.shape.length)),r.backend_util.assertAxesAreInnerMostDims("min",l,h.shape.length);const[p,f]=r.backend_util.computeOutAndReduceShapes(h.shape,l),m=r.util.sizeFromShape(f),b=r.util.makeZerosTypedArray(r.util.sizeFromShape(p),h.dtype),g=n.data.get(h.dataId).values;for(let e=0;e<b.length;++e){const t=e*m;let n=g[t];for(let e=0;e<m;++e){const r=g[t+e];r<n&&(n=r)}b[e]=n}null!=d&&n.disposeIntermediateTensorInfo(h);const x=n.makeTensorInfo(p,h.dtype,b);if(u){const e=I({inputs:{x:x},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(p,c)}});return n.disposeIntermediateTensorInfo(x),e}return x}};var xn=n(60);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vn={kernelName:r.MirrorPad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{x:s}=t,{paddings:i,mode:u}=o;Object(a.a)(s,"mirrorPad");const c=i.map((e,t)=>e[0]+s.shape[t]+e[1]),l=i.map(e=>e[0]),d=i.map((e,t)=>e[0]+s.shape[t]),h="reflect"===u?0:1,p=n.data.get(s.dataId).values,f=s.shape.length,m=r.util.computeStrides(s.shape),b=r.util.sizeFromShape(c),g=c.length,x=r.util.computeStrides(c),v=r.util.getTypedArrayFromDType(s.dtype,b);for(let e=0;e<b;e++){let t=r.util.indexToLoc(e,g,x);for(let e=0;e<g;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-h:t[e]>=d[e]&&(t[e]=2*(d[e]-1)-t[e]+h);t=t.map((e,t)=>e-l[t]);const n=r.util.locToIndex(t,f,m);v[e]=p[n]}return{dataId:n.write(v,c,s.dtype),shape:c,dtype:s.dtype}}},kn=Object(p.a)((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),yn=Object(G.a)(r.Mod,kn),wn={kernelName:r.Mod,backendName:"cpu",kernelFunc:yn};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var In=n(40);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function On(e){const{inputs:t,backend:n,attrs:a}=e,{logits:o}=t,{dim:s}=a,i=o.shape.length;let u=s;if(-1===u&&(u=i-1),u!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${u}`);const c=r.util.parseAxisParam([u],o.shape),l=an({inputs:{x:o},backend:n,attrs:{reductionIndices:c,keepDims:!1}}),d=r.backend_util.expandShapeToKeepDim(l.shape,c),h=I({inputs:{x:l},backend:n,attrs:{shape:d}}),p=Object(lt.a)({inputs:{a:o,b:h},backend:n}),f=Object(nt.a)({inputs:{x:p},backend:n}),m=fn({inputs:{x:f},backend:n,attrs:{axis:c,keepDims:!1}}),b=I({inputs:{x:m},backend:n,attrs:{shape:d}}),g=ut({inputs:{a:f,b:b},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),g}const Cn={kernelName:r.Softmax,backendName:"cpu",kernelFunc:On};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tn={kernelName:r.Multinomial,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{logits:s}=t,{numSamples:i,seed:u,normalized:c}=o;Object(a.a)(s,"multinomial");const l=c?s:On({inputs:{logits:s},backend:n,attrs:{dim:-1}}),d=l.shape[0],h=l.shape[1],p=n.data.get(l.dataId).values,f=[d,i],m=r.util.makeZerosTypedArray(r.util.sizeFromShape(f),"int32");for(let e=0;e<d;++e){const t=e*h,n=new Float32Array(h-1);n[0]=p[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+p[t+e];const r=In.alea(u.toString()),a=e*i;for(let e=0;e<i;++e){const t=r();m[a+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){m[a+e]=r;break}}}return c||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(f,"int32",m)}};var $n=n(61);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sn=r.kernel_impls.nonMaxSuppressionV3Impl;const En={kernelName:r.NonMaxSuppressionV3,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:o,scores:s}=t,{maxOutputSize:i,iouThreshold:u,scoreThreshold:c}=r;Object(a.a)(o,"NonMaxSuppression");const l=n.data.get(o.dataId).values,d=n.data.get(s.dataId).values,{selectedIndices:h}=Sn(l,d,i,u,c);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},Nn=r.kernel_impls.nonMaxSuppressionV4Impl;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _n={kernelName:r.NonMaxSuppressionV4,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:o,scores:s}=t,{maxOutputSize:i,iouThreshold:u,scoreThreshold:c,padToMaxOutputSize:l}=r;Object(a.a)(o,"NonMaxSuppressionPadded");const d=n.data.get(o.dataId).values,h=n.data.get(s.dataId).values,{selectedIndices:p,validOutputs:f}=Nn(d,h,i,u,c,l);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},An=r.kernel_impls.nonMaxSuppressionV5Impl;
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rn={kernelName:r.NonMaxSuppressionV5,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:o,scores:s}=t,{maxOutputSize:i,iouThreshold:u,scoreThreshold:c,softNmsSigma:l}=r;Object(a.a)(o,"NonMaxSuppressionWithScore");const d=n.data.get(o.dataId).values,h=n.data.get(s.dataId).values,p=i,f=u,m=c,b=l,{selectedIndices:g,selectedScores:x}=An(d,h,p,f,m,b);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([x.length],"float32",new Float32Array(x))]}};var Fn=n(62);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jn={kernelName:r.OneHot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{indices:s}=t,{depth:i,onValue:u,offValue:c}=o;Object(a.a)(s,"oneHot");const l=r.util.sizeFromShape(s.shape),d=new Float32Array(l*i);d.fill(c);const h=n.data.get(s.dataId).values;for(let e=0;e<l;++e)h[e]>=0&&h[e]<i&&(d[e*i+h[e]]=u);return n.makeTensorInfo([...s.shape,i],"int32",d)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dn(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=Object(xe.a)({inputs:{input:r},backend:n}),t=Dn({inputs:{x:e},backend:n}),a=be({inputs:{input:r},backend:n}),o=Dn({inputs:{x:a},backend:n}),s=Object(pe.a)({inputs:{real:t,imag:o},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),s}return ft({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const Mn={kernelName:r.ZerosLike,backendName:"cpu",kernelFunc:Dn};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pn={kernelName:r.OnesLike,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){const t=Object(xe.a)({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),o=be({inputs:{input:a},backend:r}),s=Dn({inputs:{x:o},backend:r}),i=Object(pe.a)({inputs:{real:n,imag:s},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(s),i}return ft({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bn(e){const{inputs:t,backend:n,attrs:a}=e,{axis:o}=a;if(1===t.length)return rt({inputs:{input:t[0]},backend:n,attrs:{dim:o}});const s=t[0].shape,i=t[0].dtype;t.forEach(e=>{r.util.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),r.util.assert(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const u=[],c=ve({inputs:t.map(e=>{const t=rt({inputs:{input:e},backend:n,attrs:{dim:o}});return u.push(t),t}),backend:n,attrs:{axis:o}});return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),c}const Ln={kernelName:r.Pack,backendName:"cpu",kernelFunc:Bn};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wn={kernelName:r.PadV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{x:s}=t,{paddings:i,constantValue:u}=o;Object(a.a)(s,"pad");const c=i.map((e,t)=>e[0]+s.shape[t]+e[1]),l=i.map(e=>e[0]),d=n.data.get(s.dataId).values,h=r.util.sizeFromShape(s.shape),p=s.shape.length,f=r.util.computeStrides(s.shape),m=r.util.sizeFromShape(c),b=c.length,g=r.util.computeStrides(c),x=r.util.getTypedArrayFromDType(s.dtype,m);0!==u&&x.fill(u);for(let e=0;e<h;e++){const t=r.util.indexToLoc(e,p,f).map((e,t)=>e+l[t]);x[r.util.locToIndex(t,b,g)]=d[e]}return{dataId:n.write(x,c,s.dtype),shape:c,dtype:s.dtype}}},zn=Object(p.a)((e,t)=>Math.pow(e,t)),Vn=Object(G.a)(r.Pow,zn),Un={kernelName:r.Pow,backendName:"cpu",kernelFunc:Vn};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Gn=n(63),Hn=n(64);const Kn={kernelName:r.Range,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,dtype:o,step:s}=n,i=Object(Hn.a)(r,a,s,o);return t.makeTensorInfo([i.length],o,i)}},qn=Object(i.a)(r.Reciprocal,e=>1/e),Xn={kernelName:r.Reciprocal,backendName:"cpu",kernelFunc:qn};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yn={kernelName:r.ResizeBilinear,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:o}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:u,size:c}=o;Object(a.a)(s,"resizeBilinear");const l=r.util.computeStrides(s.shape),[d,h]=c,[p,f,m,b]=s.shape,g=n.data.get(s.dataId).values,x=new Float32Array(r.util.sizeFromShape([p,d,h,b])),v=[i&&d>1?f-1:f,i&&h>1?m-1:m],k=[i&&d>1?d-1:d,i&&h>1?h-1:h];let y=0;const w=v[0]/k[0],I=v[1]/k[1];for(let e=0;e<p;e++)for(let t=0;t<d;t++){let n;n=u?w*(t+.5)-.5:w*t;const r=Math.max(0,Math.floor(n)),a=n-r,o=Math.min(f-1,Math.ceil(n)),s=e*l[0]+r*l[1],i=e*l[0]+o*l[1];for(let e=0;e<h;e++){let t;t=u?I*(e+.5)-.5:I*e;const n=Math.max(0,Math.floor(t)),r=t-n,o=Math.min(m-1,Math.ceil(t)),c=s+n*l[2],d=i+n*l[2],h=s+o*l[2],p=i+o*l[2];for(let e=0;e<b;e++){const t=g[c+e],n=g[d+e],o=t+(g[h+e]-t)*r,s=o+(n+(g[p+e]-n)*r-o)*a;x[y++]=s}}}return n.makeTensorInfo([p,d,h,b],"float32",x)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qn={kernelName:r.ResizeBilinearGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{images:s,dy:i}=t,{alignCorners:u}=o;Object(a.a)([i,s],"resizeBilinearGrad");const c=r.util.computeStrides(s.shape),[l,d,h,p]=s.shape,[,f,m]=i.shape,b=new Float32Array(l*d*h*p),g=[u&&f>1?d-1:d,u&&m>1?h-1:h],x=[u&&f>1?f-1:f,u&&m>1?m-1:m],v=g[0]/x[0],k=g[1]/x[1],y=n.data.get(i.dataId).values;let w=0;for(let e=0;e<l;e++){const t=e*c[0];for(let e=0;e<f;e++){const n=e*v,r=Math.floor(n),a=Math.min(Math.ceil(n),d-1),o=t+r*c[1],s=t+a*c[1],i=n-r,u=1-i;for(let e=0;e<m;e++){const t=e*k,n=Math.floor(t),r=Math.min(Math.ceil(t),h-1),a=t-n,l=1-a,d=o+n*c[2],f=o+r*c[2],m=s+n*c[2],g=s+r*c[2],x=u*l,v=u*a,I=i*l,O=i*a;for(let e=0;e<p;e++){const t=y[w++];b[d+e]+=t*x,b[f+e]+=t*v,b[m+e]+=t*I,b[g+e]+=t*O}}}}return n.makeTensorInfo([l,h,d,p],"float32",b)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zn={kernelName:r.ResizeNearestNeighbor,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:u,size:c}=o;Object(a.a)(s,"resizeNearestNeighbor");const l=r.util.computeStrides(s.shape),[d,h]=c,[p,f,m,b]=s.shape,g=n.data.get(s.dataId).values,x=new Float32Array(p*d*h*b),v=[i&&d>1?f-1:f,i&&h>1?m-1:m],k=[i&&d>1?d-1:d,i&&h>1?h-1:h],y=v[0]/k[0],w=v[1]/k[1];let I=0;for(let e=0;e<p;e++){const t=e*l[0];for(let e=0;e<d;e++){const n=u?y*(e+.5):y*e;let r=Math.min(f-1,i?Math.round(n):Math.floor(n));u&&(r=Math.max(0,r));const a=t+r*l[1];for(let e=0;e<h;e++){const t=u?w*(e+.5):w*e;let n=Math.min(m-1,i?Math.round(t):Math.floor(t));u&&(n=Math.max(0,n));const r=a+n*l[2];for(let e=0;e<b;e++){const t=g[r+e];x[I++]=t}}}}return n.makeTensorInfo([p,d,h,b],s.dtype,x)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jn={kernelName:r.ResizeNearestNeighborGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{images:s,dy:i}=t,{alignCorners:u}=o;Object(a.a)([i,s],"resizeNearestNeighborGrad");const c=r.util.computeStrides(s.shape),l=r.util.computeStrides(i.shape),[d,h,p,f]=s.shape,[,m,b]=i.shape,g=new Float32Array(d*h*p*f),x=n.data.get(i.dataId).values,v=[u&&m>1?h-1:h,u&&b>1?p-1:p],k=[u&&m>1?m-1:m,u&&b>1?b-1:b],y=v[0]/k[0],w=v[1]/k[1],I=1/y,O=1/w,C=2*Math.ceil(I)+2,T=2*Math.ceil(O)+2;for(let e=0;e<d;e++){const t=e*c[0];for(let e=0;e<h;e++){const n=t+e*c[1],r=Math.floor(e*I),a=Math.floor(r-C/2);for(let r=0;r<p;r++){const o=n+r*c[2],s=Math.floor(r*O),i=Math.floor(s-T/2);for(let n=0;n<f;n++){let s=0;for(let o=0;o<C;o++){const c=o+a;if(c<0||c>=m)continue;const d=t+c*l[1],f=c*y;if(e===Math.min(h-1,u?Math.round(f):Math.floor(f)))for(let e=0;e<T;e++){const t=e+i;if(t<0||t>=b)continue;const a=d+t*l[2],o=t*w;r===Math.min(p-1,u?Math.round(o):Math.floor(o))&&(s+=x[a+n])}}g[o+n]=s}}}}return n.makeTensorInfo(s.shape,s.dtype,g)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const er={kernelName:r.Reverse,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{x:s}=t,{dims:i}=o;Object(a.a)(s,"reverse");const u=s.shape.length,c=r.util.parseAxisParam(i,s.shape);if(0===u)return Object(l.a)({inputs:{x:s},backend:n});const d=new r.TensorBuffer(s.shape,s.dtype),h=n.bufferSync(s);for(let e=0;e<d.size;e++){const t=d.indexToLoc(e),n=t.slice();c.forEach(e=>n[e]=s.shape[e]-1-n[e]),d.set(h.get(...n),...t)}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},tr={kernelName:r.RotateWithOffset,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:a}=e,{radians:o,fillValue:s,center:i}=t,u=n,c=r.util.getTypedArrayFromDType(a.dtype,r.util.sizeFromShape(a.shape)),[l,d,h,p]=a.shape,[f,m]=r.backend_util.getImageCenter(i,d,h),b=Math.sin(o),g=Math.cos(o),x=u.data.get(a.dataId).values;for(let e=0;e<l;e++){const t=e*h*d*p;for(let e=0;e<d;e++){const n=e*(h*p);for(let r=0;r<h;r++){const a=r*p;for(let o=0;o<p;o++){const i=[l,e,r,o],u=i[2],v=i[1];let k=(u-f)*g-(v-m)*b,y=(u-f)*b+(v-m)*g;k=Math.round(k+f),y=Math.round(y+m);let w=s;if("number"!=typeof s&&(w=3===o?255:s[o]),k>=0&&k<h&&y>=0&&y<d){w=x[t+y*(h*p)+k*p+o]}c[t+n+a+o]=w}}}}return{dataId:u.write(c,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},nr=Object(i.a)(r.Round,e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1}),rr={kernelName:r.Round,backendName:"cpu",kernelFunc:nr};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ar=n(65);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function or(e,t,n,a,o,s,i,u,c,l){const d=[a/o,o],h=e.values,p=t.values;if(0===a)return Object(r.buffer)(n,t.dtype);const f=Object(r.buffer)(d,t.dtype);f.values.fill(c);for(let e=0;e<s;e++){const r=[];let s=0;for(let t=0;t<i;t++){const n=h[e*i+t];r.push(n),s+=n*u[t]}if(s<0||s>=a/o)throw new Error(`Invalid indices: ${r} does not index into ${n}`);for(let n=0;n<o;n++)l?f.values[s*o+n]+=p[e*o+n]:f.values[s*o+n]=0===t.rank?p[0]:p[e*o+n]}return f}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sr={kernelName:r.ScatterNd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:o,updates:s}=t,{shape:i}=a,{sliceRank:u,numUpdates:c,sliceSize:l,strides:d,outputSize:h}=r.backend_util.calculateShapes(s,o,i),p=or(n.bufferSync(o),n.bufferSync(s),i,h,l,c,u,d,0,!0);return n.makeTensorInfo(i,p.dtype,p.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ir={kernelName:r.Select,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:o,t:s,e:i}=t;Object(a.a)([o,s,i],"select");const u=o.shape.length,c=n.data.get(o.dataId).values,l=n.data.get(s.dataId).values,d=n.data.get(i.dataId).values,h=Object(r.upcastType)(s.dtype,i.dtype),p=r.util.makeZerosTypedArray(r.util.sizeFromShape(s.shape),h);let f=0;const m=0===u||u>1||1===s.shape.length?1:r.util.sizeFromShape(s.shape.slice(1));for(let e=0;e<c.length;e++)for(let t=0;t<m;t++)1===c[e]?p[f++]=l[e]:p[f++]=d[e];return n.makeTensorInfo(s.shape,h,p)}},ur=r.backend_util.SELU_SCALEALPHA,cr=r.backend_util.SELU_SCALE,lr=Object(i.a)(r.Selu,e=>e>=0?cr*e:ur*(Math.exp(e)-1)),dr={kernelName:r.Selu,backendName:"cpu",kernelFunc:lr},hr=Object(i.a)(r.Sigmoid,e=>1/(1+Math.exp(-e))),pr={kernelName:r.Sigmoid,backendName:"cpu",kernelFunc:hr},fr=Object(i.a)(r.Sign,e=>e<0?-1:e>0?1:0),mr={kernelName:r.Sign,backendName:"cpu",kernelFunc:fr},br=Object(i.a)(r.Sin,e=>Math.sin(e)),gr={kernelName:r.Sin,backendName:"cpu",kernelFunc:br},xr=Object(i.a)(r.Sinh,e=>Math.sinh(e)),vr={kernelName:r.Sinh,backendName:"cpu",kernelFunc:xr},kr=Math.log(1.1920928955078125e-7)+2,yr=Object(i.a)(r.Softplus,e=>{const t=e>-kr,n=e<kr,r=Math.exp(e);let a;return a=n?r:t?e:Math.log(1+r),a}),wr={kernelName:r.Softplus,backendName:"cpu",kernelFunc:yr};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ir={kernelName:r.SpaceToBatchND,backendName:"cpu",kernelFunc:
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function(e){const{inputs:t,backend:n,attrs:o}=e,{x:s}=t,{blockShape:i,paddings:u}=o;Object(a.a)([s],"spaceToBatchND");const c=r.util.sizeFromShape(i),l=[[0,0]];l.push(...u);for(let e=1+i.length;e<s.shape.length;++e)l.push([0,0]);const d=Wn.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),h=r.backend_util.getReshaped(d.shape,i,c,!1),p=r.backend_util.getPermuted(h.length,i.length,!1),f=r.backend_util.getReshapedPermuted(d.shape,i,c,!1),m=I({inputs:{x:d},backend:n,attrs:{shape:h}}),b={x:m},g={perm:p},x=Object(F.a)({inputs:b,backend:n,attrs:g}),v=I({inputs:{x:x},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(x),v}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Or={kernelName:r.SparseToDense,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:o,sparseValues:s,defaultValue:i}=t,{outputShape:u}=a,{sliceRank:c,numUpdates:l,sliceSize:d,strides:h,outputSize:p}=r.backend_util.calculateShapes(s,o,u),f=or(n.bufferSync(o),n.bufferSync(s),u,p,d,l,c,h,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(u,f.dtype,f.values)}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cr={kernelName:r.SplitV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:o}=t,{numOrSizeSplits:s,axis:i}=a,u=r.util.parseAxisParam(i,o.shape)[0],c=r.backend_util.prepareSplitSize(o,s,u),l=new Array(o.shape.length).fill(0),d=o.shape.slice();return c.map(e=>{const t=[...d];t[u]=e;const r=Object(oe.a)({inputs:{x:o},backend:n,attrs:{begin:l,size:t}});return l[u]+=e,r})}},Tr=Object(i.a)(r.Sqrt,e=>Math.sqrt(e)),$r={kernelName:r.Sqrt,backendName:"cpu",kernelFunc:Tr},Sr={kernelName:r.Square,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;Object(a.a)(n,"square");const o=r.data.get(n.dataId).values,s=new Float32Array(o.length);for(let e=0;e<o.length;++e){const t=o[e];s[e]=t*t}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Er=n(66);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nr=Object(i.a)(r.Step,(e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),_r={kernelName:r.Step,backendName:"cpu",kernelFunc:Nr};var Ar=n(67);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rr={kernelName:r.StridedSlice,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{x:s}=t,{begin:i,end:u,strides:c,beginMask:l,endMask:d,ellipsisMask:h,newAxisMask:p,shrinkAxisMask:f}=o;Object(a.a)(s,"stridedSlice");const{nonStrided:m,$begin:b,$strides:g,size:x,newShape:v,outShape:k}=r.slice_util.sliceInfo(s.shape,i,u,c,l,d,h,p,f),y=I({inputs:{x:s},backend:n,attrs:{shape:v}});let w;if(m){const e=Object(oe.a)({inputs:{x:y},backend:n,attrs:{begin:b,size:x}});w=I({inputs:{x:e},backend:n,attrs:{shape:k}}),n.disposeIntermediateTensorInfo(e)}else if(k.some(e=>0===e))w=n.makeTensorInfo(k,s.dtype,[]);else{const e=n.bufferSync(y),t=Object(Ar.a)(k,e,g,b);w=n.makeTensorInfo(t.shape,t.dtype,t.values)}const O=I({inputs:{x:w},backend:n,attrs:{shape:k}});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(w),O}},Fr=Object(i.a)(r.Tan,e=>Math.tan(e)),jr={kernelName:r.Tan,backendName:"cpu",kernelFunc:Fr},Dr=Object(i.a)(r.Tanh,e=>Math.tanh(e)),Mr={kernelName:r.Tanh,backendName:"cpu",kernelFunc:Dr};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Pr=n(68);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Br={kernelName:r.Tile,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{reps:s}=r;Object(a.a)(o,"tile");const i=Object(Pr.a)(n.bufferSync(o),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}};var Lr=n(69);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wr={kernelName:r.TopK,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{k:s,sorted:i}=r;Object(a.a)(o,"topk");const u=n.data.get(o.dataId).values,[c,l]=Object(Lr.a)(u,o.shape,o.dtype,s,i);return[n.makeTensorInfo(c.shape,c.dtype,c.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zr={kernelName:r.Transform,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{image:o,transforms:s}=t,{interpolation:i,fillMode:u,fillValue:c,outputShape:l}=n,[d,h,p,f]=o.shape,[m,b]=null!=l?l:[h,p],g=[d,m,b,f],x=r.util.computeStrides(o.shape),v=x[0],k=x[1],y=x[2],w=r.util.getTypedArrayFromDType(o.dtype,r.util.sizeFromShape(g));w.fill(c);const I=a.data.get(o.dataId).values,O=a.data.get(s.dataId).values;for(let e=0;e<d;++e){const t=1===s.shape[0]?O:O.subarray(8*e,8*e+8);for(let n=0;n<m;++n)for(let r=0;r<b;++r)for(let a=0;a<f;++a){let o;const s=t[6]*r+t[7]*n+1;if(0===s)continue;const l=(t[0]*r+t[1]*n+t[2])/s,d=(t[3]*r+t[4]*n+t[5])/s,f=Vr(l,p,u),m=Vr(d,h,u);switch(i){case"nearest":o=Gr(I,h,p,v,k,y,e,m,f,a,c);break;case"bilinear":o=Hr(I,h,p,v,k,y,e,m,f,a,c);break;default:throw new Error("Error in Transform: Expect 'nearest' or 'bilinear', but got "+i)}w[e*v+n*k+r*y+a]=o}return a.makeTensorInfo(g,o.dtype,w)}return{dataId:a.write(w,g,o.dtype),shape:o.shape,dtype:o.dtype}}};function Vr(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return r.util.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return r.util.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return r.util.clamp(0,e,t-1)}(e,t);case"constant":default:return function(e,t){return e}(e)}}function Ur(e,t,n,r,a,o,s,i,u,c,l){return 0<=i&&i<t&&0<=u&&u<n?e[s*r+i*a+u*o+c]:l}function Gr(e,t,n,r,a,o,s,i,u,c,l){return Ur(e,t,n,r,a,o,s,Math.round(i),Math.round(u),c,l)}function Hr(e,t,n,r,a,o,s,i,u,c,l){const d=Math.floor(i),h=Math.floor(u),p=d+1,f=h+1;return(p-i)*((f-u)*Ur(e,t,n,r,a,o,s,d,h,c,l)+(u-h)*Ur(e,t,n,r,a,o,s,d,f,c,l))+(i-d)*((f-u)*Ur(e,t,n,r,a,o,s,p,h,c,l)+(u-h)*Ur(e,t,n,r,a,o,s,p,f,c,l))}var Kr=n(70);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qr={kernelName:r.Unique,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:o}=n,{x:s}=t;Object(a.a)(s,"unique");const i=r.data.get(s.dataId).values,{outputValues:u,outputShape:c,indices:l}=Object(Kr.a)(i,o,s.shape,s.dtype);return[r.makeTensorInfo(c,s.dtype,u),r.makeTensorInfo([l.length],"int32",l)]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xr={kernelName:r.Unpack,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:o}=r;o<0&&(o+=a.shape.length);const s=a.shape.length,i=a.shape[o],u=new Array(s-1);let c=0;for(let e=0;e<s;e++)e!==o&&(u[c++]=a.shape[e]);const l=new Array(s).fill(0),d=a.shape.slice();d[o]=1;const h=new Array(i);for(let e=0;e<h.length;e++){l[o]=e;const t=Object(oe.a)({inputs:{x:a},backend:n,attrs:{begin:l,size:d}});h[e]=I({inputs:{x:t},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(t)}return h}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yr={kernelName:r.UnsortedSegmentSum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{x:s,segmentIds:i}=t,{numSegments:u}=o;Object(a.a)(s,"unsortedSegmentSum");const c=[],l=[],d=s.shape.length-i.shape.length;let h=i;for(let e=0;e<d;++e){const t=rt({inputs:{input:h},backend:n,attrs:{dim:e+1}});h=t,l.push(t)}for(let e=0;e<u;++e){const t=r.util.createScalarValue(e,"int32"),a=n.makeTensorInfo([],"int32",t),o=He({inputs:{a:a,b:h},backend:n}),i=Object(ce.a)({inputs:{x:o},backend:n,attrs:{dtype:"float32"}}),u=Object(st.a)({inputs:{a:i,b:s},backend:n}),d=fn({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});c.push(d),l.push(a),l.push(o),l.push(i),l.push(u),l.push(d)}const p=Bn({inputs:c,backend:n,attrs:{axis:0}});return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),p}},Qr=[$,S.a,N,A,w.b,R,j,D,M,P,L,z,U,q,Y,ee,te,ne,re,T,ae,se,ue,ce.b,le.a,he,pe.b,fe,ke,Ie,Oe,we,Te,$e,Ce,Ee,_e,Ae,Re,Fe,je,Me,Pe,Be,Le,We,Ve,ze,ct,c,Ue,Ke,tt,nt.b,at,ot.a,pt,mt,bt,gt.a,kt,yt,wt,It,Ct,Tt.a,Et,l.b,Nt,ge,At,Ft,Dt,h,Mt.a,Lt,zt,Vt.a,Gt,qt,Yt,Jt,en,tn,sn.a,un,cn,ln,dn,hn,on,bn,gn,xn.a,vn,wn,Tn,st.b,$n.a,En,_n,Rn,Fn.a,jn,Pn,Ln,Wn,Un,b,Gn.a,Kn,xe.b,Xn,x,k,O,Yn,Qn,Zn,Jn,er,tr,rr,ar.a,sr,ir,dr,pr,mr,gr,vr,oe.b,Cn,wr,Ir,Or,Cr,$r,Sr,Er.a,_r,Rr,lt.b,mn,jr,Mr,Br,Wr,F.b,zr,qr,Xr,Yr,Mn];
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */for(const e of Qr)Object(r.registerKernel)(e);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */},,,function(e,t,n){e.exports=n(82)},function(e,t,n){"use strict";n.r(t),function(e){var t=n(75),r=n(73),a=n(39),o=n(74),s=n(71),i=n(14);null==navigator.ml&&(navigator.ml=new t.a),null==e.ML&&(e.ML=t.a),null==e.NeuralNetworkContext&&(e.NeuralNetworkContext=s.a),null==e.ModelBuilder&&(e.ModelBuilder=o.e),null==e.Model&&(e.Model=a.a),null==e.Compilation&&(e.Compilation=r.a),null==e.Operand&&(e.Operand=i.c)}.call(this,n(41))},function(e,t,n){"use strict";(function(e){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
var r=n(84),a=n(85),o=n(86);function s(){return u.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function i(e,t){if(s()<t)throw new RangeError("Invalid typed array length");return u.TYPED_ARRAY_SUPPORT?(e=new Uint8Array(t)).__proto__=u.prototype:(null===e&&(e=new u(t)),e.length=t),e}function u(e,t,n){if(!(u.TYPED_ARRAY_SUPPORT||this instanceof u))return new u(e,t,n);if("number"==typeof e){if("string"==typeof t)throw new Error("If encoding is specified then the first argument must be a string");return d(this,e)}return c(this,e,t,n)}function c(e,t,n,r){if("number"==typeof t)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer?function(e,t,n,r){if(t.byteLength,n<0||t.byteLength<n)throw new RangeError("'offset' is out of bounds");if(t.byteLength<n+(r||0))throw new RangeError("'length' is out of bounds");t=void 0===n&&void 0===r?new Uint8Array(t):void 0===r?new Uint8Array(t,n):new Uint8Array(t,n,r);u.TYPED_ARRAY_SUPPORT?(e=t).__proto__=u.prototype:e=h(e,t);return e}(e,t,n,r):"string"==typeof t?function(e,t,n){"string"==typeof n&&""!==n||(n="utf8");if(!u.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var r=0|f(t,n),a=(e=i(e,r)).write(t,n);a!==r&&(e=e.slice(0,a));return e}(e,t,n):function(e,t){if(u.isBuffer(t)){var n=0|p(t.length);return 0===(e=i(e,n)).length||t.copy(e,0,0,n),e}if(t){if("undefined"!=typeof ArrayBuffer&&t.buffer instanceof ArrayBuffer||"length"in t)return"number"!=typeof t.length||(r=t.length)!=r?i(e,0):h(e,t);if("Buffer"===t.type&&o(t.data))return h(e,t.data)}var r;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(e,t)}function l(e){if("number"!=typeof e)throw new TypeError('"size" argument must be a number');if(e<0)throw new RangeError('"size" argument must not be negative')}function d(e,t){if(l(t),e=i(e,t<0?0:0|p(t)),!u.TYPED_ARRAY_SUPPORT)for(var n=0;n<t;++n)e[n]=0;return e}function h(e,t){var n=t.length<0?0:0|p(t.length);e=i(e,n);for(var r=0;r<n;r+=1)e[r]=255&t[r];return e}function p(e){if(e>=s())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+s().toString(16)+" bytes");return 0|e}function f(e,t){if(u.isBuffer(e))return e.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!=typeof e&&(e=""+e);var n=e.length;if(0===n)return 0;for(var r=!1;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return L(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return W(e).length;default:if(r)return L(e).length;t=(""+t).toLowerCase(),r=!0}}function m(e,t,n){var r=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return E(this,t,n);case"utf8":case"utf-8":return T(this,t,n);case"ascii":return $(this,t,n);case"latin1":case"binary":return S(this,t,n);case"base64":return C(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return N(this,t,n);default:if(r)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),r=!0}}function b(e,t,n){var r=e[t];e[t]=e[n],e[n]=r}function g(e,t,n,r,a){if(0===e.length)return-1;if("string"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=a?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(a)return-1;n=e.length-1}else if(n<0){if(!a)return-1;n=0}if("string"==typeof t&&(t=u.from(t,r)),u.isBuffer(t))return 0===t.length?-1:x(e,t,n,r,a);if("number"==typeof t)return t&=255,u.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?a?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):x(e,[t],n,r,a);throw new TypeError("val must be string, number or Buffer")}function x(e,t,n,r,a){var o,s=1,i=e.length,u=t.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(e.length<2||t.length<2)return-1;s=2,i/=2,u/=2,n/=2}function c(e,t){return 1===s?e[t]:e.readUInt16BE(t*s)}if(a){var l=-1;for(o=n;o<i;o++)if(c(e,o)===c(t,-1===l?0:o-l)){if(-1===l&&(l=o),o-l+1===u)return l*s}else-1!==l&&(o-=o-l),l=-1}else for(n+u>i&&(n=i-u),o=n;o>=0;o--){for(var d=!0,h=0;h<u;h++)if(c(e,o+h)!==c(t,h)){d=!1;break}if(d)return o}return-1}function v(e,t,n,r){n=Number(n)||0;var a=e.length-n;r?(r=Number(r))>a&&(r=a):r=a;var o=t.length;if(o%2!=0)throw new TypeError("Invalid hex string");r>o/2&&(r=o/2);for(var s=0;s<r;++s){var i=parseInt(t.substr(2*s,2),16);if(isNaN(i))return s;e[n+s]=i}return s}function k(e,t,n,r){return z(L(t,e.length-n),e,n,r)}function y(e,t,n,r){return z(function(e){for(var t=[],n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}(t),e,n,r)}function w(e,t,n,r){return y(e,t,n,r)}function I(e,t,n,r){return z(W(t),e,n,r)}function O(e,t,n,r){return z(function(e,t){for(var n,r,a,o=[],s=0;s<e.length&&!((t-=2)<0);++s)n=e.charCodeAt(s),r=n>>8,a=n%256,o.push(a),o.push(r);return o}(t,e.length-n),e,n,r)}function C(e,t,n){return 0===t&&n===e.length?r.fromByteArray(e):r.fromByteArray(e.slice(t,n))}function T(e,t,n){n=Math.min(e.length,n);for(var r=[],a=t;a<n;){var o,s,i,u,c=e[a],l=null,d=c>239?4:c>223?3:c>191?2:1;if(a+d<=n)switch(d){case 1:c<128&&(l=c);break;case 2:128==(192&(o=e[a+1]))&&(u=(31&c)<<6|63&o)>127&&(l=u);break;case 3:o=e[a+1],s=e[a+2],128==(192&o)&&128==(192&s)&&(u=(15&c)<<12|(63&o)<<6|63&s)>2047&&(u<55296||u>57343)&&(l=u);break;case 4:o=e[a+1],s=e[a+2],i=e[a+3],128==(192&o)&&128==(192&s)&&128==(192&i)&&(u=(15&c)<<18|(63&o)<<12|(63&s)<<6|63&i)>65535&&u<1114112&&(l=u)}null===l?(l=65533,d=1):l>65535&&(l-=65536,r.push(l>>>10&1023|55296),l=56320|1023&l),r.push(l),a+=d}return function(e){var t=e.length;if(t<=4096)return String.fromCharCode.apply(String,e);var n="",r=0;for(;r<t;)n+=String.fromCharCode.apply(String,e.slice(r,r+=4096));return n}(r)}t.Buffer=u,t.SlowBuffer=function(e){+e!=e&&(e=0);return u.alloc(+e)},t.INSPECT_MAX_BYTES=50,u.TYPED_ARRAY_SUPPORT=void 0!==e.TYPED_ARRAY_SUPPORT?e.TYPED_ARRAY_SUPPORT:function(){try{var e=new Uint8Array(1);return e.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===e.foo()&&"function"==typeof e.subarray&&0===e.subarray(1,1).byteLength}catch(e){return!1}}(),t.kMaxLength=s(),u.poolSize=8192,u._augment=function(e){return e.__proto__=u.prototype,e},u.from=function(e,t,n){return c(null,e,t,n)},u.TYPED_ARRAY_SUPPORT&&(u.prototype.__proto__=Uint8Array.prototype,u.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&u[Symbol.species]===u&&Object.defineProperty(u,Symbol.species,{value:null,configurable:!0})),u.alloc=function(e,t,n){return function(e,t,n,r){return l(t),t<=0?i(e,t):void 0!==n?"string"==typeof r?i(e,t).fill(n,r):i(e,t).fill(n):i(e,t)}(null,e,t,n)},u.allocUnsafe=function(e){return d(null,e)},u.allocUnsafeSlow=function(e){return d(null,e)},u.isBuffer=function(e){return!(null==e||!e._isBuffer)},u.compare=function(e,t){if(!u.isBuffer(e)||!u.isBuffer(t))throw new TypeError("Arguments must be Buffers");if(e===t)return 0;for(var n=e.length,r=t.length,a=0,o=Math.min(n,r);a<o;++a)if(e[a]!==t[a]){n=e[a],r=t[a];break}return n<r?-1:r<n?1:0},u.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},u.concat=function(e,t){if(!o(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return u.alloc(0);var n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;var r=u.allocUnsafe(t),a=0;for(n=0;n<e.length;++n){var s=e[n];if(!u.isBuffer(s))throw new TypeError('"list" argument must be an Array of Buffers');s.copy(r,a),a+=s.length}return r},u.byteLength=f,u.prototype._isBuffer=!0,u.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)b(this,t,t+1);return this},u.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)b(this,t,t+3),b(this,t+1,t+2);return this},u.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)b(this,t,t+7),b(this,t+1,t+6),b(this,t+2,t+5),b(this,t+3,t+4);return this},u.prototype.toString=function(){var e=0|this.length;return 0===e?"":0===arguments.length?T(this,0,e):m.apply(this,arguments)},u.prototype.equals=function(e){if(!u.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===u.compare(this,e)},u.prototype.inspect=function(){var e="",n=t.INSPECT_MAX_BYTES;return this.length>0&&(e=this.toString("hex",0,n).match(/.{2}/g).join(" "),this.length>n&&(e+=" ... ")),"<Buffer "+e+">"},u.prototype.compare=function(e,t,n,r,a){if(!u.isBuffer(e))throw new TypeError("Argument must be a Buffer");if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===r&&(r=0),void 0===a&&(a=this.length),t<0||n>e.length||r<0||a>this.length)throw new RangeError("out of range index");if(r>=a&&t>=n)return 0;if(r>=a)return-1;if(t>=n)return 1;if(this===e)return 0;for(var o=(a>>>=0)-(r>>>=0),s=(n>>>=0)-(t>>>=0),i=Math.min(o,s),c=this.slice(r,a),l=e.slice(t,n),d=0;d<i;++d)if(c[d]!==l[d]){o=c[d],s=l[d];break}return o<s?-1:s<o?1:0},u.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},u.prototype.indexOf=function(e,t,n){return g(this,e,t,n,!0)},u.prototype.lastIndexOf=function(e,t,n){return g(this,e,t,n,!1)},u.prototype.write=function(e,t,n,r){if(void 0===t)r="utf8",n=this.length,t=0;else if(void 0===n&&"string"==typeof t)r=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t|=0,isFinite(n)?(n|=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var a=this.length-t;if((void 0===n||n>a)&&(n=a),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var o=!1;;)switch(r){case"hex":return v(this,e,t,n);case"utf8":case"utf-8":return k(this,e,t,n);case"ascii":return y(this,e,t,n);case"latin1":case"binary":return w(this,e,t,n);case"base64":return I(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return O(this,e,t,n);default:if(o)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),o=!0}},u.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function $(e,t,n){var r="";n=Math.min(e.length,n);for(var a=t;a<n;++a)r+=String.fromCharCode(127&e[a]);return r}function S(e,t,n){var r="";n=Math.min(e.length,n);for(var a=t;a<n;++a)r+=String.fromCharCode(e[a]);return r}function E(e,t,n){var r=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>r)&&(n=r);for(var a="",o=t;o<n;++o)a+=B(e[o]);return a}function N(e,t,n){for(var r=e.slice(t,n),a="",o=0;o<r.length;o+=2)a+=String.fromCharCode(r[o]+256*r[o+1]);return a}function _(e,t,n){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function A(e,t,n,r,a,o){if(!u.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>a||t<o)throw new RangeError('"value" argument is out of bounds');if(n+r>e.length)throw new RangeError("Index out of range")}function R(e,t,n,r){t<0&&(t=65535+t+1);for(var a=0,o=Math.min(e.length-n,2);a<o;++a)e[n+a]=(t&255<<8*(r?a:1-a))>>>8*(r?a:1-a)}function F(e,t,n,r){t<0&&(t=4294967295+t+1);for(var a=0,o=Math.min(e.length-n,4);a<o;++a)e[n+a]=t>>>8*(r?a:3-a)&255}function j(e,t,n,r,a,o){if(n+r>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function D(e,t,n,r,o){return o||j(e,0,n,4),a.write(e,t,n,r,23,4),n+4}function M(e,t,n,r,o){return o||j(e,0,n,8),a.write(e,t,n,r,52,8),n+8}u.prototype.slice=function(e,t){var n,r=this.length;if((e=~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),(t=void 0===t?r:~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e),u.TYPED_ARRAY_SUPPORT)(n=this.subarray(e,t)).__proto__=u.prototype;else{var a=t-e;n=new u(a,void 0);for(var o=0;o<a;++o)n[o]=this[o+e]}return n},u.prototype.readUIntLE=function(e,t,n){e|=0,t|=0,n||_(e,t,this.length);for(var r=this[e],a=1,o=0;++o<t&&(a*=256);)r+=this[e+o]*a;return r},u.prototype.readUIntBE=function(e,t,n){e|=0,t|=0,n||_(e,t,this.length);for(var r=this[e+--t],a=1;t>0&&(a*=256);)r+=this[e+--t]*a;return r},u.prototype.readUInt8=function(e,t){return t||_(e,1,this.length),this[e]},u.prototype.readUInt16LE=function(e,t){return t||_(e,2,this.length),this[e]|this[e+1]<<8},u.prototype.readUInt16BE=function(e,t){return t||_(e,2,this.length),this[e]<<8|this[e+1]},u.prototype.readUInt32LE=function(e,t){return t||_(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},u.prototype.readUInt32BE=function(e,t){return t||_(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},u.prototype.readIntLE=function(e,t,n){e|=0,t|=0,n||_(e,t,this.length);for(var r=this[e],a=1,o=0;++o<t&&(a*=256);)r+=this[e+o]*a;return r>=(a*=128)&&(r-=Math.pow(2,8*t)),r},u.prototype.readIntBE=function(e,t,n){e|=0,t|=0,n||_(e,t,this.length);for(var r=t,a=1,o=this[e+--r];r>0&&(a*=256);)o+=this[e+--r]*a;return o>=(a*=128)&&(o-=Math.pow(2,8*t)),o},u.prototype.readInt8=function(e,t){return t||_(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},u.prototype.readInt16LE=function(e,t){t||_(e,2,this.length);var n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},u.prototype.readInt16BE=function(e,t){t||_(e,2,this.length);var n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},u.prototype.readInt32LE=function(e,t){return t||_(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},u.prototype.readInt32BE=function(e,t){return t||_(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},u.prototype.readFloatLE=function(e,t){return t||_(e,4,this.length),a.read(this,e,!0,23,4)},u.prototype.readFloatBE=function(e,t){return t||_(e,4,this.length),a.read(this,e,!1,23,4)},u.prototype.readDoubleLE=function(e,t){return t||_(e,8,this.length),a.read(this,e,!0,52,8)},u.prototype.readDoubleBE=function(e,t){return t||_(e,8,this.length),a.read(this,e,!1,52,8)},u.prototype.writeUIntLE=function(e,t,n,r){(e=+e,t|=0,n|=0,r)||A(this,e,t,n,Math.pow(2,8*n)-1,0);var a=1,o=0;for(this[t]=255&e;++o<n&&(a*=256);)this[t+o]=e/a&255;return t+n},u.prototype.writeUIntBE=function(e,t,n,r){(e=+e,t|=0,n|=0,r)||A(this,e,t,n,Math.pow(2,8*n)-1,0);var a=n-1,o=1;for(this[t+a]=255&e;--a>=0&&(o*=256);)this[t+a]=e/o&255;return t+n},u.prototype.writeUInt8=function(e,t,n){return e=+e,t|=0,n||A(this,e,t,1,255,0),u.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[t]=255&e,t+1},u.prototype.writeUInt16LE=function(e,t,n){return e=+e,t|=0,n||A(this,e,t,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):R(this,e,t,!0),t+2},u.prototype.writeUInt16BE=function(e,t,n){return e=+e,t|=0,n||A(this,e,t,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):R(this,e,t,!1),t+2},u.prototype.writeUInt32LE=function(e,t,n){return e=+e,t|=0,n||A(this,e,t,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e):F(this,e,t,!0),t+4},u.prototype.writeUInt32BE=function(e,t,n){return e=+e,t|=0,n||A(this,e,t,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):F(this,e,t,!1),t+4},u.prototype.writeIntLE=function(e,t,n,r){if(e=+e,t|=0,!r){var a=Math.pow(2,8*n-1);A(this,e,t,n,a-1,-a)}var o=0,s=1,i=0;for(this[t]=255&e;++o<n&&(s*=256);)e<0&&0===i&&0!==this[t+o-1]&&(i=1),this[t+o]=(e/s>>0)-i&255;return t+n},u.prototype.writeIntBE=function(e,t,n,r){if(e=+e,t|=0,!r){var a=Math.pow(2,8*n-1);A(this,e,t,n,a-1,-a)}var o=n-1,s=1,i=0;for(this[t+o]=255&e;--o>=0&&(s*=256);)e<0&&0===i&&0!==this[t+o+1]&&(i=1),this[t+o]=(e/s>>0)-i&255;return t+n},u.prototype.writeInt8=function(e,t,n){return e=+e,t|=0,n||A(this,e,t,1,127,-128),u.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[t]=255&e,t+1},u.prototype.writeInt16LE=function(e,t,n){return e=+e,t|=0,n||A(this,e,t,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):R(this,e,t,!0),t+2},u.prototype.writeInt16BE=function(e,t,n){return e=+e,t|=0,n||A(this,e,t,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):R(this,e,t,!1),t+2},u.prototype.writeInt32LE=function(e,t,n){return e=+e,t|=0,n||A(this,e,t,4,2147483647,-2147483648),u.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24):F(this,e,t,!0),t+4},u.prototype.writeInt32BE=function(e,t,n){return e=+e,t|=0,n||A(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):F(this,e,t,!1),t+4},u.prototype.writeFloatLE=function(e,t,n){return D(this,e,t,!0,n)},u.prototype.writeFloatBE=function(e,t,n){return D(this,e,t,!1,n)},u.prototype.writeDoubleLE=function(e,t,n){return M(this,e,t,!0,n)},u.prototype.writeDoubleBE=function(e,t,n){return M(this,e,t,!1,n)},u.prototype.copy=function(e,t,n,r){if(n||(n=0),r||0===r||(r=this.length),t>=e.length&&(t=e.length),t||(t=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);var a,o=r-n;if(this===e&&n<t&&t<r)for(a=o-1;a>=0;--a)e[a+t]=this[a+n];else if(o<1e3||!u.TYPED_ARRAY_SUPPORT)for(a=0;a<o;++a)e[a+t]=this[a+n];else Uint8Array.prototype.set.call(e,this.subarray(n,n+o),t);return o},u.prototype.fill=function(e,t,n,r){if("string"==typeof e){if("string"==typeof t?(r=t,t=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),1===e.length){var a=e.charCodeAt(0);a<256&&(e=a)}if(void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!u.isEncoding(r))throw new TypeError("Unknown encoding: "+r)}else"number"==typeof e&&(e&=255);if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;var o;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"==typeof e)for(o=t;o<n;++o)this[o]=e;else{var s=u.isBuffer(e)?e:L(new u(e,r).toString()),i=s.length;for(o=0;o<n-t;++o)this[o+t]=s[o%i]}return this};var P=/[^+\/0-9A-Za-z-_]/g;function B(e){return e<16?"0"+e.toString(16):e.toString(16)}function L(e,t){var n;t=t||1/0;for(var r=e.length,a=null,o=[],s=0;s<r;++s){if((n=e.charCodeAt(s))>55295&&n<57344){if(!a){if(n>56319){(t-=3)>-1&&o.push(239,191,189);continue}if(s+1===r){(t-=3)>-1&&o.push(239,191,189);continue}a=n;continue}if(n<56320){(t-=3)>-1&&o.push(239,191,189),a=n;continue}n=65536+(a-55296<<10|n-56320)}else a&&(t-=3)>-1&&o.push(239,191,189);if(a=null,n<128){if((t-=1)<0)break;o.push(n)}else if(n<2048){if((t-=2)<0)break;o.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;o.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;o.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return o}function W(e){return r.toByteArray(function(e){if((e=function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}(e).replace(P,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function z(e,t,n,r){for(var a=0;a<r&&!(a+n>=t.length||a>=e.length);++a)t[a+n]=e[a];return a}}).call(this,n(41))},function(e,t,n){"use strict";t.byteLength=function(e){var t=c(e),n=t[0],r=t[1];return 3*(n+r)/4-r},t.toByteArray=function(e){var t,n,r=c(e),s=r[0],i=r[1],u=new o(function(e,t,n){return 3*(t+n)/4-n}(0,s,i)),l=0,d=i>0?s-4:s;for(n=0;n<d;n+=4)t=a[e.charCodeAt(n)]<<18|a[e.charCodeAt(n+1)]<<12|a[e.charCodeAt(n+2)]<<6|a[e.charCodeAt(n+3)],u[l++]=t>>16&255,u[l++]=t>>8&255,u[l++]=255&t;2===i&&(t=a[e.charCodeAt(n)]<<2|a[e.charCodeAt(n+1)]>>4,u[l++]=255&t);1===i&&(t=a[e.charCodeAt(n)]<<10|a[e.charCodeAt(n+1)]<<4|a[e.charCodeAt(n+2)]>>2,u[l++]=t>>8&255,u[l++]=255&t);return u},t.fromByteArray=function(e){for(var t,n=e.length,a=n%3,o=[],s=0,i=n-a;s<i;s+=16383)o.push(l(e,s,s+16383>i?i:s+16383));1===a?(t=e[n-1],o.push(r[t>>2]+r[t<<4&63]+"==")):2===a&&(t=(e[n-2]<<8)+e[n-1],o.push(r[t>>10]+r[t>>4&63]+r[t<<2&63]+"="));return o.join("")};for(var r=[],a=[],o="undefined"!=typeof Uint8Array?Uint8Array:Array,s="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",i=0,u=s.length;i<u;++i)r[i]=s[i],a[s.charCodeAt(i)]=i;function c(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=e.indexOf("=");return-1===n&&(n=t),[n,n===t?0:4-n%4]}function l(e,t,n){for(var a,o,s=[],i=t;i<n;i+=3)a=(e[i]<<16&16711680)+(e[i+1]<<8&65280)+(255&e[i+2]),s.push(r[(o=a)>>18&63]+r[o>>12&63]+r[o>>6&63]+r[63&o]);return s.join("")}a["-".charCodeAt(0)]=62,a["_".charCodeAt(0)]=63},function(e,t){
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
t.read=function(e,t,n,r,a){var o,s,i=8*a-r-1,u=(1<<i)-1,c=u>>1,l=-7,d=n?a-1:0,h=n?-1:1,p=e[t+d];for(d+=h,o=p&(1<<-l)-1,p>>=-l,l+=i;l>0;o=256*o+e[t+d],d+=h,l-=8);for(s=o&(1<<-l)-1,o>>=-l,l+=r;l>0;s=256*s+e[t+d],d+=h,l-=8);if(0===o)o=1-c;else{if(o===u)return s?NaN:1/0*(p?-1:1);s+=Math.pow(2,r),o-=c}return(p?-1:1)*s*Math.pow(2,o-r)},t.write=function(e,t,n,r,a,o){var s,i,u,c=8*o-a-1,l=(1<<c)-1,d=l>>1,h=23===a?Math.pow(2,-24)-Math.pow(2,-77):0,p=r?0:o-1,f=r?1:-1,m=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(i=isNaN(t)?1:0,s=l):(s=Math.floor(Math.log(t)/Math.LN2),t*(u=Math.pow(2,-s))<1&&(s--,u*=2),(t+=s+d>=1?h/u:h*Math.pow(2,1-d))*u>=2&&(s++,u/=2),s+d>=l?(i=0,s=l):s+d>=1?(i=(t*u-1)*Math.pow(2,a),s+=d):(i=t*Math.pow(2,d-1)*Math.pow(2,a),s=0));a>=8;e[n+p]=255&i,p+=f,i/=256,a-=8);for(s=s<<a|i,c+=a;c>0;e[n+p]=255&s,p+=f,s/=256,c-=8);e[n+p-f]|=128*m}},function(e,t){var n={}.toString;e.exports=Array.isArray||function(e){return"[object Array]"==n.call(e)}},function(e,t,n){"use strict";(function(e){var t=n(9);
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r=()=>n(88);let a;class o{constructor(){this.util=n(89),this.textEncoder=new this.util.TextEncoder}fetch(e,n){return null!=Object(t.c)().global.fetch?Object(t.c)().global.fetch(e,n):(null==a&&(a=r()),a(e,n))}now(){const t=e.hrtime();return 1e3*t[0]+t[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Node built-in encoder only supports utf-8, but got "+t);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}}Object(t.c)().get("IS_NODE")&&Object(t.c)().setPlatform("node",new o)}).call(this,n(45))},function(e,t){},function(e,t){},function(e,t,n){(function(e){var r;!function(e,a,o){function s(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new s(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n(24)&&n(36)?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.alea=u}(0,e,n(24))}).call(this,n(35)(e))},function(e,t,n){(function(e){var r;!function(e,a,o){function s(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n(24)&&n(36)?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor128=u}(0,e,n(24))}).call(this,n(35)(e))},function(e,t,n){(function(e){var r;!function(e,a,o){function s(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n(24)&&n(36)?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorwow=u}(0,e,n(24))}).call(this,n(35)(e))},function(e,t,n){(function(e){var r;!function(e,a,o){function s(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n(24)&&n(36)?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorshift7=u}(0,e,n(24))}).call(this,n(35)(e))},function(e,t,n){(function(e){var r;!function(e,a,o){function s(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,o=t.i;return t.w=r=r+1640531527|0,n=a[o+34&127],e=a[o=o+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[o]=n^e,t.i=o,n+(r^r>>>16)|0},function(e,t){var n,r,a,o,s,i=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,o=-32;o<u;++o)t&&(r^=t.charCodeAt((o+32)%t.length)),0===o&&(s=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,o>=0&&(s=s+1640531527|0,a=0==(n=i[127&o]^=r+s)?a+1:0);for(a>=128&&(i[127&(t&&t.length||0)]=-1),a=127,o=512;o>0;--o)r=i[a+34&127],n=i[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,i[a]=r^n;e.w=s,e.X=i,e.i=a}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n(24)&&n(36)?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor4096=u}(0,e,n(24))}).call(this,n(35)(e))},function(e,t,n){(function(e){var r;!function(e,a,o){function s(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n(24)&&n(36)?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.tychei=u}(0,e,n(24))}).call(this,n(35)(e))},function(e,t,n){var r;!function(a,o){var s,i=this,u=o.pow(256,6),c=o.pow(2,52),l=2*c;function d(e,t,n){var r=[],d=f(function e(t,n){var r,a=[],o=typeof t;if(n&&"object"==o)for(r in t)try{a.push(e(t[r],n-1))}catch(e){}return a.length?a:"string"==o?t:t+"\0"}((t=1==t?{entropy:!0}:t||{}).entropy?[e,m(a)]:null==e?function(){try{var e;return s&&(e=s.randomBytes)?e=e(256):(e=new Uint8Array(256),(i.crypto||i.msCrypto).getRandomValues(e)),m(e)}catch(e){var t=i.navigator,n=t&&t.plugins;return[+new Date,i,n,i.screen,m(a)]}}():e,3),r),b=new h(r),g=function(){for(var e=b.g(6),t=u,n=0;e<c;)e=256*(e+n),t*=256,n=b.g(1);for(;e>=l;)e/=2,t/=2,n>>>=1;return(e+n)/t};return g.int32=function(){return 0|b.g(4)},g.quick=function(){return b.g(4)/4294967296},g.double=g,f(m(b.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&p(r,b),e.state=function(){return p(b,{})}),n?(o.random=e,t):e})(g,d,"global"in t?t.global:this==o,t.state)}function h(e){var t,n=e.length,r=this,a=0,o=r.i=r.j=0,s=r.S=[];for(n||(e=[n++]);a<256;)s[a]=a++;for(a=0;a<256;a++)s[a]=s[o=255&o+e[a%n]+(t=s[a])],s[o]=t;(r.g=function(e){for(var t,n=0,a=r.i,o=r.j,s=r.S;e--;)t=s[a=255&a+1],n=256*n+s[255&(s[a]=s[o=255&o+t])+(s[o]=t)];return r.i=a,r.j=o,n})(256)}function p(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function f(e,t){for(var n,r=e+"",a=0;a<r.length;)t[255&a]=255&(n^=19*t[255&a])+r.charCodeAt(a++);return m(t)}function m(e){return String.fromCharCode.apply(0,e)}if(o.seedrandom=d,f(o.random(),a),e.exports){e.exports=d;try{s=n(97)}catch(e){}}else void 0===(r=function(){return d}.call(t,n,t,e))||(e.exports=r)}([],Math)},function(e,t){},function(e,t,n){(function(e){var r=void 0!==e&&e||"undefined"!=typeof self&&self||window,a=Function.prototype.apply;function o(e,t){this._id=e,this._clearFn=t}t.setTimeout=function(){return new o(a.call(setTimeout,r,arguments),clearTimeout)},t.setInterval=function(){return new o(a.call(setInterval,r,arguments),clearInterval)},t.clearTimeout=t.clearInterval=function(e){e&&e.close()},o.prototype.unref=o.prototype.ref=function(){},o.prototype.close=function(){this._clearFn.call(r,this._id)},t.enroll=function(e,t){clearTimeout(e._idleTimeoutId),e._idleTimeout=t},t.unenroll=function(e){clearTimeout(e._idleTimeoutId),e._idleTimeout=-1},t._unrefActive=t.active=function(e){clearTimeout(e._idleTimeoutId);var t=e._idleTimeout;t>=0&&(e._idleTimeoutId=setTimeout((function(){e._onTimeout&&e._onTimeout()}),t))},n(99),t.setImmediate="undefined"!=typeof self&&self.setImmediate||void 0!==e&&e.setImmediate||this&&this.setImmediate,t.clearImmediate="undefined"!=typeof self&&self.clearImmediate||void 0!==e&&e.clearImmediate||this&&this.clearImmediate}).call(this,n(41))},function(e,t,n){(function(e,t){!function(e,n){"use strict";if(!e.setImmediate){var r,a,o,s,i,u=1,c={},l=!1,d=e.document,h=Object.getPrototypeOf&&Object.getPrototypeOf(e);h=h&&h.setTimeout?h:e,"[object process]"==={}.toString.call(e.process)?r=function(e){t.nextTick((function(){f(e)}))}:!function(){if(e.postMessage&&!e.importScripts){var t=!0,n=e.onmessage;return e.onmessage=function(){t=!1},e.postMessage("","*"),e.onmessage=n,t}}()?e.MessageChannel?((o=new MessageChannel).port1.onmessage=function(e){f(e.data)},r=function(e){o.port2.postMessage(e)}):d&&"onreadystatechange"in d.createElement("script")?(a=d.documentElement,r=function(e){var t=d.createElement("script");t.onreadystatechange=function(){f(e),t.onreadystatechange=null,a.removeChild(t),t=null},a.appendChild(t)}):r=function(e){setTimeout(f,0,e)}:(s="setImmediate$"+Math.random()+"$",i=function(t){t.source===e&&"string"==typeof t.data&&0===t.data.indexOf(s)&&f(+t.data.slice(s.length))},e.addEventListener?e.addEventListener("message",i,!1):e.attachEvent("onmessage",i),r=function(t){e.postMessage(s+t,"*")}),h.setImmediate=function(e){"function"!=typeof e&&(e=new Function(""+e));for(var t=new Array(arguments.length-1),n=0;n<t.length;n++)t[n]=arguments[n+1];var a={callback:e,args:t};return c[u]=a,r(u),u++},h.clearImmediate=p}function p(e){delete c[e]}function f(e){if(l)setTimeout(f,0,e);else{var t=c[e];if(t){l=!0;try{!function(e){var t=e.callback,n=e.args;switch(n.length){case 0:t();break;case 1:t(n[0]);break;case 2:t(n[0],n[1]);break;case 3:t(n[0],n[1],n[2]);break;default:t.apply(void 0,n)}}(t)}finally{p(e),l=!1}}}}}("undefined"==typeof self?void 0===e?this:e:self)}).call(this,n(41),n(45))}]);
//# sourceMappingURL=webnn-polyfill.js.map